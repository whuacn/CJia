//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18010
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18010 版自动生成。
// 
#pragma warning disable 1591

namespace CJia.Net.Business.MobileMedical.EMRService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmrServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrDocSectionBase))]
    public partial class EmrService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddEmrDocBorrowOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrDocBorrowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocBorrowListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrPatientsBasicInfoByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchApproveEmrDocBorrowOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchRevokedEmrDocBorrowOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsValidityBorrowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyPatientInfoListForBorrowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMessageReadedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMessageReadedByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback MessageSynchronizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInitTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageEntityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUrgentMessageDocCreatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateCalculatonRuleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientInhosFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConmpareHisEMRDoctorQualifyDifferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTemplatexxxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplatIdByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicePathByCurNoTwoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClinicePathInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicePathInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicePathStatusByCureNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLisListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLisResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLisResultMicroOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRisListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRisResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRisInfoNewestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAbnormalLisResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrQulityControlDeptStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDocHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrDocHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrChiefComplaintByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrSpecialistInfoByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDocSectionContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDocSectionContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionContentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionContentListByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionContentListByCureNoWithParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDefaultWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDefaultWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWSBOUrgentAlarmByWardCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUrgentAlarmProcessStatusByIdListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocHistorysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVisitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrScoreTemplateByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrAutoScoreItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrAutoScoreItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScoreResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback QualityControlCheckForAddDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback QualityControlCheckForAuditDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlResultBeforeExpiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllQualityControlResultBeforeExpiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQualityControlReportTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSummaryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportByDepartNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoQualityControlRemindDataGeneratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatResponseDoctorGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatResponseDoctorGroupByDoctorGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatResponseDoctorGroupByDoctorGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatResponseDoctorGroupByDeptCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatResponseDoctorGroupByGroupNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistInPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrAffiliatedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmrAffiliatedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrAffiliatedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrAffiliatedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrAffiliatedAccountListOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrAffiliatedUserLoginForMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrAffiliatedAccountByAffCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrAffiliatedAccountListForLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrQualityControlReminderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrQualityControlReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrQualityControlReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistEmrQualityControlReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrQualityControlReminderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQualityControlApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQualityControlApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetQualityControlApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlApplyByQcInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlApplyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchApproveQualityControlApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxSortOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateListWithAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateAttributeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTemplateAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateAttributeByTemplateIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonDictionryListFirstDepthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonDictionryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCommonDictionryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDoctorQualifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmrDoctorQualifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrDoctorQualifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrDoctorQualifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDoctorByDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchQualifiedDoctorByWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchByDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDoctorByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperateLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrQulityControlDeptByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMRStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEMRStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQulityControlDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQulityControlDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDischaredPatientEmrDocStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrQulityControlDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrQulityControlDeptListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlDelaylistByWardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrReviewListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocReviewListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrQulityControlDocActivationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrMyPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrMyPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrMyPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrMyPatientsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPatientsByWardWhichIsLatestCureForMyPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatDoctorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCPCureNosByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCPCureNoStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyPatientInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyPatientInfoListByProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyPatientCureNoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoIntegratedListByProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoIntegratedListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyInputAssistantTreeViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralSymbolOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchEmrScoreTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrScoreTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrScoreTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchEmrScoreByContitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrScoreListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrScoreRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrScoreRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrScoreRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchScoreDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveScoreDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScoreDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrScoreRecordByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrScoreRecordByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetControlTimeConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlDelaylistByCureSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityControlDelaylistOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDelayItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDelayItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddControlTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationDateFromHISOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddControlCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchControlCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompleteMaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteControlCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContinueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchControlContinueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContinueMaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContinueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteControlContinueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMedicalImageLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMedicalImageLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicalImageLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrAllergicHistoryByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrAllergicHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrAllergicHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebConifgValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebConnectionStringsValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEncryptDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicePathByCurNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserIsInCPOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyPatientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyHZPatientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWardCaseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferPatientViewWhichIsLatestCureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdmitNoByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPatientViewWhichIsLatestCureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBedsWithPatientByWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddBedsByWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAddBedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAddBedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTodayDischargedPatientCountByWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoByCureNoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientBasicInfoByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPatientInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientIsDischargeByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientExtendBaseDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCachedPatientsListByWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfosByCureNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCureNosByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientDiagnosisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectDataForEmrWithParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrIdByCureNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionTitleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReviewEmrDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrDocSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocStructOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocsByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocsByCreateDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocSectionByTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDocExistedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDocPrintedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrDocPrintedListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocIsPrintedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCureNoByCheckerCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmrDocCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeStructureListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrTypeStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrTypeStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback SerializeEmrDataReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeserializeEmrDataReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTemplateListWithContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTemplateSectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrTemplateSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateBaseCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateCategoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxTemplateBaseQueueNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNearestQueueNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTemplateBaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrTemplateSectionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateSectionCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrTemplateSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxQueueNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrElementListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveElementCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteElementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDataReferenceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateRightListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEmrTTemplateRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrTemplateRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDictListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersDataRightListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersDataRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUsersDataRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUsersDataRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUsersDataRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocRightOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmrService() {
            this.Url = global::CJia.Net.Business.MobileMedical.Properties.Settings.Default.CJia_Net_Business_MobileMedical_EMRService_EmrService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddEmrDocBorrowCompletedEventHandler AddEmrDocBorrowCompleted;
        
        /// <remarks/>
        public event UpdateEmrDocBorrowCompletedEventHandler UpdateEmrDocBorrowCompleted;
        
        /// <remarks/>
        public event GetEmrDocBorrowListCompletedEventHandler GetEmrDocBorrowListCompleted;
        
        /// <remarks/>
        public event GetEmrPatientsBasicInfoByConditionCompletedEventHandler GetEmrPatientsBasicInfoByConditionCompleted;
        
        /// <remarks/>
        public event BatchApproveEmrDocBorrowCompletedEventHandler BatchApproveEmrDocBorrowCompleted;
        
        /// <remarks/>
        public event BatchRevokedEmrDocBorrowCompletedEventHandler BatchRevokedEmrDocBorrowCompleted;
        
        /// <remarks/>
        public event ExistsValidityBorrowCompletedEventHandler ExistsValidityBorrowCompleted;
        
        /// <remarks/>
        public event GetMyPatientInfoListForBorrowCompletedEventHandler GetMyPatientInfoListForBorrowCompleted;
        
        /// <remarks/>
        public event GetMessageListCompletedEventHandler GetMessageListCompleted;
        
        /// <remarks/>
        public event SetMessageReadedCompletedEventHandler SetMessageReadedCompleted;
        
        /// <remarks/>
        public event SetMessageReadedByGuidCompletedEventHandler SetMessageReadedByGuidCompleted;
        
        /// <remarks/>
        public event MessageSynchronizeCompletedEventHandler MessageSynchronizeCompleted;
        
        /// <remarks/>
        public event GetInitTimeCompletedEventHandler GetInitTimeCompleted;
        
        /// <remarks/>
        public event GetMessageEntityListCompletedEventHandler GetMessageEntityListCompleted;
        
        /// <remarks/>
        public event SetUrgentMessageDocCreatedCompletedEventHandler SetUrgentMessageDocCreatedCompleted;
        
        /// <remarks/>
        public event GetTemplateCalculatonRuleNameCompletedEventHandler GetTemplateCalculatonRuleNameCompleted;
        
        /// <remarks/>
        public event QueryPatientInhosFeeCompletedEventHandler QueryPatientInhosFeeCompleted;
        
        /// <remarks/>
        public event ConmpareHisEMRDoctorQualifyDifferenceCompletedEventHandler ConmpareHisEMRDoctorQualifyDifferenceCompleted;
        
        /// <remarks/>
        public event GetAllTemplatexxxCompletedEventHandler GetAllTemplatexxxCompleted;
        
        /// <remarks/>
        public event GetTemplatIdByNameCompletedEventHandler GetTemplatIdByNameCompleted;
        
        /// <remarks/>
        public event GetClinicePathByCurNoTwoCompletedEventHandler GetClinicePathByCurNoTwoCompleted;
        
        /// <remarks/>
        public event UpdateClinicePathInfoCompletedEventHandler UpdateClinicePathInfoCompleted;
        
        /// <remarks/>
        public event GetClinicePathInfoCompletedEventHandler GetClinicePathInfoCompleted;
        
        /// <remarks/>
        public event GetClinicePathStatusByCureNosCompletedEventHandler GetClinicePathStatusByCureNosCompleted;
        
        /// <remarks/>
        public event GetLisListCompletedEventHandler GetLisListCompleted;
        
        /// <remarks/>
        public event GetLisResultCompletedEventHandler GetLisResultCompleted;
        
        /// <remarks/>
        public event GetLisResultMicroCompletedEventHandler GetLisResultMicroCompleted;
        
        /// <remarks/>
        public event GetRisListCompletedEventHandler GetRisListCompleted;
        
        /// <remarks/>
        public event GetRisResultCompletedEventHandler GetRisResultCompleted;
        
        /// <remarks/>
        public event GetRisInfoNewestCompletedEventHandler GetRisInfoNewestCompleted;
        
        /// <remarks/>
        public event GetAbnormalLisResultCompletedEventHandler GetAbnormalLisResultCompleted;
        
        /// <remarks/>
        public event GetEmrQulityControlDeptStatusListCompletedEventHandler GetEmrQulityControlDeptStatusListCompleted;
        
        /// <remarks/>
        public event SaveEmrDocHtmlCompletedEventHandler SaveEmrDocHtmlCompleted;
        
        /// <remarks/>
        public event DeleteEmrDocHtmlCompletedEventHandler DeleteEmrDocHtmlCompleted;
        
        /// <remarks/>
        public event GetEmrDocHtmlCompletedEventHandler GetEmrDocHtmlCompleted;
        
        /// <remarks/>
        public event GetEmrChiefComplaintByCureNoCompletedEventHandler GetEmrChiefComplaintByCureNoCompleted;
        
        /// <remarks/>
        public event GetEmrSpecialistInfoByCureNoCompletedEventHandler GetEmrSpecialistInfoByCureNoCompleted;
        
        /// <remarks/>
        public event SaveEmrDocSectionContentCompletedEventHandler SaveEmrDocSectionContentCompleted;
        
        /// <remarks/>
        public event SaveEmrDocSectionContentsCompletedEventHandler SaveEmrDocSectionContentsCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionContentCompletedEventHandler GetEmrDocSectionContentCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionContentListCompletedEventHandler GetEmrDocSectionContentListCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionContentListByCureNoCompletedEventHandler GetEmrDocSectionContentListByCureNoCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionContentListByCureNoWithParamsCompletedEventHandler GetEmrDocSectionContentListByCureNoWithParamsCompleted;
        
        /// <remarks/>
        public event GetEmrDefaultWardCompletedEventHandler GetEmrDefaultWardCompleted;
        
        /// <remarks/>
        public event SaveEmrDefaultWardCompletedEventHandler SaveEmrDefaultWardCompleted;
        
        /// <remarks/>
        public event GetWSBOUrgentAlarmByWardCodeCompletedEventHandler GetWSBOUrgentAlarmByWardCodeCompleted;
        
        /// <remarks/>
        public event UpdateUrgentAlarmProcessStatusByIdListCompletedEventHandler UpdateUrgentAlarmProcessStatusByIdListCompleted;
        
        /// <remarks/>
        public event UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompletedEventHandler UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompleted;
        
        /// <remarks/>
        public event GetDocHistorysCompletedEventHandler GetDocHistorysCompleted;
        
        /// <remarks/>
        public event GetVisitListCompletedEventHandler GetVisitListCompleted;
        
        /// <remarks/>
        public event GetEmrScoreTemplateByTypeCompletedEventHandler GetEmrScoreTemplateByTypeCompleted;
        
        /// <remarks/>
        public event SaveEmrAutoScoreItemCompletedEventHandler SaveEmrAutoScoreItemCompleted;
        
        /// <remarks/>
        public event GetEmrAutoScoreItemListCompletedEventHandler GetEmrAutoScoreItemListCompleted;
        
        /// <remarks/>
        public event GetScoreCompletedEventHandler GetScoreCompleted;
        
        /// <remarks/>
        public event GetScoreResultCompletedEventHandler GetScoreResultCompleted;
        
        /// <remarks/>
        public event QualityControlCheckForAddDocCompletedEventHandler QualityControlCheckForAddDocCompleted;
        
        /// <remarks/>
        public event QualityControlCheckForAuditDocCompletedEventHandler QualityControlCheckForAuditDocCompleted;
        
        /// <remarks/>
        public event GetQualityControlResultCompletedEventHandler GetQualityControlResultCompleted;
        
        /// <remarks/>
        public event GetQualityControlResultBeforeExpiredCompletedEventHandler GetQualityControlResultBeforeExpiredCompleted;
        
        /// <remarks/>
        public event GetAllQualityControlResultBeforeExpiredCompletedEventHandler GetAllQualityControlResultBeforeExpiredCompleted;
        
        /// <remarks/>
        public event UpdateQualityControlReportTableCompletedEventHandler UpdateQualityControlReportTableCompleted;
        
        /// <remarks/>
        public event GetReportDataCompletedEventHandler GetReportDataCompleted;
        
        /// <remarks/>
        public event GetSummaryReportCompletedEventHandler GetSummaryReportCompleted;
        
        /// <remarks/>
        public event GetReportByDepartNameCompletedEventHandler GetReportByDepartNameCompleted;
        
        /// <remarks/>
        public event AutoQualityControlRemindDataGeneratorCompletedEventHandler AutoQualityControlRemindDataGeneratorCompleted;
        
        /// <remarks/>
        public event GetServerTimeCompletedEventHandler GetServerTimeCompleted;
        
        /// <remarks/>
        public event SavePatResponseDoctorGroupCompletedEventHandler SavePatResponseDoctorGroupCompleted;
        
        /// <remarks/>
        public event DeletePatResponseDoctorGroupByDoctorGroupIdCompletedEventHandler DeletePatResponseDoctorGroupByDoctorGroupIdCompleted;
        
        /// <remarks/>
        public event GetPatResponseDoctorGroupByDoctorGroupIdCompletedEventHandler GetPatResponseDoctorGroupByDoctorGroupIdCompleted;
        
        /// <remarks/>
        public event GetPatResponseDoctorGroupByDeptCodeCompletedEventHandler GetPatResponseDoctorGroupByDeptCodeCompleted;
        
        /// <remarks/>
        public event GetPatResponseDoctorGroupByGroupNameCompletedEventHandler GetPatResponseDoctorGroupByGroupNameCompleted;
        
        /// <remarks/>
        public event GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompletedEventHandler GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompleted;
        
        /// <remarks/>
        public event ExistInPatientsCompletedEventHandler ExistInPatientsCompleted;
        
        /// <remarks/>
        public event SaveEmrAffiliatedAccountCompletedEventHandler SaveEmrAffiliatedAccountCompleted;
        
        /// <remarks/>
        public event CheckEmrAffiliatedAccountCompletedEventHandler CheckEmrAffiliatedAccountCompleted;
        
        /// <remarks/>
        public event DeleteEmrAffiliatedAccountCompletedEventHandler DeleteEmrAffiliatedAccountCompleted;
        
        /// <remarks/>
        public event GetEmrAffiliatedAccountCompletedEventHandler GetEmrAffiliatedAccountCompleted;
        
        /// <remarks/>
        public event GetEmrAffiliatedAccountListCompletedEventHandler GetEmrAffiliatedAccountListCompleted;
        
        /// <remarks/>
        public event EmrAffiliatedUserLoginForMsgCompletedEventHandler EmrAffiliatedUserLoginForMsgCompleted;
        
        /// <remarks/>
        public event GetEmrAffiliatedAccountByAffCodeCompletedEventHandler GetEmrAffiliatedAccountByAffCodeCompleted;
        
        /// <remarks/>
        public event GetEmrAffiliatedAccountListForLoginCompletedEventHandler GetEmrAffiliatedAccountListForLoginCompleted;
        
        /// <remarks/>
        public event GetEmrQualityControlReminderListCompletedEventHandler GetEmrQualityControlReminderListCompleted;
        
        /// <remarks/>
        public event SaveEmrQualityControlReminderCompletedEventHandler SaveEmrQualityControlReminderCompleted;
        
        /// <remarks/>
        public event DeleteEmrQualityControlReminderCompletedEventHandler DeleteEmrQualityControlReminderCompleted;
        
        /// <remarks/>
        public event ExistEmrQualityControlReminderCompletedEventHandler ExistEmrQualityControlReminderCompleted;
        
        /// <remarks/>
        public event UpdateEmrQualityControlReminderListCompletedEventHandler UpdateEmrQualityControlReminderListCompleted;
        
        /// <remarks/>
        public event AddQualityControlApplyCompletedEventHandler AddQualityControlApplyCompleted;
        
        /// <remarks/>
        public event UpdateQualityControlApplyCompletedEventHandler UpdateQualityControlApplyCompleted;
        
        /// <remarks/>
        public event SetQualityControlApplyCompletedEventHandler SetQualityControlApplyCompleted;
        
        /// <remarks/>
        public event GetQualityControlApplyCompletedEventHandler GetQualityControlApplyCompleted;
        
        /// <remarks/>
        public event GetQualityControlApplyByQcInfoCompletedEventHandler GetQualityControlApplyByQcInfoCompleted;
        
        /// <remarks/>
        public event GetQualityControlApplyListCompletedEventHandler GetQualityControlApplyListCompleted;
        
        /// <remarks/>
        public event BatchApproveQualityControlApplyCompletedEventHandler BatchApproveQualityControlApplyCompleted;
        
        /// <remarks/>
        public event GetMaxSortCompletedEventHandler GetMaxSortCompleted;
        
        /// <remarks/>
        public event GetMaxCodeCompletedEventHandler GetMaxCodeCompleted;
        
        /// <remarks/>
        public event GetTemplateListWithAttributesCompletedEventHandler GetTemplateListWithAttributesCompleted;
        
        /// <remarks/>
        public event GetTemplateAttributeListCompletedEventHandler GetTemplateAttributeListCompleted;
        
        /// <remarks/>
        public event SaveTemplateAttributeCompletedEventHandler SaveTemplateAttributeCompleted;
        
        /// <remarks/>
        public event DeleteTemplateAttributeCompletedEventHandler DeleteTemplateAttributeCompleted;
        
        /// <remarks/>
        public event GetTemplateAttributeByTemplateIDCompletedEventHandler GetTemplateAttributeByTemplateIDCompleted;
        
        /// <remarks/>
        public event GetCommonDictionryListFirstDepthCompletedEventHandler GetCommonDictionryListFirstDepthCompleted;
        
        /// <remarks/>
        public event GetCommonDictionryListCompletedEventHandler GetCommonDictionryListCompleted;
        
        /// <remarks/>
        public event SaveCommonDictionryCompletedEventHandler SaveCommonDictionryCompleted;
        
        /// <remarks/>
        public event GetDepartmentCompletedEventHandler GetDepartmentCompleted;
        
        /// <remarks/>
        public event SearchDoctorCompletedEventHandler SearchDoctorCompleted;
        
        /// <remarks/>
        public event SaveEmrDoctorQualifyCompletedEventHandler SaveEmrDoctorQualifyCompleted;
        
        /// <remarks/>
        public event AddEmrDoctorQualifyCompletedEventHandler AddEmrDoctorQualifyCompleted;
        
        /// <remarks/>
        public event DeleteEmrDoctorQualifyCompletedEventHandler DeleteEmrDoctorQualifyCompleted;
        
        /// <remarks/>
        public event UpdateEmrDoctorQualifyCompletedEventHandler UpdateEmrDoctorQualifyCompleted;
        
        /// <remarks/>
        public event SearchDoctorByDeptCompletedEventHandler SearchDoctorByDeptCompleted;
        
        /// <remarks/>
        public event SearchQualifiedDoctorByWardCompletedEventHandler SearchQualifiedDoctorByWardCompleted;
        
        /// <remarks/>
        public event SearchByDoctorCompletedEventHandler SearchByDoctorCompleted;
        
        /// <remarks/>
        public event SearchDoctorByNameCompletedEventHandler SearchDoctorByNameCompleted;
        
        /// <remarks/>
        public event GetLogByConditionCompletedEventHandler GetLogByConditionCompleted;
        
        /// <remarks/>
        public event AddOperateLogCompletedEventHandler AddOperateLogCompleted;
        
        /// <remarks/>
        public event GetEmrQulityControlDeptByConditionCompletedEventHandler GetEmrQulityControlDeptByConditionCompleted;
        
        /// <remarks/>
        public event GetEMRStatusCompletedEventHandler GetEMRStatusCompleted;
        
        /// <remarks/>
        public event UpdateEMRStatusCompletedEventHandler UpdateEMRStatusCompleted;
        
        /// <remarks/>
        public event SaveQulityControlDeptCompletedEventHandler SaveQulityControlDeptCompleted;
        
        /// <remarks/>
        public event DeleteQulityControlDeptCompletedEventHandler DeleteQulityControlDeptCompleted;
        
        /// <remarks/>
        public event SetDischaredPatientEmrDocStatusCompletedEventHandler SetDischaredPatientEmrDocStatusCompleted;
        
        /// <remarks/>
        public event GetEmrQulityControlDeptCompletedEventHandler GetEmrQulityControlDeptCompleted;
        
        /// <remarks/>
        public event GetEmrQulityControlDeptListCompletedEventHandler GetEmrQulityControlDeptListCompleted;
        
        /// <remarks/>
        public event GetQualityControlDelaylistByWardNoCompletedEventHandler GetQualityControlDelaylistByWardNoCompleted;
        
        /// <remarks/>
        public event GetEmrReviewListCompletedEventHandler GetEmrReviewListCompleted;
        
        /// <remarks/>
        public event GetDocReviewListCompletedEventHandler GetDocReviewListCompleted;
        
        /// <remarks/>
        public event GetEmrQulityControlDocActivationListCompletedEventHandler GetEmrQulityControlDocActivationListCompleted;
        
        /// <remarks/>
        public event ActivateDocCompletedEventHandler ActivateDocCompleted;
        
        /// <remarks/>
        public event SaveEmrMyPatientsCompletedEventHandler SaveEmrMyPatientsCompleted;
        
        /// <remarks/>
        public event DeleteEmrMyPatientsCompletedEventHandler DeleteEmrMyPatientsCompleted;
        
        /// <remarks/>
        public event GetEmrMyPatientsCompletedEventHandler GetEmrMyPatientsCompleted;
        
        /// <remarks/>
        public event GetEmrMyPatientsListCompletedEventHandler GetEmrMyPatientsListCompleted;
        
        /// <remarks/>
        public event GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompletedEventHandler GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompleted;
        
        /// <remarks/>
        public event GetDocStatusListCompletedEventHandler GetDocStatusListCompleted;
        
        /// <remarks/>
        public event GetTreatDoctorsCompletedEventHandler GetTreatDoctorsCompleted;
        
        /// <remarks/>
        public event GetCPCureNosByStatusCompletedEventHandler GetCPCureNosByStatusCompleted;
        
        /// <remarks/>
        public event GetCPCureNoStatusListCompletedEventHandler GetCPCureNoStatusListCompleted;
        
        /// <remarks/>
        public event GetMyPatientInfoListCompletedEventHandler GetMyPatientInfoListCompleted;
        
        /// <remarks/>
        public event GetMyPatientInfoListByProcCompletedEventHandler GetMyPatientInfoListByProcCompleted;
        
        /// <remarks/>
        public event GetMyPatientCureNoListCompletedEventHandler GetMyPatientCureNoListCompleted;
        
        /// <remarks/>
        public event GetPatientInfoIntegratedListByProcCompletedEventHandler GetPatientInfoIntegratedListByProcCompleted;
        
        /// <remarks/>
        public event GetPatientInfoIntegratedListCompletedEventHandler GetPatientInfoIntegratedListCompleted;
        
        /// <remarks/>
        public event GetMyInputAssistantTreeViewCompletedEventHandler GetMyInputAssistantTreeViewCompleted;
        
        /// <remarks/>
        public event GetGeneralSymbolCompletedEventHandler GetGeneralSymbolCompleted;
        
        /// <remarks/>
        public event SearchEmrScoreTypeCompletedEventHandler SearchEmrScoreTypeCompleted;
        
        /// <remarks/>
        public event SaveEmrScoreTypeCompletedEventHandler SaveEmrScoreTypeCompleted;
        
        /// <remarks/>
        public event DeleteEmrScoreTypeCompletedEventHandler DeleteEmrScoreTypeCompleted;
        
        /// <remarks/>
        public event SearchEmrScoreByContitionCompletedEventHandler SearchEmrScoreByContitionCompleted;
        
        /// <remarks/>
        public event SaveEmrScoreCompletedEventHandler SaveEmrScoreCompleted;
        
        /// <remarks/>
        public event DeleteEmrScoreCompletedEventHandler DeleteEmrScoreCompleted;
        
        /// <remarks/>
        public event SaveEmrScoreListCompletedEventHandler SaveEmrScoreListCompleted;
        
        /// <remarks/>
        public event DeleteEmrScoreRecordCompletedEventHandler DeleteEmrScoreRecordCompleted;
        
        /// <remarks/>
        public event GetEmrScoreRecordCompletedEventHandler GetEmrScoreRecordCompleted;
        
        /// <remarks/>
        public event SaveEmrScoreRecordCompletedEventHandler SaveEmrScoreRecordCompleted;
        
        /// <remarks/>
        public event SearchScoreDocCompletedEventHandler SearchScoreDocCompleted;
        
        /// <remarks/>
        public event SaveScoreDocCompletedEventHandler SaveScoreDocCompleted;
        
        /// <remarks/>
        public event DeleteScoreDocCompletedEventHandler DeleteScoreDocCompleted;
        
        /// <remarks/>
        public event DeleteEmrScoreRecordByCureNoCompletedEventHandler DeleteEmrScoreRecordByCureNoCompleted;
        
        /// <remarks/>
        public event GetEmrScoreRecordByCureNoCompletedEventHandler GetEmrScoreRecordByCureNoCompleted;
        
        /// <remarks/>
        public event GetControlTimeConfigCompletedEventHandler GetControlTimeConfigCompleted;
        
        /// <remarks/>
        public event GetQualityControlDelaylistByCureSectionCompletedEventHandler GetQualityControlDelaylistByCureSectionCompleted;
        
        /// <remarks/>
        public event GetQualityControlDelaylistCompletedEventHandler GetQualityControlDelaylistCompleted;
        
        /// <remarks/>
        public event AddDelayItemCompletedEventHandler AddDelayItemCompleted;
        
        /// <remarks/>
        public event UpdateDelayItemCompletedEventHandler UpdateDelayItemCompleted;
        
        /// <remarks/>
        public event AddControlTimeCompletedEventHandler AddControlTimeCompleted;
        
        /// <remarks/>
        public event GetOperationDateFromHISCompletedEventHandler GetOperationDateFromHISCompleted;
        
        /// <remarks/>
        public event AddControlCompleteCompletedEventHandler AddControlCompleteCompleted;
        
        /// <remarks/>
        public event SearchControlCompleteCompletedEventHandler SearchControlCompleteCompleted;
        
        /// <remarks/>
        public event GetCompleteMaxIdCompletedEventHandler GetCompleteMaxIdCompleted;
        
        /// <remarks/>
        public event UpdateCompleteCompletedEventHandler UpdateCompleteCompleted;
        
        /// <remarks/>
        public event DeleteControlCompleteCompletedEventHandler DeleteControlCompleteCompleted;
        
        /// <remarks/>
        public event AddContinueCompletedEventHandler AddContinueCompleted;
        
        /// <remarks/>
        public event SearchControlContinueCompletedEventHandler SearchControlContinueCompleted;
        
        /// <remarks/>
        public event GetContinueMaxIdCompletedEventHandler GetContinueMaxIdCompleted;
        
        /// <remarks/>
        public event UpdateContinueCompletedEventHandler UpdateContinueCompleted;
        
        /// <remarks/>
        public event DeleteControlContinueCompletedEventHandler DeleteControlContinueCompleted;
        
        /// <remarks/>
        public event SaveMedicalImageLibCompletedEventHandler SaveMedicalImageLibCompleted;
        
        /// <remarks/>
        public event DeleteMedicalImageLibCompletedEventHandler DeleteMedicalImageLibCompleted;
        
        /// <remarks/>
        public event GetMedicalImageLibCompletedEventHandler GetMedicalImageLibCompleted;
        
        /// <remarks/>
        public event GetEmrAllergicHistoryByCureNoCompletedEventHandler GetEmrAllergicHistoryByCureNoCompleted;
        
        /// <remarks/>
        public event SaveEmrAllergicHistoryCompletedEventHandler SaveEmrAllergicHistoryCompleted;
        
        /// <remarks/>
        public event DeleteEmrAllergicHistoryCompletedEventHandler DeleteEmrAllergicHistoryCompleted;
        
        /// <remarks/>
        public event GetWebConifgValueCompletedEventHandler GetWebConifgValueCompleted;
        
        /// <remarks/>
        public event GetWebConnectionStringsValueCompletedEventHandler GetWebConnectionStringsValueCompleted;
        
        /// <remarks/>
        public event GetPatientInfoDateTimeCompletedEventHandler GetPatientInfoDateTimeCompleted;
        
        /// <remarks/>
        public event SaveEncryptDocCompletedEventHandler SaveEncryptDocCompleted;
        
        /// <remarks/>
        public event GetClinicePathByCurNoCompletedEventHandler GetClinicePathByCurNoCompleted;
        
        /// <remarks/>
        public event CheckUserIsInCPCompletedEventHandler CheckUserIsInCPCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetMyPatientListCompletedEventHandler GetMyPatientListCompleted;
        
        /// <remarks/>
        public event GetMyHZPatientListCompletedEventHandler GetMyHZPatientListCompleted;
        
        /// <remarks/>
        public event GetWardCaseStatusCompletedEventHandler GetWardCaseStatusCompleted;
        
        /// <remarks/>
        public event GetTransferPatientViewWhichIsLatestCureCompletedEventHandler GetTransferPatientViewWhichIsLatestCureCompleted;
        
        /// <remarks/>
        public event ReadPhotoCompletedEventHandler ReadPhotoCompleted;
        
        /// <remarks/>
        public event GetAdmitNoByCureNoCompletedEventHandler GetAdmitNoByCureNoCompleted;
        
        /// <remarks/>
        public event GetAllPatientViewWhichIsLatestCureCompletedEventHandler GetAllPatientViewWhichIsLatestCureCompleted;
        
        /// <remarks/>
        public event GetBedsWithPatientByWardCompletedEventHandler GetBedsWithPatientByWardCompleted;
        
        /// <remarks/>
        public event GetAddBedsByWardCompletedEventHandler GetAddBedsByWardCompleted;
        
        /// <remarks/>
        public event DeleteAddBedsCompletedEventHandler DeleteAddBedsCompleted;
        
        /// <remarks/>
        public event InsertAddBedsCompletedEventHandler InsertAddBedsCompleted;
        
        /// <remarks/>
        public event GetTodayDischargedPatientCountByWardCompletedEventHandler GetTodayDischargedPatientCountByWardCompleted;
        
        /// <remarks/>
        public event GetPatientInfoByCureNoCompletedEventHandler GetPatientInfoByCureNoCompleted;
        
        /// <remarks/>
        public event GetPatientInfoByCureNoListCompletedEventHandler GetPatientInfoByCureNoListCompleted;
        
        /// <remarks/>
        public event GetPatientBasicInfoByCureNoCompletedEventHandler GetPatientBasicInfoByCureNoCompleted;
        
        /// <remarks/>
        public event GetAllPatientInfoListCompletedEventHandler GetAllPatientInfoListCompleted;
        
        /// <remarks/>
        public event ListAllWardCompletedEventHandler ListAllWardCompleted;
        
        /// <remarks/>
        public event GetCardNoCompletedEventHandler GetCardNoCompleted;
        
        /// <remarks/>
        public event PatientIsDischargeByCureNoCompletedEventHandler PatientIsDischargeByCureNoCompleted;
        
        /// <remarks/>
        public event GetPatientExtendBaseDataSetCompletedEventHandler GetPatientExtendBaseDataSetCompleted;
        
        /// <remarks/>
        public event DeleteCachedPatientsListByWardCompletedEventHandler DeleteCachedPatientsListByWardCompleted;
        
        /// <remarks/>
        public event GetPatientInfosByCureNosCompletedEventHandler GetPatientInfosByCureNosCompleted;
        
        /// <remarks/>
        public event GetCureNosByStatusCompletedEventHandler GetCureNosByStatusCompleted;
        
        /// <remarks/>
        public event GetPatientDiagnosisCompletedEventHandler GetPatientDiagnosisCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionsCompletedEventHandler GetEmrDocSectionsCompleted;
        
        /// <remarks/>
        public event ConnectDataForEmrWithParamCompletedEventHandler ConnectDataForEmrWithParamCompleted;
        
        /// <remarks/>
        public event GetEmrIdByCureNoCompletedEventHandler GetEmrIdByCureNoCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionCompletedEventHandler GetEmrDocSectionCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionTitleListCompletedEventHandler GetEmrDocSectionTitleListCompleted;
        
        /// <remarks/>
        public event SaveEmrDocCompletedEventHandler SaveEmrDocCompleted;
        
        /// <remarks/>
        public event ReviewEmrDocCompletedEventHandler ReviewEmrDocCompleted;
        
        /// <remarks/>
        public event DeleteEmrDocSectionCompletedEventHandler DeleteEmrDocSectionCompleted;
        
        /// <remarks/>
        public event GetEmrDocStructCompletedEventHandler GetEmrDocStructCompleted;
        
        /// <remarks/>
        public event GetDocsByConditionCompletedEventHandler GetDocsByConditionCompleted;
        
        /// <remarks/>
        public event GetDocsByCreateDateCompletedEventHandler GetDocsByCreateDateCompleted;
        
        /// <remarks/>
        public event GetEmrDocSectionByTemplateCompletedEventHandler GetEmrDocSectionByTemplateCompleted;
        
        /// <remarks/>
        public event CheckDocExistedCompletedEventHandler CheckDocExistedCompleted;
        
        /// <remarks/>
        public event SaveEmrDocPrintedCompletedEventHandler SaveEmrDocPrintedCompleted;
        
        /// <remarks/>
        public event SaveEmrDocPrintedListCompletedEventHandler SaveEmrDocPrintedListCompleted;
        
        /// <remarks/>
        public event DocIsPrintedCompletedEventHandler DocIsPrintedCompleted;
        
        /// <remarks/>
        public event GetCureNoByCheckerCodeCompletedEventHandler GetCureNoByCheckerCodeCompleted;
        
        /// <remarks/>
        public event AddEmrDocCheckCompletedEventHandler AddEmrDocCheckCompleted;
        
        /// <remarks/>
        public event GetDepartmentListCompletedEventHandler GetDepartmentListCompleted;
        
        /// <remarks/>
        public event GetTypeStructureListCompletedEventHandler GetTypeStructureListCompleted;
        
        /// <remarks/>
        public event SaveEmrTypeStructureCompletedEventHandler SaveEmrTypeStructureCompleted;
        
        /// <remarks/>
        public event DeleteEmrTypeStructureCompletedEventHandler DeleteEmrTypeStructureCompleted;
        
        /// <remarks/>
        public event SerializeEmrDataReferenceCompletedEventHandler SerializeEmrDataReferenceCompleted;
        
        /// <remarks/>
        public event DeserializeEmrDataReferenceCompletedEventHandler DeserializeEmrDataReferenceCompleted;
        
        /// <remarks/>
        public event SaveTemplateCategoryCompletedEventHandler SaveTemplateCategoryCompleted;
        
        /// <remarks/>
        public event SaveTemplateCompletedEventHandler SaveTemplateCompleted;
        
        /// <remarks/>
        public event GetEmrTemplateListCompletedEventHandler GetEmrTemplateListCompleted;
        
        /// <remarks/>
        public event DeleteEmrTemplateCompletedEventHandler DeleteEmrTemplateCompleted;
        
        /// <remarks/>
        public event GetAllTemplateListWithContentCompletedEventHandler GetAllTemplateListWithContentCompleted;
        
        /// <remarks/>
        public event GetAllTemplatesCompletedEventHandler GetAllTemplatesCompleted;
        
        /// <remarks/>
        public event GetAllTemplateSectionsCompletedEventHandler GetAllTemplateSectionsCompleted;
        
        /// <remarks/>
        public event GetAllElementsCompletedEventHandler GetAllElementsCompleted;
        
        /// <remarks/>
        public event GetEmrTemplateCompletedEventHandler GetEmrTemplateCompleted;
        
        /// <remarks/>
        public event GetEmrTemplateSectionCompletedEventHandler GetEmrTemplateSectionCompleted;
        
        /// <remarks/>
        public event SaveTemplateBaseCategoryCompletedEventHandler SaveTemplateBaseCategoryCompleted;
        
        /// <remarks/>
        public event SaveTemplateCategoryListCompletedEventHandler SaveTemplateCategoryListCompleted;
        
        /// <remarks/>
        public event GetMaxTemplateBaseQueueNoCompletedEventHandler GetMaxTemplateBaseQueueNoCompleted;
        
        /// <remarks/>
        public event GetNearestQueueNoCompletedEventHandler GetNearestQueueNoCompleted;
        
        /// <remarks/>
        public event DeleteTemplateBaseCompletedEventHandler DeleteTemplateBaseCompleted;
        
        /// <remarks/>
        public event GetEmrTemplateSectionListCompletedEventHandler GetEmrTemplateSectionListCompleted;
        
        /// <remarks/>
        public event SaveTemplateSectionCategoryCompletedEventHandler SaveTemplateSectionCategoryCompleted;
        
        /// <remarks/>
        public event SaveTemplateSectionCompletedEventHandler SaveTemplateSectionCompleted;
        
        /// <remarks/>
        public event DeleteEmrTemplateSectionCompletedEventHandler DeleteEmrTemplateSectionCompleted;
        
        /// <remarks/>
        public event GetMaxQueueNoCompletedEventHandler GetMaxQueueNoCompleted;
        
        /// <remarks/>
        public event GetEmrElementListCompletedEventHandler GetEmrElementListCompleted;
        
        /// <remarks/>
        public event GetEmrElementCompletedEventHandler GetEmrElementCompleted;
        
        /// <remarks/>
        public event SaveElementCategoryCompletedEventHandler SaveElementCategoryCompleted;
        
        /// <remarks/>
        public event SaveElementCompletedEventHandler SaveElementCompleted;
        
        /// <remarks/>
        public event DeleteElementCompletedEventHandler DeleteElementCompleted;
        
        /// <remarks/>
        public event GetEmrDataReferenceListCompletedEventHandler GetEmrDataReferenceListCompleted;
        
        /// <remarks/>
        public event GetTemplateRightListCompletedEventHandler GetTemplateRightListCompleted;
        
        /// <remarks/>
        public event SaveEmrTTemplateRightCompletedEventHandler SaveEmrTTemplateRightCompleted;
        
        /// <remarks/>
        public event DeleteEmrTemplateRightCompletedEventHandler DeleteEmrTemplateRightCompleted;
        
        /// <remarks/>
        public event GetEmrDictListCompletedEventHandler GetEmrDictListCompleted;
        
        /// <remarks/>
        public event GetUsersDataRightListCompletedEventHandler GetUsersDataRightListCompleted;
        
        /// <remarks/>
        public event GetUsersDataRightCompletedEventHandler GetUsersDataRightCompleted;
        
        /// <remarks/>
        public event SaveUsersDataRightCompletedEventHandler SaveUsersDataRightCompleted;
        
        /// <remarks/>
        public event AddUsersDataRightCompletedEventHandler AddUsersDataRightCompleted;
        
        /// <remarks/>
        public event DeleteUsersDataRightCompletedEventHandler DeleteUsersDataRightCompleted;
        
        /// <remarks/>
        public event GetDocRightCompletedEventHandler GetDocRightCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddEmrDocBorrow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddEmrDocBorrow(EmrDocBorrow model) {
            object[] results = this.Invoke("AddEmrDocBorrow", new object[] {
                        model});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmrDocBorrowAsync(EmrDocBorrow model) {
            this.AddEmrDocBorrowAsync(model, null);
        }
        
        /// <remarks/>
        public void AddEmrDocBorrowAsync(EmrDocBorrow model, object userState) {
            if ((this.AddEmrDocBorrowOperationCompleted == null)) {
                this.AddEmrDocBorrowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmrDocBorrowOperationCompleted);
            }
            this.InvokeAsync("AddEmrDocBorrow", new object[] {
                        model}, this.AddEmrDocBorrowOperationCompleted, userState);
        }
        
        private void OnAddEmrDocBorrowOperationCompleted(object arg) {
            if ((this.AddEmrDocBorrowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmrDocBorrowCompleted(this, new AddEmrDocBorrowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmrDocBorrow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmrDocBorrow(EmrDocBorrow model) {
            object[] results = this.Invoke("UpdateEmrDocBorrow", new object[] {
                        model});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrDocBorrowAsync(EmrDocBorrow model) {
            this.UpdateEmrDocBorrowAsync(model, null);
        }
        
        /// <remarks/>
        public void UpdateEmrDocBorrowAsync(EmrDocBorrow model, object userState) {
            if ((this.UpdateEmrDocBorrowOperationCompleted == null)) {
                this.UpdateEmrDocBorrowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrDocBorrowOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrDocBorrow", new object[] {
                        model}, this.UpdateEmrDocBorrowOperationCompleted, userState);
        }
        
        private void OnUpdateEmrDocBorrowOperationCompleted(object arg) {
            if ((this.UpdateEmrDocBorrowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrDocBorrowCompleted(this, new UpdateEmrDocBorrowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocBorrowList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultCollectionOfListOfEmrDocBorrow GetEmrDocBorrowList(EmrDocBorrowCondition condition) {
            object[] results = this.Invoke("GetEmrDocBorrowList", new object[] {
                        condition});
            return ((ResultCollectionOfListOfEmrDocBorrow)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocBorrowListAsync(EmrDocBorrowCondition condition) {
            this.GetEmrDocBorrowListAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetEmrDocBorrowListAsync(EmrDocBorrowCondition condition, object userState) {
            if ((this.GetEmrDocBorrowListOperationCompleted == null)) {
                this.GetEmrDocBorrowListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocBorrowListOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocBorrowList", new object[] {
                        condition}, this.GetEmrDocBorrowListOperationCompleted, userState);
        }
        
        private void OnGetEmrDocBorrowListOperationCompleted(object arg) {
            if ((this.GetEmrDocBorrowListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocBorrowListCompleted(this, new GetEmrDocBorrowListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrPatientsBasicInfoByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultCollectionOfListOfEmrPatientsBasicInfo GetEmrPatientsBasicInfoByCondition(EmrPatientsBasicInfoCondition condition) {
            object[] results = this.Invoke("GetEmrPatientsBasicInfoByCondition", new object[] {
                        condition});
            return ((ResultCollectionOfListOfEmrPatientsBasicInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrPatientsBasicInfoByConditionAsync(EmrPatientsBasicInfoCondition condition) {
            this.GetEmrPatientsBasicInfoByConditionAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetEmrPatientsBasicInfoByConditionAsync(EmrPatientsBasicInfoCondition condition, object userState) {
            if ((this.GetEmrPatientsBasicInfoByConditionOperationCompleted == null)) {
                this.GetEmrPatientsBasicInfoByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrPatientsBasicInfoByConditionOperationCompleted);
            }
            this.InvokeAsync("GetEmrPatientsBasicInfoByCondition", new object[] {
                        condition}, this.GetEmrPatientsBasicInfoByConditionOperationCompleted, userState);
        }
        
        private void OnGetEmrPatientsBasicInfoByConditionOperationCompleted(object arg) {
            if ((this.GetEmrPatientsBasicInfoByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrPatientsBasicInfoByConditionCompleted(this, new GetEmrPatientsBasicInfoByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchApproveEmrDocBorrow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult BatchApproveEmrDocBorrow(int[] idList, string ApproveUserCode, string ApproveUserName, int ApplyStatus, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> ValidityStart, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> ValidityEnd) {
            object[] results = this.Invoke("BatchApproveEmrDocBorrow", new object[] {
                        idList,
                        ApproveUserCode,
                        ApproveUserName,
                        ApplyStatus,
                        ValidityStart,
                        ValidityEnd});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void BatchApproveEmrDocBorrowAsync(int[] idList, string ApproveUserCode, string ApproveUserName, int ApplyStatus, System.Nullable<System.DateTime> ValidityStart, System.Nullable<System.DateTime> ValidityEnd) {
            this.BatchApproveEmrDocBorrowAsync(idList, ApproveUserCode, ApproveUserName, ApplyStatus, ValidityStart, ValidityEnd, null);
        }
        
        /// <remarks/>
        public void BatchApproveEmrDocBorrowAsync(int[] idList, string ApproveUserCode, string ApproveUserName, int ApplyStatus, System.Nullable<System.DateTime> ValidityStart, System.Nullable<System.DateTime> ValidityEnd, object userState) {
            if ((this.BatchApproveEmrDocBorrowOperationCompleted == null)) {
                this.BatchApproveEmrDocBorrowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchApproveEmrDocBorrowOperationCompleted);
            }
            this.InvokeAsync("BatchApproveEmrDocBorrow", new object[] {
                        idList,
                        ApproveUserCode,
                        ApproveUserName,
                        ApplyStatus,
                        ValidityStart,
                        ValidityEnd}, this.BatchApproveEmrDocBorrowOperationCompleted, userState);
        }
        
        private void OnBatchApproveEmrDocBorrowOperationCompleted(object arg) {
            if ((this.BatchApproveEmrDocBorrowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchApproveEmrDocBorrowCompleted(this, new BatchApproveEmrDocBorrowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchRevokedEmrDocBorrow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult BatchRevokedEmrDocBorrow(int[] idList, string RevokedUserCode, string RevokedUserName, int ApplyStatus) {
            object[] results = this.Invoke("BatchRevokedEmrDocBorrow", new object[] {
                        idList,
                        RevokedUserCode,
                        RevokedUserName,
                        ApplyStatus});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void BatchRevokedEmrDocBorrowAsync(int[] idList, string RevokedUserCode, string RevokedUserName, int ApplyStatus) {
            this.BatchRevokedEmrDocBorrowAsync(idList, RevokedUserCode, RevokedUserName, ApplyStatus, null);
        }
        
        /// <remarks/>
        public void BatchRevokedEmrDocBorrowAsync(int[] idList, string RevokedUserCode, string RevokedUserName, int ApplyStatus, object userState) {
            if ((this.BatchRevokedEmrDocBorrowOperationCompleted == null)) {
                this.BatchRevokedEmrDocBorrowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchRevokedEmrDocBorrowOperationCompleted);
            }
            this.InvokeAsync("BatchRevokedEmrDocBorrow", new object[] {
                        idList,
                        RevokedUserCode,
                        RevokedUserName,
                        ApplyStatus}, this.BatchRevokedEmrDocBorrowOperationCompleted, userState);
        }
        
        private void OnBatchRevokedEmrDocBorrowOperationCompleted(object arg) {
            if ((this.BatchRevokedEmrDocBorrowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchRevokedEmrDocBorrowCompleted(this, new BatchRevokedEmrDocBorrowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExistsValidityBorrow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsValidityBorrow(string CureNo, string UserCode) {
            object[] results = this.Invoke("ExistsValidityBorrow", new object[] {
                        CureNo,
                        UserCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsValidityBorrowAsync(string CureNo, string UserCode) {
            this.ExistsValidityBorrowAsync(CureNo, UserCode, null);
        }
        
        /// <remarks/>
        public void ExistsValidityBorrowAsync(string CureNo, string UserCode, object userState) {
            if ((this.ExistsValidityBorrowOperationCompleted == null)) {
                this.ExistsValidityBorrowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsValidityBorrowOperationCompleted);
            }
            this.InvokeAsync("ExistsValidityBorrow", new object[] {
                        CureNo,
                        UserCode}, this.ExistsValidityBorrowOperationCompleted, userState);
        }
        
        private void OnExistsValidityBorrowOperationCompleted(object arg) {
            if ((this.ExistsValidityBorrowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsValidityBorrowCompleted(this, new ExistsValidityBorrowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyPatientInfoListForBorrow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultCollectionOfListOfEmrMyPatients GetMyPatientInfoListForBorrow(EmrPatientsBasicInfoCondition condition, out int totalCount) {
            object[] results = this.Invoke("GetMyPatientInfoListForBorrow", new object[] {
                        condition});
            totalCount = ((int)(results[1]));
            return ((ResultCollectionOfListOfEmrMyPatients)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyPatientInfoListForBorrowAsync(EmrPatientsBasicInfoCondition condition) {
            this.GetMyPatientInfoListForBorrowAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetMyPatientInfoListForBorrowAsync(EmrPatientsBasicInfoCondition condition, object userState) {
            if ((this.GetMyPatientInfoListForBorrowOperationCompleted == null)) {
                this.GetMyPatientInfoListForBorrowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyPatientInfoListForBorrowOperationCompleted);
            }
            this.InvokeAsync("GetMyPatientInfoListForBorrow", new object[] {
                        condition}, this.GetMyPatientInfoListForBorrowOperationCompleted, userState);
        }
        
        private void OnGetMyPatientInfoListForBorrowOperationCompleted(object arg) {
            if ((this.GetMyPatientInfoListForBorrowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyPatientInfoListForBorrowCompleted(this, new GetMyPatientInfoListForBorrowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessageList(string lastTimeSpan, bool needForceRefresh, string msgLevels) {
            object[] results = this.Invoke("GetMessageList", new object[] {
                        lastTimeSpan,
                        needForceRefresh,
                        msgLevels});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageListAsync(string lastTimeSpan, bool needForceRefresh, string msgLevels) {
            this.GetMessageListAsync(lastTimeSpan, needForceRefresh, msgLevels, null);
        }
        
        /// <remarks/>
        public void GetMessageListAsync(string lastTimeSpan, bool needForceRefresh, string msgLevels, object userState) {
            if ((this.GetMessageListOperationCompleted == null)) {
                this.GetMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageListOperationCompleted);
            }
            this.InvokeAsync("GetMessageList", new object[] {
                        lastTimeSpan,
                        needForceRefresh,
                        msgLevels}, this.GetMessageListOperationCompleted, userState);
        }
        
        private void OnGetMessageListOperationCompleted(object arg) {
            if ((this.GetMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageListCompleted(this, new GetMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMessageReaded", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetMessageReaded(string msgType, string reportNo, string sampleNo) {
            this.Invoke("SetMessageReaded", new object[] {
                        msgType,
                        reportNo,
                        sampleNo});
        }
        
        /// <remarks/>
        public void SetMessageReadedAsync(string msgType, string reportNo, string sampleNo) {
            this.SetMessageReadedAsync(msgType, reportNo, sampleNo, null);
        }
        
        /// <remarks/>
        public void SetMessageReadedAsync(string msgType, string reportNo, string sampleNo, object userState) {
            if ((this.SetMessageReadedOperationCompleted == null)) {
                this.SetMessageReadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMessageReadedOperationCompleted);
            }
            this.InvokeAsync("SetMessageReaded", new object[] {
                        msgType,
                        reportNo,
                        sampleNo}, this.SetMessageReadedOperationCompleted, userState);
        }
        
        private void OnSetMessageReadedOperationCompleted(object arg) {
            if ((this.SetMessageReadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMessageReadedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMessageReadedByGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetMessageReadedByGuid(string msgguid) {
            this.Invoke("SetMessageReadedByGuid", new object[] {
                        msgguid});
        }
        
        /// <remarks/>
        public void SetMessageReadedByGuidAsync(string msgguid) {
            this.SetMessageReadedByGuidAsync(msgguid, null);
        }
        
        /// <remarks/>
        public void SetMessageReadedByGuidAsync(string msgguid, object userState) {
            if ((this.SetMessageReadedByGuidOperationCompleted == null)) {
                this.SetMessageReadedByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMessageReadedByGuidOperationCompleted);
            }
            this.InvokeAsync("SetMessageReadedByGuid", new object[] {
                        msgguid}, this.SetMessageReadedByGuidOperationCompleted, userState);
        }
        
        private void OnSetMessageReadedByGuidOperationCompleted(object arg) {
            if ((this.SetMessageReadedByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMessageReadedByGuidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MessageSynchronize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MessageSynchronize(System.DateTime beginTime, System.DateTime endTime, bool needDeletePatientLeaveHospital) {
            object[] results = this.Invoke("MessageSynchronize", new object[] {
                        beginTime,
                        endTime,
                        needDeletePatientLeaveHospital});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MessageSynchronizeAsync(System.DateTime beginTime, System.DateTime endTime, bool needDeletePatientLeaveHospital) {
            this.MessageSynchronizeAsync(beginTime, endTime, needDeletePatientLeaveHospital, null);
        }
        
        /// <remarks/>
        public void MessageSynchronizeAsync(System.DateTime beginTime, System.DateTime endTime, bool needDeletePatientLeaveHospital, object userState) {
            if ((this.MessageSynchronizeOperationCompleted == null)) {
                this.MessageSynchronizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMessageSynchronizeOperationCompleted);
            }
            this.InvokeAsync("MessageSynchronize", new object[] {
                        beginTime,
                        endTime,
                        needDeletePatientLeaveHospital}, this.MessageSynchronizeOperationCompleted, userState);
        }
        
        private void OnMessageSynchronizeOperationCompleted(object arg) {
            if ((this.MessageSynchronizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MessageSynchronizeCompleted(this, new MessageSynchronizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInitTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetInitTime() {
            object[] results = this.Invoke("GetInitTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetInitTimeAsync() {
            this.GetInitTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetInitTimeAsync(object userState) {
            if ((this.GetInitTimeOperationCompleted == null)) {
                this.GetInitTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInitTimeOperationCompleted);
            }
            this.InvokeAsync("GetInitTime", new object[0], this.GetInitTimeOperationCompleted, userState);
        }
        
        private void OnGetInitTimeOperationCompleted(object arg) {
            if ((this.GetInitTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInitTimeCompleted(this, new GetInitTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageEntityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageEntity[] GetMessageEntityList(string lastTimeSpan, bool needForceRefresh, string msgLevels) {
            object[] results = this.Invoke("GetMessageEntityList", new object[] {
                        lastTimeSpan,
                        needForceRefresh,
                        msgLevels});
            return ((MessageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageEntityListAsync(string lastTimeSpan, bool needForceRefresh, string msgLevels) {
            this.GetMessageEntityListAsync(lastTimeSpan, needForceRefresh, msgLevels, null);
        }
        
        /// <remarks/>
        public void GetMessageEntityListAsync(string lastTimeSpan, bool needForceRefresh, string msgLevels, object userState) {
            if ((this.GetMessageEntityListOperationCompleted == null)) {
                this.GetMessageEntityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageEntityListOperationCompleted);
            }
            this.InvokeAsync("GetMessageEntityList", new object[] {
                        lastTimeSpan,
                        needForceRefresh,
                        msgLevels}, this.GetMessageEntityListOperationCompleted, userState);
        }
        
        private void OnGetMessageEntityListOperationCompleted(object arg) {
            if ((this.GetMessageEntityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageEntityListCompleted(this, new GetMessageEntityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetUrgentMessageDocCreated", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUrgentMessageDocCreated(string msgType, string reportNo, string sampleNo) {
            object[] results = this.Invoke("SetUrgentMessageDocCreated", new object[] {
                        msgType,
                        reportNo,
                        sampleNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUrgentMessageDocCreatedAsync(string msgType, string reportNo, string sampleNo) {
            this.SetUrgentMessageDocCreatedAsync(msgType, reportNo, sampleNo, null);
        }
        
        /// <remarks/>
        public void SetUrgentMessageDocCreatedAsync(string msgType, string reportNo, string sampleNo, object userState) {
            if ((this.SetUrgentMessageDocCreatedOperationCompleted == null)) {
                this.SetUrgentMessageDocCreatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUrgentMessageDocCreatedOperationCompleted);
            }
            this.InvokeAsync("SetUrgentMessageDocCreated", new object[] {
                        msgType,
                        reportNo,
                        sampleNo}, this.SetUrgentMessageDocCreatedOperationCompleted, userState);
        }
        
        private void OnSetUrgentMessageDocCreatedOperationCompleted(object arg) {
            if ((this.SetUrgentMessageDocCreatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUrgentMessageDocCreatedCompleted(this, new SetUrgentMessageDocCreatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplateCalculatonRuleName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTemplateCalculatonRuleName(string templateId) {
            object[] results = this.Invoke("GetTemplateCalculatonRuleName", new object[] {
                        templateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateCalculatonRuleNameAsync(string templateId) {
            this.GetTemplateCalculatonRuleNameAsync(templateId, null);
        }
        
        /// <remarks/>
        public void GetTemplateCalculatonRuleNameAsync(string templateId, object userState) {
            if ((this.GetTemplateCalculatonRuleNameOperationCompleted == null)) {
                this.GetTemplateCalculatonRuleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateCalculatonRuleNameOperationCompleted);
            }
            this.InvokeAsync("GetTemplateCalculatonRuleName", new object[] {
                        templateId}, this.GetTemplateCalculatonRuleNameOperationCompleted, userState);
        }
        
        private void OnGetTemplateCalculatonRuleNameOperationCompleted(object arg) {
            if ((this.GetTemplateCalculatonRuleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateCalculatonRuleNameCompleted(this, new GetTemplateCalculatonRuleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPatientInhosFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryPatientInhosFee(string cureNo) {
            object[] results = this.Invoke("QueryPatientInhosFee", new object[] {
                        cureNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientInhosFeeAsync(string cureNo) {
            this.QueryPatientInhosFeeAsync(cureNo, null);
        }
        
        /// <remarks/>
        public void QueryPatientInhosFeeAsync(string cureNo, object userState) {
            if ((this.QueryPatientInhosFeeOperationCompleted == null)) {
                this.QueryPatientInhosFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientInhosFeeOperationCompleted);
            }
            this.InvokeAsync("QueryPatientInhosFee", new object[] {
                        cureNo}, this.QueryPatientInhosFeeOperationCompleted, userState);
        }
        
        private void OnQueryPatientInhosFeeOperationCompleted(object arg) {
            if ((this.QueryPatientInhosFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientInhosFeeCompleted(this, new QueryPatientInhosFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConmpareHisEMRDoctorQualifyDifference", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ConmpareHisEMRDoctorQualifyDifference(string type) {
            object[] results = this.Invoke("ConmpareHisEMRDoctorQualifyDifference", new object[] {
                        type});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ConmpareHisEMRDoctorQualifyDifferenceAsync(string type) {
            this.ConmpareHisEMRDoctorQualifyDifferenceAsync(type, null);
        }
        
        /// <remarks/>
        public void ConmpareHisEMRDoctorQualifyDifferenceAsync(string type, object userState) {
            if ((this.ConmpareHisEMRDoctorQualifyDifferenceOperationCompleted == null)) {
                this.ConmpareHisEMRDoctorQualifyDifferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConmpareHisEMRDoctorQualifyDifferenceOperationCompleted);
            }
            this.InvokeAsync("ConmpareHisEMRDoctorQualifyDifference", new object[] {
                        type}, this.ConmpareHisEMRDoctorQualifyDifferenceOperationCompleted, userState);
        }
        
        private void OnConmpareHisEMRDoctorQualifyDifferenceOperationCompleted(object arg) {
            if ((this.ConmpareHisEMRDoctorQualifyDifferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConmpareHisEMRDoctorQualifyDifferenceCompleted(this, new ConmpareHisEMRDoctorQualifyDifferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTemplatexxx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllTemplatexxx(string ICDNo, string CurNo) {
            object[] results = this.Invoke("GetAllTemplatexxx", new object[] {
                        ICDNo,
                        CurNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTemplatexxxAsync(string ICDNo, string CurNo) {
            this.GetAllTemplatexxxAsync(ICDNo, CurNo, null);
        }
        
        /// <remarks/>
        public void GetAllTemplatexxxAsync(string ICDNo, string CurNo, object userState) {
            if ((this.GetAllTemplatexxxOperationCompleted == null)) {
                this.GetAllTemplatexxxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTemplatexxxOperationCompleted);
            }
            this.InvokeAsync("GetAllTemplatexxx", new object[] {
                        ICDNo,
                        CurNo}, this.GetAllTemplatexxxOperationCompleted, userState);
        }
        
        private void OnGetAllTemplatexxxOperationCompleted(object arg) {
            if ((this.GetAllTemplatexxxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTemplatexxxCompleted(this, new GetAllTemplatexxxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplatIdByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTemplatIdByName(string ClinPath, string EndIcd) {
            object[] results = this.Invoke("GetTemplatIdByName", new object[] {
                        ClinPath,
                        EndIcd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplatIdByNameAsync(string ClinPath, string EndIcd) {
            this.GetTemplatIdByNameAsync(ClinPath, EndIcd, null);
        }
        
        /// <remarks/>
        public void GetTemplatIdByNameAsync(string ClinPath, string EndIcd, object userState) {
            if ((this.GetTemplatIdByNameOperationCompleted == null)) {
                this.GetTemplatIdByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplatIdByNameOperationCompleted);
            }
            this.InvokeAsync("GetTemplatIdByName", new object[] {
                        ClinPath,
                        EndIcd}, this.GetTemplatIdByNameOperationCompleted, userState);
        }
        
        private void OnGetTemplatIdByNameOperationCompleted(object arg) {
            if ((this.GetTemplatIdByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplatIdByNameCompleted(this, new GetTemplatIdByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinicePathByCurNoTwo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClinicePathByCurNoTwo(string CurNo) {
            object[] results = this.Invoke("GetClinicePathByCurNoTwo", new object[] {
                        CurNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicePathByCurNoTwoAsync(string CurNo) {
            this.GetClinicePathByCurNoTwoAsync(CurNo, null);
        }
        
        /// <remarks/>
        public void GetClinicePathByCurNoTwoAsync(string CurNo, object userState) {
            if ((this.GetClinicePathByCurNoTwoOperationCompleted == null)) {
                this.GetClinicePathByCurNoTwoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicePathByCurNoTwoOperationCompleted);
            }
            this.InvokeAsync("GetClinicePathByCurNoTwo", new object[] {
                        CurNo}, this.GetClinicePathByCurNoTwoOperationCompleted, userState);
        }
        
        private void OnGetClinicePathByCurNoTwoOperationCompleted(object arg) {
            if ((this.GetClinicePathByCurNoTwoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicePathByCurNoTwoCompleted(this, new GetClinicePathByCurNoTwoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClinicePathInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateClinicePathInfo(string CurNo, System.DateTime QXTime, string LYTxt, int statusCP, System.Guid templateID) {
            object[] results = this.Invoke("UpdateClinicePathInfo", new object[] {
                        CurNo,
                        QXTime,
                        LYTxt,
                        statusCP,
                        templateID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClinicePathInfoAsync(string CurNo, System.DateTime QXTime, string LYTxt, int statusCP, System.Guid templateID) {
            this.UpdateClinicePathInfoAsync(CurNo, QXTime, LYTxt, statusCP, templateID, null);
        }
        
        /// <remarks/>
        public void UpdateClinicePathInfoAsync(string CurNo, System.DateTime QXTime, string LYTxt, int statusCP, System.Guid templateID, object userState) {
            if ((this.UpdateClinicePathInfoOperationCompleted == null)) {
                this.UpdateClinicePathInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClinicePathInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateClinicePathInfo", new object[] {
                        CurNo,
                        QXTime,
                        LYTxt,
                        statusCP,
                        templateID}, this.UpdateClinicePathInfoOperationCompleted, userState);
        }
        
        private void OnUpdateClinicePathInfoOperationCompleted(object arg) {
            if ((this.UpdateClinicePathInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClinicePathInfoCompleted(this, new UpdateClinicePathInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinicePathInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClinicePathInfo(EmrClinicePathEntity ecpe) {
            object[] results = this.Invoke("GetClinicePathInfo", new object[] {
                        ecpe});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicePathInfoAsync(EmrClinicePathEntity ecpe) {
            this.GetClinicePathInfoAsync(ecpe, null);
        }
        
        /// <remarks/>
        public void GetClinicePathInfoAsync(EmrClinicePathEntity ecpe, object userState) {
            if ((this.GetClinicePathInfoOperationCompleted == null)) {
                this.GetClinicePathInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicePathInfoOperationCompleted);
            }
            this.InvokeAsync("GetClinicePathInfo", new object[] {
                        ecpe}, this.GetClinicePathInfoOperationCompleted, userState);
        }
        
        private void OnGetClinicePathInfoOperationCompleted(object arg) {
            if ((this.GetClinicePathInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicePathInfoCompleted(this, new GetClinicePathInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinicePathStatusByCureNos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EnumPatientCPInfo[] GetClinicePathStatusByCureNos(string[] curenos) {
            object[] results = this.Invoke("GetClinicePathStatusByCureNos", new object[] {
                        curenos});
            return ((EnumPatientCPInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicePathStatusByCureNosAsync(string[] curenos) {
            this.GetClinicePathStatusByCureNosAsync(curenos, null);
        }
        
        /// <remarks/>
        public void GetClinicePathStatusByCureNosAsync(string[] curenos, object userState) {
            if ((this.GetClinicePathStatusByCureNosOperationCompleted == null)) {
                this.GetClinicePathStatusByCureNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicePathStatusByCureNosOperationCompleted);
            }
            this.InvokeAsync("GetClinicePathStatusByCureNos", new object[] {
                        curenos}, this.GetClinicePathStatusByCureNosOperationCompleted, userState);
        }
        
        private void OnGetClinicePathStatusByCureNosOperationCompleted(object arg) {
            if ((this.GetClinicePathStatusByCureNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicePathStatusByCureNosCompleted(this, new GetClinicePathStatusByCureNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrLis[] GetLisList(string cureNo, string institutionName, string patientName) {
            object[] results = this.Invoke("GetLisList", new object[] {
                        cureNo,
                        institutionName,
                        patientName});
            return ((EmrLis[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLisListAsync(string cureNo, string institutionName, string patientName) {
            this.GetLisListAsync(cureNo, institutionName, patientName, null);
        }
        
        /// <remarks/>
        public void GetLisListAsync(string cureNo, string institutionName, string patientName, object userState) {
            if ((this.GetLisListOperationCompleted == null)) {
                this.GetLisListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisListOperationCompleted);
            }
            this.InvokeAsync("GetLisList", new object[] {
                        cureNo,
                        institutionName,
                        patientName}, this.GetLisListOperationCompleted, userState);
        }
        
        private void OnGetLisListOperationCompleted(object arg) {
            if ((this.GetLisListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLisListCompleted(this, new GetLisListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrLisResult[] GetLisResult(string applyNo, string sampleNo) {
            object[] results = this.Invoke("GetLisResult", new object[] {
                        applyNo,
                        sampleNo});
            return ((EmrLisResult[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLisResultAsync(string applyNo, string sampleNo) {
            this.GetLisResultAsync(applyNo, sampleNo, null);
        }
        
        /// <remarks/>
        public void GetLisResultAsync(string applyNo, string sampleNo, object userState) {
            if ((this.GetLisResultOperationCompleted == null)) {
                this.GetLisResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisResultOperationCompleted);
            }
            this.InvokeAsync("GetLisResult", new object[] {
                        applyNo,
                        sampleNo}, this.GetLisResultOperationCompleted, userState);
        }
        
        private void OnGetLisResultOperationCompleted(object arg) {
            if ((this.GetLisResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLisResultCompleted(this, new GetLisResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisResultMicro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrListResultMicro[] GetLisResultMicro(string applyNo, string sampleNo, string itemCode) {
            object[] results = this.Invoke("GetLisResultMicro", new object[] {
                        applyNo,
                        sampleNo,
                        itemCode});
            return ((EmrListResultMicro[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLisResultMicroAsync(string applyNo, string sampleNo, string itemCode) {
            this.GetLisResultMicroAsync(applyNo, sampleNo, itemCode, null);
        }
        
        /// <remarks/>
        public void GetLisResultMicroAsync(string applyNo, string sampleNo, string itemCode, object userState) {
            if ((this.GetLisResultMicroOperationCompleted == null)) {
                this.GetLisResultMicroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisResultMicroOperationCompleted);
            }
            this.InvokeAsync("GetLisResultMicro", new object[] {
                        applyNo,
                        sampleNo,
                        itemCode}, this.GetLisResultMicroOperationCompleted, userState);
        }
        
        private void OnGetLisResultMicroOperationCompleted(object arg) {
            if ((this.GetLisResultMicroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLisResultMicroCompleted(this, new GetLisResultMicroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRisList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrRis[] GetRisList(string cureNo, string institutionName, string patientName) {
            object[] results = this.Invoke("GetRisList", new object[] {
                        cureNo,
                        institutionName,
                        patientName});
            return ((EmrRis[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRisListAsync(string cureNo, string institutionName, string patientName) {
            this.GetRisListAsync(cureNo, institutionName, patientName, null);
        }
        
        /// <remarks/>
        public void GetRisListAsync(string cureNo, string institutionName, string patientName, object userState) {
            if ((this.GetRisListOperationCompleted == null)) {
                this.GetRisListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRisListOperationCompleted);
            }
            this.InvokeAsync("GetRisList", new object[] {
                        cureNo,
                        institutionName,
                        patientName}, this.GetRisListOperationCompleted, userState);
        }
        
        private void OnGetRisListOperationCompleted(object arg) {
            if ((this.GetRisListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRisListCompleted(this, new GetRisListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRisResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrRisResult[] GetRisResult(string techSystem, string applyNo) {
            object[] results = this.Invoke("GetRisResult", new object[] {
                        techSystem,
                        applyNo});
            return ((EmrRisResult[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRisResultAsync(string techSystem, string applyNo) {
            this.GetRisResultAsync(techSystem, applyNo, null);
        }
        
        /// <remarks/>
        public void GetRisResultAsync(string techSystem, string applyNo, object userState) {
            if ((this.GetRisResultOperationCompleted == null)) {
                this.GetRisResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRisResultOperationCompleted);
            }
            this.InvokeAsync("GetRisResult", new object[] {
                        techSystem,
                        applyNo}, this.GetRisResultOperationCompleted, userState);
        }
        
        private void OnGetRisResultOperationCompleted(object arg) {
            if ((this.GetRisResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRisResultCompleted(this, new GetRisResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRisInfoNewest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrRis GetRisInfoNewest(string cureno, string techID) {
            object[] results = this.Invoke("GetRisInfoNewest", new object[] {
                        cureno,
                        techID});
            return ((EmrRis)(results[0]));
        }
        
        /// <remarks/>
        public void GetRisInfoNewestAsync(string cureno, string techID) {
            this.GetRisInfoNewestAsync(cureno, techID, null);
        }
        
        /// <remarks/>
        public void GetRisInfoNewestAsync(string cureno, string techID, object userState) {
            if ((this.GetRisInfoNewestOperationCompleted == null)) {
                this.GetRisInfoNewestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRisInfoNewestOperationCompleted);
            }
            this.InvokeAsync("GetRisInfoNewest", new object[] {
                        cureno,
                        techID}, this.GetRisInfoNewestOperationCompleted, userState);
        }
        
        private void OnGetRisInfoNewestOperationCompleted(object arg) {
            if ((this.GetRisInfoNewestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRisInfoNewestCompleted(this, new GetRisInfoNewestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAbnormalLisResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrLisResult[] GetAbnormalLisResult(string applyNo, string sampleNo) {
            object[] results = this.Invoke("GetAbnormalLisResult", new object[] {
                        applyNo,
                        sampleNo});
            return ((EmrLisResult[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAbnormalLisResultAsync(string applyNo, string sampleNo) {
            this.GetAbnormalLisResultAsync(applyNo, sampleNo, null);
        }
        
        /// <remarks/>
        public void GetAbnormalLisResultAsync(string applyNo, string sampleNo, object userState) {
            if ((this.GetAbnormalLisResultOperationCompleted == null)) {
                this.GetAbnormalLisResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAbnormalLisResultOperationCompleted);
            }
            this.InvokeAsync("GetAbnormalLisResult", new object[] {
                        applyNo,
                        sampleNo}, this.GetAbnormalLisResultOperationCompleted, userState);
        }
        
        private void OnGetAbnormalLisResultOperationCompleted(object arg) {
            if ((this.GetAbnormalLisResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAbnormalLisResultCompleted(this, new GetAbnormalLisResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrQulityControlDeptStatusList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMRStatus[] GetEmrQulityControlDeptStatusList(string[] cureNoList) {
            object[] results = this.Invoke("GetEmrQulityControlDeptStatusList", new object[] {
                        cureNoList});
            return ((EMRStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptStatusListAsync(string[] cureNoList) {
            this.GetEmrQulityControlDeptStatusListAsync(cureNoList, null);
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptStatusListAsync(string[] cureNoList, object userState) {
            if ((this.GetEmrQulityControlDeptStatusListOperationCompleted == null)) {
                this.GetEmrQulityControlDeptStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrQulityControlDeptStatusListOperationCompleted);
            }
            this.InvokeAsync("GetEmrQulityControlDeptStatusList", new object[] {
                        cureNoList}, this.GetEmrQulityControlDeptStatusListOperationCompleted, userState);
        }
        
        private void OnGetEmrQulityControlDeptStatusListOperationCompleted(object arg) {
            if ((this.GetEmrQulityControlDeptStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrQulityControlDeptStatusListCompleted(this, new GetEmrQulityControlDeptStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDocHtml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDocHtml(EmrDocHtml entity) {
            object[] results = this.Invoke("SaveEmrDocHtml", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDocHtmlAsync(EmrDocHtml entity) {
            this.SaveEmrDocHtmlAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrDocHtmlAsync(EmrDocHtml entity, object userState) {
            if ((this.SaveEmrDocHtmlOperationCompleted == null)) {
                this.SaveEmrDocHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDocHtmlOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDocHtml", new object[] {
                        entity}, this.SaveEmrDocHtmlOperationCompleted, userState);
        }
        
        private void OnSaveEmrDocHtmlOperationCompleted(object arg) {
            if ((this.SaveEmrDocHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDocHtmlCompleted(this, new SaveEmrDocHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrDocHtml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteEmrDocHtml(EmrDocHtml entity) {
            object[] results = this.Invoke("DeleteEmrDocHtml", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrDocHtmlAsync(EmrDocHtml entity) {
            this.DeleteEmrDocHtmlAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrDocHtmlAsync(EmrDocHtml entity, object userState) {
            if ((this.DeleteEmrDocHtmlOperationCompleted == null)) {
                this.DeleteEmrDocHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrDocHtmlOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrDocHtml", new object[] {
                        entity}, this.DeleteEmrDocHtmlOperationCompleted, userState);
        }
        
        private void OnDeleteEmrDocHtmlOperationCompleted(object arg) {
            if ((this.DeleteEmrDocHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrDocHtmlCompleted(this, new DeleteEmrDocHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocHtml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocHtml GetEmrDocHtml(string emrID, int SectionNo) {
            object[] results = this.Invoke("GetEmrDocHtml", new object[] {
                        emrID,
                        SectionNo});
            return ((EmrDocHtml)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocHtmlAsync(string emrID, int SectionNo) {
            this.GetEmrDocHtmlAsync(emrID, SectionNo, null);
        }
        
        /// <remarks/>
        public void GetEmrDocHtmlAsync(string emrID, int SectionNo, object userState) {
            if ((this.GetEmrDocHtmlOperationCompleted == null)) {
                this.GetEmrDocHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocHtmlOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocHtml", new object[] {
                        emrID,
                        SectionNo}, this.GetEmrDocHtmlOperationCompleted, userState);
        }
        
        private void OnGetEmrDocHtmlOperationCompleted(object arg) {
            if ((this.GetEmrDocHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocHtmlCompleted(this, new GetEmrDocHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrChiefComplaintByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmrChiefComplaintByCureNo(string CureNo) {
            object[] results = this.Invoke("GetEmrChiefComplaintByCureNo", new object[] {
                        CureNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrChiefComplaintByCureNoAsync(string CureNo) {
            this.GetEmrChiefComplaintByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void GetEmrChiefComplaintByCureNoAsync(string CureNo, object userState) {
            if ((this.GetEmrChiefComplaintByCureNoOperationCompleted == null)) {
                this.GetEmrChiefComplaintByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrChiefComplaintByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetEmrChiefComplaintByCureNo", new object[] {
                        CureNo}, this.GetEmrChiefComplaintByCureNoOperationCompleted, userState);
        }
        
        private void OnGetEmrChiefComplaintByCureNoOperationCompleted(object arg) {
            if ((this.GetEmrChiefComplaintByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrChiefComplaintByCureNoCompleted(this, new GetEmrChiefComplaintByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrSpecialistInfoByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmrSpecialistInfoByCureNo(string CureNo) {
            object[] results = this.Invoke("GetEmrSpecialistInfoByCureNo", new object[] {
                        CureNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrSpecialistInfoByCureNoAsync(string CureNo) {
            this.GetEmrSpecialistInfoByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void GetEmrSpecialistInfoByCureNoAsync(string CureNo, object userState) {
            if ((this.GetEmrSpecialistInfoByCureNoOperationCompleted == null)) {
                this.GetEmrSpecialistInfoByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrSpecialistInfoByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetEmrSpecialistInfoByCureNo", new object[] {
                        CureNo}, this.GetEmrSpecialistInfoByCureNoOperationCompleted, userState);
        }
        
        private void OnGetEmrSpecialistInfoByCureNoOperationCompleted(object arg) {
            if ((this.GetEmrSpecialistInfoByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrSpecialistInfoByCureNoCompleted(this, new GetEmrSpecialistInfoByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDocSectionContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDocSectionContent(EmrDocSectionContent entity) {
            object[] results = this.Invoke("SaveEmrDocSectionContent", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDocSectionContentAsync(EmrDocSectionContent entity) {
            this.SaveEmrDocSectionContentAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrDocSectionContentAsync(EmrDocSectionContent entity, object userState) {
            if ((this.SaveEmrDocSectionContentOperationCompleted == null)) {
                this.SaveEmrDocSectionContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDocSectionContentOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDocSectionContent", new object[] {
                        entity}, this.SaveEmrDocSectionContentOperationCompleted, userState);
        }
        
        private void OnSaveEmrDocSectionContentOperationCompleted(object arg) {
            if ((this.SaveEmrDocSectionContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDocSectionContentCompleted(this, new SaveEmrDocSectionContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDocSectionContents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDocSectionContents(EmrDocSectionContent[] entityList) {
            object[] results = this.Invoke("SaveEmrDocSectionContents", new object[] {
                        entityList});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDocSectionContentsAsync(EmrDocSectionContent[] entityList) {
            this.SaveEmrDocSectionContentsAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SaveEmrDocSectionContentsAsync(EmrDocSectionContent[] entityList, object userState) {
            if ((this.SaveEmrDocSectionContentsOperationCompleted == null)) {
                this.SaveEmrDocSectionContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDocSectionContentsOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDocSectionContents", new object[] {
                        entityList}, this.SaveEmrDocSectionContentsOperationCompleted, userState);
        }
        
        private void OnSaveEmrDocSectionContentsOperationCompleted(object arg) {
            if ((this.SaveEmrDocSectionContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDocSectionContentsCompleted(this, new SaveEmrDocSectionContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSectionContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSectionContent GetEmrDocSectionContent(string emr_id, string content_id) {
            object[] results = this.Invoke("GetEmrDocSectionContent", new object[] {
                        emr_id,
                        content_id});
            return ((EmrDocSectionContent)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentAsync(string emr_id, string content_id) {
            this.GetEmrDocSectionContentAsync(emr_id, content_id, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentAsync(string emr_id, string content_id, object userState) {
            if ((this.GetEmrDocSectionContentOperationCompleted == null)) {
                this.GetEmrDocSectionContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionContentOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSectionContent", new object[] {
                        emr_id,
                        content_id}, this.GetEmrDocSectionContentOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionContentOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionContentCompleted(this, new GetEmrDocSectionContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSectionContentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSectionContent[] GetEmrDocSectionContentList(string emr_id) {
            object[] results = this.Invoke("GetEmrDocSectionContentList", new object[] {
                        emr_id});
            return ((EmrDocSectionContent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentListAsync(string emr_id) {
            this.GetEmrDocSectionContentListAsync(emr_id, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentListAsync(string emr_id, object userState) {
            if ((this.GetEmrDocSectionContentListOperationCompleted == null)) {
                this.GetEmrDocSectionContentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionContentListOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSectionContentList", new object[] {
                        emr_id}, this.GetEmrDocSectionContentListOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionContentListOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionContentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionContentListCompleted(this, new GetEmrDocSectionContentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSectionContentListByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSectionContent[] GetEmrDocSectionContentListByCureNo(string CureNo) {
            object[] results = this.Invoke("GetEmrDocSectionContentListByCureNo", new object[] {
                        CureNo});
            return ((EmrDocSectionContent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentListByCureNoAsync(string CureNo) {
            this.GetEmrDocSectionContentListByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentListByCureNoAsync(string CureNo, object userState) {
            if ((this.GetEmrDocSectionContentListByCureNoOperationCompleted == null)) {
                this.GetEmrDocSectionContentListByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionContentListByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSectionContentListByCureNo", new object[] {
                        CureNo}, this.GetEmrDocSectionContentListByCureNoOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionContentListByCureNoOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionContentListByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionContentListByCureNoCompleted(this, new GetEmrDocSectionContentListByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSectionContentListByCureNoWithParams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSectionContent[] GetEmrDocSectionContentListByCureNoWithParams(string CureNo, string[] contentIDs) {
            object[] results = this.Invoke("GetEmrDocSectionContentListByCureNoWithParams", new object[] {
                        CureNo,
                        contentIDs});
            return ((EmrDocSectionContent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentListByCureNoWithParamsAsync(string CureNo, string[] contentIDs) {
            this.GetEmrDocSectionContentListByCureNoWithParamsAsync(CureNo, contentIDs, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionContentListByCureNoWithParamsAsync(string CureNo, string[] contentIDs, object userState) {
            if ((this.GetEmrDocSectionContentListByCureNoWithParamsOperationCompleted == null)) {
                this.GetEmrDocSectionContentListByCureNoWithParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionContentListByCureNoWithParamsOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSectionContentListByCureNoWithParams", new object[] {
                        CureNo,
                        contentIDs}, this.GetEmrDocSectionContentListByCureNoWithParamsOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionContentListByCureNoWithParamsOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionContentListByCureNoWithParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionContentListByCureNoWithParamsCompleted(this, new GetEmrDocSectionContentListByCureNoWithParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDefaultWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDefaultWard GetEmrDefaultWard(string userCode) {
            object[] results = this.Invoke("GetEmrDefaultWard", new object[] {
                        userCode});
            return ((EmrDefaultWard)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDefaultWardAsync(string userCode) {
            this.GetEmrDefaultWardAsync(userCode, null);
        }
        
        /// <remarks/>
        public void GetEmrDefaultWardAsync(string userCode, object userState) {
            if ((this.GetEmrDefaultWardOperationCompleted == null)) {
                this.GetEmrDefaultWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDefaultWardOperationCompleted);
            }
            this.InvokeAsync("GetEmrDefaultWard", new object[] {
                        userCode}, this.GetEmrDefaultWardOperationCompleted, userState);
        }
        
        private void OnGetEmrDefaultWardOperationCompleted(object arg) {
            if ((this.GetEmrDefaultWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDefaultWardCompleted(this, new GetEmrDefaultWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDefaultWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDefaultWard(EmrDefaultWard entity) {
            object[] results = this.Invoke("SaveEmrDefaultWard", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDefaultWardAsync(EmrDefaultWard entity) {
            this.SaveEmrDefaultWardAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrDefaultWardAsync(EmrDefaultWard entity, object userState) {
            if ((this.SaveEmrDefaultWardOperationCompleted == null)) {
                this.SaveEmrDefaultWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDefaultWardOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDefaultWard", new object[] {
                        entity}, this.SaveEmrDefaultWardOperationCompleted, userState);
        }
        
        private void OnSaveEmrDefaultWardOperationCompleted(object arg) {
            if ((this.SaveEmrDefaultWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDefaultWardCompleted(this, new SaveEmrDefaultWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWSBOUrgentAlarmByWardCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSBOUrgentAlarm[] GetWSBOUrgentAlarmByWardCode(string WardCode) {
            object[] results = this.Invoke("GetWSBOUrgentAlarmByWardCode", new object[] {
                        WardCode});
            return ((WSBOUrgentAlarm[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWSBOUrgentAlarmByWardCodeAsync(string WardCode) {
            this.GetWSBOUrgentAlarmByWardCodeAsync(WardCode, null);
        }
        
        /// <remarks/>
        public void GetWSBOUrgentAlarmByWardCodeAsync(string WardCode, object userState) {
            if ((this.GetWSBOUrgentAlarmByWardCodeOperationCompleted == null)) {
                this.GetWSBOUrgentAlarmByWardCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWSBOUrgentAlarmByWardCodeOperationCompleted);
            }
            this.InvokeAsync("GetWSBOUrgentAlarmByWardCode", new object[] {
                        WardCode}, this.GetWSBOUrgentAlarmByWardCodeOperationCompleted, userState);
        }
        
        private void OnGetWSBOUrgentAlarmByWardCodeOperationCompleted(object arg) {
            if ((this.GetWSBOUrgentAlarmByWardCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWSBOUrgentAlarmByWardCodeCompleted(this, new GetWSBOUrgentAlarmByWardCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUrgentAlarmProcessStatusByIdList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult UpdateUrgentAlarmProcessStatusByIdList(string[] IdList) {
            object[] results = this.Invoke("UpdateUrgentAlarmProcessStatusByIdList", new object[] {
                        IdList});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUrgentAlarmProcessStatusByIdListAsync(string[] IdList) {
            this.UpdateUrgentAlarmProcessStatusByIdListAsync(IdList, null);
        }
        
        /// <remarks/>
        public void UpdateUrgentAlarmProcessStatusByIdListAsync(string[] IdList, object userState) {
            if ((this.UpdateUrgentAlarmProcessStatusByIdListOperationCompleted == null)) {
                this.UpdateUrgentAlarmProcessStatusByIdListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUrgentAlarmProcessStatusByIdListOperationCompleted);
            }
            this.InvokeAsync("UpdateUrgentAlarmProcessStatusByIdList", new object[] {
                        IdList}, this.UpdateUrgentAlarmProcessStatusByIdListOperationCompleted, userState);
        }
        
        private void OnUpdateUrgentAlarmProcessStatusByIdListOperationCompleted(object arg) {
            if ((this.UpdateUrgentAlarmProcessStatusByIdListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUrgentAlarmProcessStatusByIdListCompleted(this, new UpdateUrgentAlarmProcessStatusByIdListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfo(string[] IdList, DoctorInfo doctorInfo) {
            object[] results = this.Invoke("UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfo", new object[] {
                        IdList,
                        doctorInfo});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoAsync(string[] IdList, DoctorInfo doctorInfo) {
            this.UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoAsync(IdList, doctorInfo, null);
        }
        
        /// <remarks/>
        public void UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoAsync(string[] IdList, DoctorInfo doctorInfo, object userState) {
            if ((this.UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoOperationCompleted == null)) {
                this.UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfo", new object[] {
                        IdList,
                        doctorInfo}, this.UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoOperationCompleted(object arg) {
            if ((this.UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompleted(this, new UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocHistorys", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocHistory[] GetDocHistorys(string CureNo) {
            object[] results = this.Invoke("GetDocHistorys", new object[] {
                        CureNo});
            return ((DocHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocHistorysAsync(string CureNo) {
            this.GetDocHistorysAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void GetDocHistorysAsync(string CureNo, object userState) {
            if ((this.GetDocHistorysOperationCompleted == null)) {
                this.GetDocHistorysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocHistorysOperationCompleted);
            }
            this.InvokeAsync("GetDocHistorys", new object[] {
                        CureNo}, this.GetDocHistorysOperationCompleted, userState);
        }
        
        private void OnGetDocHistorysOperationCompleted(object arg) {
            if ((this.GetDocHistorysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocHistorysCompleted(this, new GetDocHistorysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVisitList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocHistory[] GetVisitList(string CureNo, string InstitutionName, string PatientName) {
            object[] results = this.Invoke("GetVisitList", new object[] {
                        CureNo,
                        InstitutionName,
                        PatientName});
            return ((DocHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVisitListAsync(string CureNo, string InstitutionName, string PatientName) {
            this.GetVisitListAsync(CureNo, InstitutionName, PatientName, null);
        }
        
        /// <remarks/>
        public void GetVisitListAsync(string CureNo, string InstitutionName, string PatientName, object userState) {
            if ((this.GetVisitListOperationCompleted == null)) {
                this.GetVisitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVisitListOperationCompleted);
            }
            this.InvokeAsync("GetVisitList", new object[] {
                        CureNo,
                        InstitutionName,
                        PatientName}, this.GetVisitListOperationCompleted, userState);
        }
        
        private void OnGetVisitListOperationCompleted(object arg) {
            if ((this.GetVisitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVisitListCompleted(this, new GetVisitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrScoreTemplateByType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrScoreTemplate[] GetEmrScoreTemplateByType(string emrstType) {
            object[] results = this.Invoke("GetEmrScoreTemplateByType", new object[] {
                        emrstType});
            return ((EmrScoreTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrScoreTemplateByTypeAsync(string emrstType) {
            this.GetEmrScoreTemplateByTypeAsync(emrstType, null);
        }
        
        /// <remarks/>
        public void GetEmrScoreTemplateByTypeAsync(string emrstType, object userState) {
            if ((this.GetEmrScoreTemplateByTypeOperationCompleted == null)) {
                this.GetEmrScoreTemplateByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrScoreTemplateByTypeOperationCompleted);
            }
            this.InvokeAsync("GetEmrScoreTemplateByType", new object[] {
                        emrstType}, this.GetEmrScoreTemplateByTypeOperationCompleted, userState);
        }
        
        private void OnGetEmrScoreTemplateByTypeOperationCompleted(object arg) {
            if ((this.GetEmrScoreTemplateByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrScoreTemplateByTypeCompleted(this, new GetEmrScoreTemplateByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrAutoScoreItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrAutoScoreItem(EmrAutoScoreItem entity) {
            object[] results = this.Invoke("SaveEmrAutoScoreItem", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrAutoScoreItemAsync(EmrAutoScoreItem entity) {
            this.SaveEmrAutoScoreItemAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrAutoScoreItemAsync(EmrAutoScoreItem entity, object userState) {
            if ((this.SaveEmrAutoScoreItemOperationCompleted == null)) {
                this.SaveEmrAutoScoreItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrAutoScoreItemOperationCompleted);
            }
            this.InvokeAsync("SaveEmrAutoScoreItem", new object[] {
                        entity}, this.SaveEmrAutoScoreItemOperationCompleted, userState);
        }
        
        private void OnSaveEmrAutoScoreItemOperationCompleted(object arg) {
            if ((this.SaveEmrAutoScoreItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrAutoScoreItemCompleted(this, new SaveEmrAutoScoreItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrAutoScoreItemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrAutoScoreItem[] GetEmrAutoScoreItemList() {
            object[] results = this.Invoke("GetEmrAutoScoreItemList", new object[0]);
            return ((EmrAutoScoreItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrAutoScoreItemListAsync() {
            this.GetEmrAutoScoreItemListAsync(null);
        }
        
        /// <remarks/>
        public void GetEmrAutoScoreItemListAsync(object userState) {
            if ((this.GetEmrAutoScoreItemListOperationCompleted == null)) {
                this.GetEmrAutoScoreItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrAutoScoreItemListOperationCompleted);
            }
            this.InvokeAsync("GetEmrAutoScoreItemList", new object[0], this.GetEmrAutoScoreItemListOperationCompleted, userState);
        }
        
        private void OnGetEmrAutoScoreItemListOperationCompleted(object arg) {
            if ((this.GetEmrAutoScoreItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrAutoScoreItemListCompleted(this, new GetEmrAutoScoreItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> GetScore(string cureNo, EmrDocSection[] sections, int scoreStandard, string className) {
            object[] results = this.Invoke("GetScore", new object[] {
                        cureNo,
                        sections,
                        scoreStandard,
                        className});
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void GetScoreAsync(string cureNo, EmrDocSection[] sections, int scoreStandard, string className) {
            this.GetScoreAsync(cureNo, sections, scoreStandard, className, null);
        }
        
        /// <remarks/>
        public void GetScoreAsync(string cureNo, EmrDocSection[] sections, int scoreStandard, string className, object userState) {
            if ((this.GetScoreOperationCompleted == null)) {
                this.GetScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScoreOperationCompleted);
            }
            this.InvokeAsync("GetScore", new object[] {
                        cureNo,
                        sections,
                        scoreStandard,
                        className}, this.GetScoreOperationCompleted, userState);
        }
        
        private void OnGetScoreOperationCompleted(object arg) {
            if ((this.GetScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScoreCompleted(this, new GetScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScoreResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoScoreResult GetScoreResult(string cureNo, EmrDocSection[] sections, int scoreStandard, string className) {
            object[] results = this.Invoke("GetScoreResult", new object[] {
                        cureNo,
                        sections,
                        scoreStandard,
                        className});
            return ((AutoScoreResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetScoreResultAsync(string cureNo, EmrDocSection[] sections, int scoreStandard, string className) {
            this.GetScoreResultAsync(cureNo, sections, scoreStandard, className, null);
        }
        
        /// <remarks/>
        public void GetScoreResultAsync(string cureNo, EmrDocSection[] sections, int scoreStandard, string className, object userState) {
            if ((this.GetScoreResultOperationCompleted == null)) {
                this.GetScoreResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScoreResultOperationCompleted);
            }
            this.InvokeAsync("GetScoreResult", new object[] {
                        cureNo,
                        sections,
                        scoreStandard,
                        className}, this.GetScoreResultOperationCompleted, userState);
        }
        
        private void OnGetScoreResultOperationCompleted(object arg) {
            if ((this.GetScoreResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScoreResultCompleted(this, new GetScoreResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QualityControlCheckForAddDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BizResultOfQualityControlResult[] QualityControlCheckForAddDoc(string cureNo, string templateType) {
            object[] results = this.Invoke("QualityControlCheckForAddDoc", new object[] {
                        cureNo,
                        templateType});
            return ((BizResultOfQualityControlResult[])(results[0]));
        }
        
        /// <remarks/>
        public void QualityControlCheckForAddDocAsync(string cureNo, string templateType) {
            this.QualityControlCheckForAddDocAsync(cureNo, templateType, null);
        }
        
        /// <remarks/>
        public void QualityControlCheckForAddDocAsync(string cureNo, string templateType, object userState) {
            if ((this.QualityControlCheckForAddDocOperationCompleted == null)) {
                this.QualityControlCheckForAddDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQualityControlCheckForAddDocOperationCompleted);
            }
            this.InvokeAsync("QualityControlCheckForAddDoc", new object[] {
                        cureNo,
                        templateType}, this.QualityControlCheckForAddDocOperationCompleted, userState);
        }
        
        private void OnQualityControlCheckForAddDocOperationCompleted(object arg) {
            if ((this.QualityControlCheckForAddDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QualityControlCheckForAddDocCompleted(this, new QualityControlCheckForAddDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QualityControlCheckForAuditDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BizResultOfQualityControlResult[] QualityControlCheckForAuditDoc(string cureNo, string templateType) {
            object[] results = this.Invoke("QualityControlCheckForAuditDoc", new object[] {
                        cureNo,
                        templateType});
            return ((BizResultOfQualityControlResult[])(results[0]));
        }
        
        /// <remarks/>
        public void QualityControlCheckForAuditDocAsync(string cureNo, string templateType) {
            this.QualityControlCheckForAuditDocAsync(cureNo, templateType, null);
        }
        
        /// <remarks/>
        public void QualityControlCheckForAuditDocAsync(string cureNo, string templateType, object userState) {
            if ((this.QualityControlCheckForAuditDocOperationCompleted == null)) {
                this.QualityControlCheckForAuditDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQualityControlCheckForAuditDocOperationCompleted);
            }
            this.InvokeAsync("QualityControlCheckForAuditDoc", new object[] {
                        cureNo,
                        templateType}, this.QualityControlCheckForAuditDocOperationCompleted, userState);
        }
        
        private void OnQualityControlCheckForAuditDocOperationCompleted(object arg) {
            if ((this.QualityControlCheckForAuditDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QualityControlCheckForAuditDocCompleted(this, new QualityControlCheckForAuditDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BizResultOfQualityControlResult GetQualityControlResult(string cureNo, string itemCode, bool IgnoreTimeValidation) {
            object[] results = this.Invoke("GetQualityControlResult", new object[] {
                        cureNo,
                        itemCode,
                        IgnoreTimeValidation});
            return ((BizResultOfQualityControlResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlResultAsync(string cureNo, string itemCode, bool IgnoreTimeValidation) {
            this.GetQualityControlResultAsync(cureNo, itemCode, IgnoreTimeValidation, null);
        }
        
        /// <remarks/>
        public void GetQualityControlResultAsync(string cureNo, string itemCode, bool IgnoreTimeValidation, object userState) {
            if ((this.GetQualityControlResultOperationCompleted == null)) {
                this.GetQualityControlResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlResultOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlResult", new object[] {
                        cureNo,
                        itemCode,
                        IgnoreTimeValidation}, this.GetQualityControlResultOperationCompleted, userState);
        }
        
        private void OnGetQualityControlResultOperationCompleted(object arg) {
            if ((this.GetQualityControlResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlResultCompleted(this, new GetQualityControlResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlResultBeforeExpired", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQualityControlResultBeforeExpired(string cureNo, string itemCode) {
            object[] results = this.Invoke("GetQualityControlResultBeforeExpired", new object[] {
                        cureNo,
                        itemCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlResultBeforeExpiredAsync(string cureNo, string itemCode) {
            this.GetQualityControlResultBeforeExpiredAsync(cureNo, itemCode, null);
        }
        
        /// <remarks/>
        public void GetQualityControlResultBeforeExpiredAsync(string cureNo, string itemCode, object userState) {
            if ((this.GetQualityControlResultBeforeExpiredOperationCompleted == null)) {
                this.GetQualityControlResultBeforeExpiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlResultBeforeExpiredOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlResultBeforeExpired", new object[] {
                        cureNo,
                        itemCode}, this.GetQualityControlResultBeforeExpiredOperationCompleted, userState);
        }
        
        private void OnGetQualityControlResultBeforeExpiredOperationCompleted(object arg) {
            if ((this.GetQualityControlResultBeforeExpiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlResultBeforeExpiredCompleted(this, new GetQualityControlResultBeforeExpiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllQualityControlResultBeforeExpired", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllQualityControlResultBeforeExpired(string cureNo) {
            object[] results = this.Invoke("GetAllQualityControlResultBeforeExpired", new object[] {
                        cureNo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllQualityControlResultBeforeExpiredAsync(string cureNo) {
            this.GetAllQualityControlResultBeforeExpiredAsync(cureNo, null);
        }
        
        /// <remarks/>
        public void GetAllQualityControlResultBeforeExpiredAsync(string cureNo, object userState) {
            if ((this.GetAllQualityControlResultBeforeExpiredOperationCompleted == null)) {
                this.GetAllQualityControlResultBeforeExpiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllQualityControlResultBeforeExpiredOperationCompleted);
            }
            this.InvokeAsync("GetAllQualityControlResultBeforeExpired", new object[] {
                        cureNo}, this.GetAllQualityControlResultBeforeExpiredOperationCompleted, userState);
        }
        
        private void OnGetAllQualityControlResultBeforeExpiredOperationCompleted(object arg) {
            if ((this.GetAllQualityControlResultBeforeExpiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllQualityControlResultBeforeExpiredCompleted(this, new GetAllQualityControlResultBeforeExpiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQualityControlReportTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateQualityControlReportTable(System.DateTime dtMonth, bool dailyRun) {
            object[] results = this.Invoke("UpdateQualityControlReportTable", new object[] {
                        dtMonth,
                        dailyRun});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQualityControlReportTableAsync(System.DateTime dtMonth, bool dailyRun) {
            this.UpdateQualityControlReportTableAsync(dtMonth, dailyRun, null);
        }
        
        /// <remarks/>
        public void UpdateQualityControlReportTableAsync(System.DateTime dtMonth, bool dailyRun, object userState) {
            if ((this.UpdateQualityControlReportTableOperationCompleted == null)) {
                this.UpdateQualityControlReportTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQualityControlReportTableOperationCompleted);
            }
            this.InvokeAsync("UpdateQualityControlReportTable", new object[] {
                        dtMonth,
                        dailyRun}, this.UpdateQualityControlReportTableOperationCompleted, userState);
        }
        
        private void OnUpdateQualityControlReportTableOperationCompleted(object arg) {
            if ((this.UpdateQualityControlReportTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQualityControlReportTableCompleted(this, new UpdateQualityControlReportTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DataTable")]
        public System.Data.DataTable[] GetReportData(System.DateTime dtFrom, System.DateTime dtTo) {
            object[] results = this.Invoke("GetReportData", new object[] {
                        dtFrom,
                        dtTo});
            return ((System.Data.DataTable[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportDataAsync(System.DateTime dtFrom, System.DateTime dtTo) {
            this.GetReportDataAsync(dtFrom, dtTo, null);
        }
        
        /// <remarks/>
        public void GetReportDataAsync(System.DateTime dtFrom, System.DateTime dtTo, object userState) {
            if ((this.GetReportDataOperationCompleted == null)) {
                this.GetReportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportDataOperationCompleted);
            }
            this.InvokeAsync("GetReportData", new object[] {
                        dtFrom,
                        dtTo}, this.GetReportDataOperationCompleted, userState);
        }
        
        private void OnGetReportDataOperationCompleted(object arg) {
            if ((this.GetReportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportDataCompleted(this, new GetReportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSummaryReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSummaryReport() {
            object[] results = this.Invoke("GetSummaryReport", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSummaryReportAsync() {
            this.GetSummaryReportAsync(null);
        }
        
        /// <remarks/>
        public void GetSummaryReportAsync(object userState) {
            if ((this.GetSummaryReportOperationCompleted == null)) {
                this.GetSummaryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSummaryReportOperationCompleted);
            }
            this.InvokeAsync("GetSummaryReport", new object[0], this.GetSummaryReportOperationCompleted, userState);
        }
        
        private void OnGetSummaryReportOperationCompleted(object arg) {
            if ((this.GetSummaryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSummaryReportCompleted(this, new GetSummaryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportByDepartName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetReportByDepartName(string departName) {
            object[] results = this.Invoke("GetReportByDepartName", new object[] {
                        departName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportByDepartNameAsync(string departName) {
            this.GetReportByDepartNameAsync(departName, null);
        }
        
        /// <remarks/>
        public void GetReportByDepartNameAsync(string departName, object userState) {
            if ((this.GetReportByDepartNameOperationCompleted == null)) {
                this.GetReportByDepartNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportByDepartNameOperationCompleted);
            }
            this.InvokeAsync("GetReportByDepartName", new object[] {
                        departName}, this.GetReportByDepartNameOperationCompleted, userState);
        }
        
        private void OnGetReportByDepartNameOperationCompleted(object arg) {
            if ((this.GetReportByDepartNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportByDepartNameCompleted(this, new GetReportByDepartNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoQualityControlRemindDataGenerator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutoQualityControlRemindDataGenerator() {
            object[] results = this.Invoke("AutoQualityControlRemindDataGenerator", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AutoQualityControlRemindDataGeneratorAsync() {
            this.AutoQualityControlRemindDataGeneratorAsync(null);
        }
        
        /// <remarks/>
        public void AutoQualityControlRemindDataGeneratorAsync(object userState) {
            if ((this.AutoQualityControlRemindDataGeneratorOperationCompleted == null)) {
                this.AutoQualityControlRemindDataGeneratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoQualityControlRemindDataGeneratorOperationCompleted);
            }
            this.InvokeAsync("AutoQualityControlRemindDataGenerator", new object[0], this.AutoQualityControlRemindDataGeneratorOperationCompleted, userState);
        }
        
        private void OnAutoQualityControlRemindDataGeneratorOperationCompleted(object arg) {
            if ((this.AutoQualityControlRemindDataGeneratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoQualityControlRemindDataGeneratorCompleted(this, new AutoQualityControlRemindDataGeneratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerTime() {
            object[] results = this.Invoke("GetServerTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerTimeAsync() {
            this.GetServerTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerTimeAsync(object userState) {
            if ((this.GetServerTimeOperationCompleted == null)) {
                this.GetServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerTime", new object[0], this.GetServerTimeOperationCompleted, userState);
        }
        
        private void OnGetServerTimeOperationCompleted(object arg) {
            if ((this.GetServerTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerTimeCompleted(this, new GetServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatResponseDoctorGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SavePatResponseDoctorGroup(PatResponseDoctorGroup entity) {
            object[] results = this.Invoke("SavePatResponseDoctorGroup", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatResponseDoctorGroupAsync(PatResponseDoctorGroup entity) {
            this.SavePatResponseDoctorGroupAsync(entity, null);
        }
        
        /// <remarks/>
        public void SavePatResponseDoctorGroupAsync(PatResponseDoctorGroup entity, object userState) {
            if ((this.SavePatResponseDoctorGroupOperationCompleted == null)) {
                this.SavePatResponseDoctorGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatResponseDoctorGroupOperationCompleted);
            }
            this.InvokeAsync("SavePatResponseDoctorGroup", new object[] {
                        entity}, this.SavePatResponseDoctorGroupOperationCompleted, userState);
        }
        
        private void OnSavePatResponseDoctorGroupOperationCompleted(object arg) {
            if ((this.SavePatResponseDoctorGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatResponseDoctorGroupCompleted(this, new SavePatResponseDoctorGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatResponseDoctorGroupByDoctorGroupId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeletePatResponseDoctorGroupByDoctorGroupId(string DoctorGroupId) {
            object[] results = this.Invoke("DeletePatResponseDoctorGroupByDoctorGroupId", new object[] {
                        DoctorGroupId});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatResponseDoctorGroupByDoctorGroupIdAsync(string DoctorGroupId) {
            this.DeletePatResponseDoctorGroupByDoctorGroupIdAsync(DoctorGroupId, null);
        }
        
        /// <remarks/>
        public void DeletePatResponseDoctorGroupByDoctorGroupIdAsync(string DoctorGroupId, object userState) {
            if ((this.DeletePatResponseDoctorGroupByDoctorGroupIdOperationCompleted == null)) {
                this.DeletePatResponseDoctorGroupByDoctorGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatResponseDoctorGroupByDoctorGroupIdOperationCompleted);
            }
            this.InvokeAsync("DeletePatResponseDoctorGroupByDoctorGroupId", new object[] {
                        DoctorGroupId}, this.DeletePatResponseDoctorGroupByDoctorGroupIdOperationCompleted, userState);
        }
        
        private void OnDeletePatResponseDoctorGroupByDoctorGroupIdOperationCompleted(object arg) {
            if ((this.DeletePatResponseDoctorGroupByDoctorGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatResponseDoctorGroupByDoctorGroupIdCompleted(this, new DeletePatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatResponseDoctorGroupByDoctorGroupId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatResponseDoctorGroup[] GetPatResponseDoctorGroupByDoctorGroupId(string DoctorGroupId) {
            object[] results = this.Invoke("GetPatResponseDoctorGroupByDoctorGroupId", new object[] {
                        DoctorGroupId});
            return ((PatResponseDoctorGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupByDoctorGroupIdAsync(string DoctorGroupId) {
            this.GetPatResponseDoctorGroupByDoctorGroupIdAsync(DoctorGroupId, null);
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupByDoctorGroupIdAsync(string DoctorGroupId, object userState) {
            if ((this.GetPatResponseDoctorGroupByDoctorGroupIdOperationCompleted == null)) {
                this.GetPatResponseDoctorGroupByDoctorGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatResponseDoctorGroupByDoctorGroupIdOperationCompleted);
            }
            this.InvokeAsync("GetPatResponseDoctorGroupByDoctorGroupId", new object[] {
                        DoctorGroupId}, this.GetPatResponseDoctorGroupByDoctorGroupIdOperationCompleted, userState);
        }
        
        private void OnGetPatResponseDoctorGroupByDoctorGroupIdOperationCompleted(object arg) {
            if ((this.GetPatResponseDoctorGroupByDoctorGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatResponseDoctorGroupByDoctorGroupIdCompleted(this, new GetPatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatResponseDoctorGroupByDeptCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatResponseDoctorGroup[] GetPatResponseDoctorGroupByDeptCode(string deptCode) {
            object[] results = this.Invoke("GetPatResponseDoctorGroupByDeptCode", new object[] {
                        deptCode});
            return ((PatResponseDoctorGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupByDeptCodeAsync(string deptCode) {
            this.GetPatResponseDoctorGroupByDeptCodeAsync(deptCode, null);
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupByDeptCodeAsync(string deptCode, object userState) {
            if ((this.GetPatResponseDoctorGroupByDeptCodeOperationCompleted == null)) {
                this.GetPatResponseDoctorGroupByDeptCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatResponseDoctorGroupByDeptCodeOperationCompleted);
            }
            this.InvokeAsync("GetPatResponseDoctorGroupByDeptCode", new object[] {
                        deptCode}, this.GetPatResponseDoctorGroupByDeptCodeOperationCompleted, userState);
        }
        
        private void OnGetPatResponseDoctorGroupByDeptCodeOperationCompleted(object arg) {
            if ((this.GetPatResponseDoctorGroupByDeptCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatResponseDoctorGroupByDeptCodeCompleted(this, new GetPatResponseDoctorGroupByDeptCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatResponseDoctorGroupByGroupName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatResponseDoctorGroup GetPatResponseDoctorGroupByGroupName(string groupName, string deptCode) {
            object[] results = this.Invoke("GetPatResponseDoctorGroupByGroupName", new object[] {
                        groupName,
                        deptCode});
            return ((PatResponseDoctorGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupByGroupNameAsync(string groupName, string deptCode) {
            this.GetPatResponseDoctorGroupByGroupNameAsync(groupName, deptCode, null);
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupByGroupNameAsync(string groupName, string deptCode, object userState) {
            if ((this.GetPatResponseDoctorGroupByGroupNameOperationCompleted == null)) {
                this.GetPatResponseDoctorGroupByGroupNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatResponseDoctorGroupByGroupNameOperationCompleted);
            }
            this.InvokeAsync("GetPatResponseDoctorGroupByGroupName", new object[] {
                        groupName,
                        deptCode}, this.GetPatResponseDoctorGroupByGroupNameOperationCompleted, userState);
        }
        
        private void OnGetPatResponseDoctorGroupByGroupNameOperationCompleted(object arg) {
            if ((this.GetPatResponseDoctorGroupByGroupNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatResponseDoctorGroupByGroupNameCompleted(this, new GetPatResponseDoctorGroupByGroupNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatResponseDoctorGroup GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCode(string doctorCode) {
            object[] results = this.Invoke("GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCode", new object[] {
                        doctorCode});
            return ((PatResponseDoctorGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeAsync(string doctorCode) {
            this.GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeAsync(doctorCode, null);
        }
        
        /// <remarks/>
        public void GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeAsync(string doctorCode, object userState) {
            if ((this.GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeOperationCompleted == null)) {
                this.GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeOperationCompleted);
            }
            this.InvokeAsync("GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCode", new object[] {
                        doctorCode}, this.GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeOperationCompleted, userState);
        }
        
        private void OnGetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeOperationCompleted(object arg) {
            if ((this.GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompleted(this, new GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExistInPatients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistInPatients(string groupId) {
            object[] results = this.Invoke("ExistInPatients", new object[] {
                        groupId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistInPatientsAsync(string groupId) {
            this.ExistInPatientsAsync(groupId, null);
        }
        
        /// <remarks/>
        public void ExistInPatientsAsync(string groupId, object userState) {
            if ((this.ExistInPatientsOperationCompleted == null)) {
                this.ExistInPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistInPatientsOperationCompleted);
            }
            this.InvokeAsync("ExistInPatients", new object[] {
                        groupId}, this.ExistInPatientsOperationCompleted, userState);
        }
        
        private void OnExistInPatientsOperationCompleted(object arg) {
            if ((this.ExistInPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistInPatientsCompleted(this, new ExistInPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrAffiliatedAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrAffiliatedAccount(EmrAffiliatedAccount entity) {
            object[] results = this.Invoke("SaveEmrAffiliatedAccount", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrAffiliatedAccountAsync(EmrAffiliatedAccount entity) {
            this.SaveEmrAffiliatedAccountAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrAffiliatedAccountAsync(EmrAffiliatedAccount entity, object userState) {
            if ((this.SaveEmrAffiliatedAccountOperationCompleted == null)) {
                this.SaveEmrAffiliatedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrAffiliatedAccountOperationCompleted);
            }
            this.InvokeAsync("SaveEmrAffiliatedAccount", new object[] {
                        entity}, this.SaveEmrAffiliatedAccountOperationCompleted, userState);
        }
        
        private void OnSaveEmrAffiliatedAccountOperationCompleted(object arg) {
            if ((this.SaveEmrAffiliatedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrAffiliatedAccountCompleted(this, new SaveEmrAffiliatedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckEmrAffiliatedAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult CheckEmrAffiliatedAccount(EmrAffiliatedAccount entity) {
            object[] results = this.Invoke("CheckEmrAffiliatedAccount", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmrAffiliatedAccountAsync(EmrAffiliatedAccount entity) {
            this.CheckEmrAffiliatedAccountAsync(entity, null);
        }
        
        /// <remarks/>
        public void CheckEmrAffiliatedAccountAsync(EmrAffiliatedAccount entity, object userState) {
            if ((this.CheckEmrAffiliatedAccountOperationCompleted == null)) {
                this.CheckEmrAffiliatedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmrAffiliatedAccountOperationCompleted);
            }
            this.InvokeAsync("CheckEmrAffiliatedAccount", new object[] {
                        entity}, this.CheckEmrAffiliatedAccountOperationCompleted, userState);
        }
        
        private void OnCheckEmrAffiliatedAccountOperationCompleted(object arg) {
            if ((this.CheckEmrAffiliatedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmrAffiliatedAccountCompleted(this, new CheckEmrAffiliatedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrAffiliatedAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteEmrAffiliatedAccount(EmrAffiliatedAccount entity) {
            object[] results = this.Invoke("DeleteEmrAffiliatedAccount", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrAffiliatedAccountAsync(EmrAffiliatedAccount entity) {
            this.DeleteEmrAffiliatedAccountAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrAffiliatedAccountAsync(EmrAffiliatedAccount entity, object userState) {
            if ((this.DeleteEmrAffiliatedAccountOperationCompleted == null)) {
                this.DeleteEmrAffiliatedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrAffiliatedAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrAffiliatedAccount", new object[] {
                        entity}, this.DeleteEmrAffiliatedAccountOperationCompleted, userState);
        }
        
        private void OnDeleteEmrAffiliatedAccountOperationCompleted(object arg) {
            if ((this.DeleteEmrAffiliatedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrAffiliatedAccountCompleted(this, new DeleteEmrAffiliatedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrAffiliatedAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrAffiliatedAccount GetEmrAffiliatedAccount(string DoctorCode, string AffiliatedCode) {
            object[] results = this.Invoke("GetEmrAffiliatedAccount", new object[] {
                        DoctorCode,
                        AffiliatedCode});
            return ((EmrAffiliatedAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountAsync(string DoctorCode, string AffiliatedCode) {
            this.GetEmrAffiliatedAccountAsync(DoctorCode, AffiliatedCode, null);
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountAsync(string DoctorCode, string AffiliatedCode, object userState) {
            if ((this.GetEmrAffiliatedAccountOperationCompleted == null)) {
                this.GetEmrAffiliatedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrAffiliatedAccountOperationCompleted);
            }
            this.InvokeAsync("GetEmrAffiliatedAccount", new object[] {
                        DoctorCode,
                        AffiliatedCode}, this.GetEmrAffiliatedAccountOperationCompleted, userState);
        }
        
        private void OnGetEmrAffiliatedAccountOperationCompleted(object arg) {
            if ((this.GetEmrAffiliatedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrAffiliatedAccountCompleted(this, new GetEmrAffiliatedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrAffiliatedAccountList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrAffiliatedAccount[] GetEmrAffiliatedAccountList(string DoctorCode) {
            object[] results = this.Invoke("GetEmrAffiliatedAccountList", new object[] {
                        DoctorCode});
            return ((EmrAffiliatedAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountListAsync(string DoctorCode) {
            this.GetEmrAffiliatedAccountListAsync(DoctorCode, null);
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountListAsync(string DoctorCode, object userState) {
            if ((this.GetEmrAffiliatedAccountListOperationCompleted == null)) {
                this.GetEmrAffiliatedAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrAffiliatedAccountListOperationCompleted);
            }
            this.InvokeAsync("GetEmrAffiliatedAccountList", new object[] {
                        DoctorCode}, this.GetEmrAffiliatedAccountListOperationCompleted, userState);
        }
        
        private void OnGetEmrAffiliatedAccountListOperationCompleted(object arg) {
            if ((this.GetEmrAffiliatedAccountListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrAffiliatedAccountListCompleted(this, new GetEmrAffiliatedAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrAffiliatedUserLoginForMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult EmrAffiliatedUserLoginForMsg(string DoctorCode, string AffiliatedCode, string AffiliatedPwd) {
            object[] results = this.Invoke("EmrAffiliatedUserLoginForMsg", new object[] {
                        DoctorCode,
                        AffiliatedCode,
                        AffiliatedPwd});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void EmrAffiliatedUserLoginForMsgAsync(string DoctorCode, string AffiliatedCode, string AffiliatedPwd) {
            this.EmrAffiliatedUserLoginForMsgAsync(DoctorCode, AffiliatedCode, AffiliatedPwd, null);
        }
        
        /// <remarks/>
        public void EmrAffiliatedUserLoginForMsgAsync(string DoctorCode, string AffiliatedCode, string AffiliatedPwd, object userState) {
            if ((this.EmrAffiliatedUserLoginForMsgOperationCompleted == null)) {
                this.EmrAffiliatedUserLoginForMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrAffiliatedUserLoginForMsgOperationCompleted);
            }
            this.InvokeAsync("EmrAffiliatedUserLoginForMsg", new object[] {
                        DoctorCode,
                        AffiliatedCode,
                        AffiliatedPwd}, this.EmrAffiliatedUserLoginForMsgOperationCompleted, userState);
        }
        
        private void OnEmrAffiliatedUserLoginForMsgOperationCompleted(object arg) {
            if ((this.EmrAffiliatedUserLoginForMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrAffiliatedUserLoginForMsgCompleted(this, new EmrAffiliatedUserLoginForMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrAffiliatedAccountByAffCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrAffiliatedAccount GetEmrAffiliatedAccountByAffCode(string AffiliatedCode) {
            object[] results = this.Invoke("GetEmrAffiliatedAccountByAffCode", new object[] {
                        AffiliatedCode});
            return ((EmrAffiliatedAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountByAffCodeAsync(string AffiliatedCode) {
            this.GetEmrAffiliatedAccountByAffCodeAsync(AffiliatedCode, null);
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountByAffCodeAsync(string AffiliatedCode, object userState) {
            if ((this.GetEmrAffiliatedAccountByAffCodeOperationCompleted == null)) {
                this.GetEmrAffiliatedAccountByAffCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrAffiliatedAccountByAffCodeOperationCompleted);
            }
            this.InvokeAsync("GetEmrAffiliatedAccountByAffCode", new object[] {
                        AffiliatedCode}, this.GetEmrAffiliatedAccountByAffCodeOperationCompleted, userState);
        }
        
        private void OnGetEmrAffiliatedAccountByAffCodeOperationCompleted(object arg) {
            if ((this.GetEmrAffiliatedAccountByAffCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrAffiliatedAccountByAffCodeCompleted(this, new GetEmrAffiliatedAccountByAffCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrAffiliatedAccountListForLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrAffiliatedAccount[] GetEmrAffiliatedAccountListForLogin(string DoctorCode) {
            object[] results = this.Invoke("GetEmrAffiliatedAccountListForLogin", new object[] {
                        DoctorCode});
            return ((EmrAffiliatedAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountListForLoginAsync(string DoctorCode) {
            this.GetEmrAffiliatedAccountListForLoginAsync(DoctorCode, null);
        }
        
        /// <remarks/>
        public void GetEmrAffiliatedAccountListForLoginAsync(string DoctorCode, object userState) {
            if ((this.GetEmrAffiliatedAccountListForLoginOperationCompleted == null)) {
                this.GetEmrAffiliatedAccountListForLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrAffiliatedAccountListForLoginOperationCompleted);
            }
            this.InvokeAsync("GetEmrAffiliatedAccountListForLogin", new object[] {
                        DoctorCode}, this.GetEmrAffiliatedAccountListForLoginOperationCompleted, userState);
        }
        
        private void OnGetEmrAffiliatedAccountListForLoginOperationCompleted(object arg) {
            if ((this.GetEmrAffiliatedAccountListForLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrAffiliatedAccountListForLoginCompleted(this, new GetEmrAffiliatedAccountListForLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrQualityControlReminderList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQualityControlReminder[] GetEmrQualityControlReminderList() {
            object[] results = this.Invoke("GetEmrQualityControlReminderList", new object[0]);
            return ((EmrQualityControlReminder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrQualityControlReminderListAsync() {
            this.GetEmrQualityControlReminderListAsync(null);
        }
        
        /// <remarks/>
        public void GetEmrQualityControlReminderListAsync(object userState) {
            if ((this.GetEmrQualityControlReminderListOperationCompleted == null)) {
                this.GetEmrQualityControlReminderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrQualityControlReminderListOperationCompleted);
            }
            this.InvokeAsync("GetEmrQualityControlReminderList", new object[0], this.GetEmrQualityControlReminderListOperationCompleted, userState);
        }
        
        private void OnGetEmrQualityControlReminderListOperationCompleted(object arg) {
            if ((this.GetEmrQualityControlReminderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrQualityControlReminderListCompleted(this, new GetEmrQualityControlReminderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrQualityControlReminder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrQualityControlReminder(EmrQualityControlReminder entity) {
            object[] results = this.Invoke("SaveEmrQualityControlReminder", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrQualityControlReminderAsync(EmrQualityControlReminder entity) {
            this.SaveEmrQualityControlReminderAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrQualityControlReminderAsync(EmrQualityControlReminder entity, object userState) {
            if ((this.SaveEmrQualityControlReminderOperationCompleted == null)) {
                this.SaveEmrQualityControlReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrQualityControlReminderOperationCompleted);
            }
            this.InvokeAsync("SaveEmrQualityControlReminder", new object[] {
                        entity}, this.SaveEmrQualityControlReminderOperationCompleted, userState);
        }
        
        private void OnSaveEmrQualityControlReminderOperationCompleted(object arg) {
            if ((this.SaveEmrQualityControlReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrQualityControlReminderCompleted(this, new SaveEmrQualityControlReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrQualityControlReminder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteEmrQualityControlReminder(EmrQualityControlReminder entity) {
            object[] results = this.Invoke("DeleteEmrQualityControlReminder", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrQualityControlReminderAsync(EmrQualityControlReminder entity) {
            this.DeleteEmrQualityControlReminderAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrQualityControlReminderAsync(EmrQualityControlReminder entity, object userState) {
            if ((this.DeleteEmrQualityControlReminderOperationCompleted == null)) {
                this.DeleteEmrQualityControlReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrQualityControlReminderOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrQualityControlReminder", new object[] {
                        entity}, this.DeleteEmrQualityControlReminderOperationCompleted, userState);
        }
        
        private void OnDeleteEmrQualityControlReminderOperationCompleted(object arg) {
            if ((this.DeleteEmrQualityControlReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrQualityControlReminderCompleted(this, new DeleteEmrQualityControlReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExistEmrQualityControlReminder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistEmrQualityControlReminder(string cureNo, int errorCode) {
            object[] results = this.Invoke("ExistEmrQualityControlReminder", new object[] {
                        cureNo,
                        errorCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistEmrQualityControlReminderAsync(string cureNo, int errorCode) {
            this.ExistEmrQualityControlReminderAsync(cureNo, errorCode, null);
        }
        
        /// <remarks/>
        public void ExistEmrQualityControlReminderAsync(string cureNo, int errorCode, object userState) {
            if ((this.ExistEmrQualityControlReminderOperationCompleted == null)) {
                this.ExistEmrQualityControlReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistEmrQualityControlReminderOperationCompleted);
            }
            this.InvokeAsync("ExistEmrQualityControlReminder", new object[] {
                        cureNo,
                        errorCode}, this.ExistEmrQualityControlReminderOperationCompleted, userState);
        }
        
        private void OnExistEmrQualityControlReminderOperationCompleted(object arg) {
            if ((this.ExistEmrQualityControlReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistEmrQualityControlReminderCompleted(this, new ExistEmrQualityControlReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmrQualityControlReminderList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult UpdateEmrQualityControlReminderList(EmrQualityControlReminder[] entitys) {
            object[] results = this.Invoke("UpdateEmrQualityControlReminderList", new object[] {
                        entitys});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrQualityControlReminderListAsync(EmrQualityControlReminder[] entitys) {
            this.UpdateEmrQualityControlReminderListAsync(entitys, null);
        }
        
        /// <remarks/>
        public void UpdateEmrQualityControlReminderListAsync(EmrQualityControlReminder[] entitys, object userState) {
            if ((this.UpdateEmrQualityControlReminderListOperationCompleted == null)) {
                this.UpdateEmrQualityControlReminderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrQualityControlReminderListOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrQualityControlReminderList", new object[] {
                        entitys}, this.UpdateEmrQualityControlReminderListOperationCompleted, userState);
        }
        
        private void OnUpdateEmrQualityControlReminderListOperationCompleted(object arg) {
            if ((this.UpdateEmrQualityControlReminderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrQualityControlReminderListCompleted(this, new UpdateEmrQualityControlReminderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddQualityControlApply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddQualityControlApply(QualityControlApply model) {
            object[] results = this.Invoke("AddQualityControlApply", new object[] {
                        model});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddQualityControlApplyAsync(QualityControlApply model) {
            this.AddQualityControlApplyAsync(model, null);
        }
        
        /// <remarks/>
        public void AddQualityControlApplyAsync(QualityControlApply model, object userState) {
            if ((this.AddQualityControlApplyOperationCompleted == null)) {
                this.AddQualityControlApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQualityControlApplyOperationCompleted);
            }
            this.InvokeAsync("AddQualityControlApply", new object[] {
                        model}, this.AddQualityControlApplyOperationCompleted, userState);
        }
        
        private void OnAddQualityControlApplyOperationCompleted(object arg) {
            if ((this.AddQualityControlApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQualityControlApplyCompleted(this, new AddQualityControlApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQualityControlApply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateQualityControlApply(QualityControlApply model) {
            object[] results = this.Invoke("UpdateQualityControlApply", new object[] {
                        model});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQualityControlApplyAsync(QualityControlApply model) {
            this.UpdateQualityControlApplyAsync(model, null);
        }
        
        /// <remarks/>
        public void UpdateQualityControlApplyAsync(QualityControlApply model, object userState) {
            if ((this.UpdateQualityControlApplyOperationCompleted == null)) {
                this.UpdateQualityControlApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQualityControlApplyOperationCompleted);
            }
            this.InvokeAsync("UpdateQualityControlApply", new object[] {
                        model}, this.UpdateQualityControlApplyOperationCompleted, userState);
        }
        
        private void OnUpdateQualityControlApplyOperationCompleted(object arg) {
            if ((this.UpdateQualityControlApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQualityControlApplyCompleted(this, new UpdateQualityControlApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetQualityControlApply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetQualityControlApply(QualityControlApply model) {
            object[] results = this.Invoke("SetQualityControlApply", new object[] {
                        model});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetQualityControlApplyAsync(QualityControlApply model) {
            this.SetQualityControlApplyAsync(model, null);
        }
        
        /// <remarks/>
        public void SetQualityControlApplyAsync(QualityControlApply model, object userState) {
            if ((this.SetQualityControlApplyOperationCompleted == null)) {
                this.SetQualityControlApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetQualityControlApplyOperationCompleted);
            }
            this.InvokeAsync("SetQualityControlApply", new object[] {
                        model}, this.SetQualityControlApplyOperationCompleted, userState);
        }
        
        private void OnSetQualityControlApplyOperationCompleted(object arg) {
            if ((this.SetQualityControlApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetQualityControlApplyCompleted(this, new SetQualityControlApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlApply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QualityControlApply GetQualityControlApply(int id) {
            object[] results = this.Invoke("GetQualityControlApply", new object[] {
                        id});
            return ((QualityControlApply)(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlApplyAsync(int id) {
            this.GetQualityControlApplyAsync(id, null);
        }
        
        /// <remarks/>
        public void GetQualityControlApplyAsync(int id, object userState) {
            if ((this.GetQualityControlApplyOperationCompleted == null)) {
                this.GetQualityControlApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlApplyOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlApply", new object[] {
                        id}, this.GetQualityControlApplyOperationCompleted, userState);
        }
        
        private void OnGetQualityControlApplyOperationCompleted(object arg) {
            if ((this.GetQualityControlApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlApplyCompleted(this, new GetQualityControlApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlApplyByQcInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QualityControlApply GetQualityControlApplyByQcInfo(string CureNo, string QcCode, int ErrorCode) {
            object[] results = this.Invoke("GetQualityControlApplyByQcInfo", new object[] {
                        CureNo,
                        QcCode,
                        ErrorCode});
            return ((QualityControlApply)(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlApplyByQcInfoAsync(string CureNo, string QcCode, int ErrorCode) {
            this.GetQualityControlApplyByQcInfoAsync(CureNo, QcCode, ErrorCode, null);
        }
        
        /// <remarks/>
        public void GetQualityControlApplyByQcInfoAsync(string CureNo, string QcCode, int ErrorCode, object userState) {
            if ((this.GetQualityControlApplyByQcInfoOperationCompleted == null)) {
                this.GetQualityControlApplyByQcInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlApplyByQcInfoOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlApplyByQcInfo", new object[] {
                        CureNo,
                        QcCode,
                        ErrorCode}, this.GetQualityControlApplyByQcInfoOperationCompleted, userState);
        }
        
        private void OnGetQualityControlApplyByQcInfoOperationCompleted(object arg) {
            if ((this.GetQualityControlApplyByQcInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlApplyByQcInfoCompleted(this, new GetQualityControlApplyByQcInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlApplyList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QualityControlApply[] GetQualityControlApplyList(string wardCode, string admitNo, string userCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> applyTimeStart, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> applyTimeEnd, int applyStatus) {
            object[] results = this.Invoke("GetQualityControlApplyList", new object[] {
                        wardCode,
                        admitNo,
                        userCode,
                        applyTimeStart,
                        applyTimeEnd,
                        applyStatus});
            return ((QualityControlApply[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlApplyListAsync(string wardCode, string admitNo, string userCode, System.Nullable<System.DateTime> applyTimeStart, System.Nullable<System.DateTime> applyTimeEnd, int applyStatus) {
            this.GetQualityControlApplyListAsync(wardCode, admitNo, userCode, applyTimeStart, applyTimeEnd, applyStatus, null);
        }
        
        /// <remarks/>
        public void GetQualityControlApplyListAsync(string wardCode, string admitNo, string userCode, System.Nullable<System.DateTime> applyTimeStart, System.Nullable<System.DateTime> applyTimeEnd, int applyStatus, object userState) {
            if ((this.GetQualityControlApplyListOperationCompleted == null)) {
                this.GetQualityControlApplyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlApplyListOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlApplyList", new object[] {
                        wardCode,
                        admitNo,
                        userCode,
                        applyTimeStart,
                        applyTimeEnd,
                        applyStatus}, this.GetQualityControlApplyListOperationCompleted, userState);
        }
        
        private void OnGetQualityControlApplyListOperationCompleted(object arg) {
            if ((this.GetQualityControlApplyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlApplyListCompleted(this, new GetQualityControlApplyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchApproveQualityControlApply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult BatchApproveQualityControlApply(int[] idList, string ApproveUserCode, string ApproveUserName, int ApplyStatus) {
            object[] results = this.Invoke("BatchApproveQualityControlApply", new object[] {
                        idList,
                        ApproveUserCode,
                        ApproveUserName,
                        ApplyStatus});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void BatchApproveQualityControlApplyAsync(int[] idList, string ApproveUserCode, string ApproveUserName, int ApplyStatus) {
            this.BatchApproveQualityControlApplyAsync(idList, ApproveUserCode, ApproveUserName, ApplyStatus, null);
        }
        
        /// <remarks/>
        public void BatchApproveQualityControlApplyAsync(int[] idList, string ApproveUserCode, string ApproveUserName, int ApplyStatus, object userState) {
            if ((this.BatchApproveQualityControlApplyOperationCompleted == null)) {
                this.BatchApproveQualityControlApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchApproveQualityControlApplyOperationCompleted);
            }
            this.InvokeAsync("BatchApproveQualityControlApply", new object[] {
                        idList,
                        ApproveUserCode,
                        ApproveUserName,
                        ApplyStatus}, this.BatchApproveQualityControlApplyOperationCompleted, userState);
        }
        
        private void OnBatchApproveQualityControlApplyOperationCompleted(object arg) {
            if ((this.BatchApproveQualityControlApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchApproveQualityControlApplyCompleted(this, new BatchApproveQualityControlApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxSort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxSort() {
            object[] results = this.Invoke("GetMaxSort", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxSortAsync() {
            this.GetMaxSortAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxSortAsync(object userState) {
            if ((this.GetMaxSortOperationCompleted == null)) {
                this.GetMaxSortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxSortOperationCompleted);
            }
            this.InvokeAsync("GetMaxSort", new object[0], this.GetMaxSortOperationCompleted, userState);
        }
        
        private void OnGetMaxSortOperationCompleted(object arg) {
            if ((this.GetMaxSortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxSortCompleted(this, new GetMaxSortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaxCode(string parentCode) {
            object[] results = this.Invoke("GetMaxCode", new object[] {
                        parentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxCodeAsync(string parentCode) {
            this.GetMaxCodeAsync(parentCode, null);
        }
        
        /// <remarks/>
        public void GetMaxCodeAsync(string parentCode, object userState) {
            if ((this.GetMaxCodeOperationCompleted == null)) {
                this.GetMaxCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxCodeOperationCompleted);
            }
            this.InvokeAsync("GetMaxCode", new object[] {
                        parentCode}, this.GetMaxCodeOperationCompleted, userState);
        }
        
        private void OnGetMaxCodeOperationCompleted(object arg) {
            if ((this.GetMaxCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxCodeCompleted(this, new GetMaxCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplateListWithAttributes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplate[] GetTemplateListWithAttributes(string parentCode) {
            object[] results = this.Invoke("GetTemplateListWithAttributes", new object[] {
                        parentCode});
            return ((EmrTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateListWithAttributesAsync(string parentCode) {
            this.GetTemplateListWithAttributesAsync(parentCode, null);
        }
        
        /// <remarks/>
        public void GetTemplateListWithAttributesAsync(string parentCode, object userState) {
            if ((this.GetTemplateListWithAttributesOperationCompleted == null)) {
                this.GetTemplateListWithAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateListWithAttributesOperationCompleted);
            }
            this.InvokeAsync("GetTemplateListWithAttributes", new object[] {
                        parentCode}, this.GetTemplateListWithAttributesOperationCompleted, userState);
        }
        
        private void OnGetTemplateListWithAttributesOperationCompleted(object arg) {
            if ((this.GetTemplateListWithAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateListWithAttributesCompleted(this, new GetTemplateListWithAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplateAttributeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TemplateAttribute[] GetTemplateAttributeList(string parentCode) {
            object[] results = this.Invoke("GetTemplateAttributeList", new object[] {
                        parentCode});
            return ((TemplateAttribute[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateAttributeListAsync(string parentCode) {
            this.GetTemplateAttributeListAsync(parentCode, null);
        }
        
        /// <remarks/>
        public void GetTemplateAttributeListAsync(string parentCode, object userState) {
            if ((this.GetTemplateAttributeListOperationCompleted == null)) {
                this.GetTemplateAttributeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateAttributeListOperationCompleted);
            }
            this.InvokeAsync("GetTemplateAttributeList", new object[] {
                        parentCode}, this.GetTemplateAttributeListOperationCompleted, userState);
        }
        
        private void OnGetTemplateAttributeListOperationCompleted(object arg) {
            if ((this.GetTemplateAttributeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateAttributeListCompleted(this, new GetTemplateAttributeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTemplateAttribute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveTemplateAttribute(TemplateAttribute entity) {
            object[] results = this.Invoke("SaveTemplateAttribute", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateAttributeAsync(TemplateAttribute entity) {
            this.SaveTemplateAttributeAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveTemplateAttributeAsync(TemplateAttribute entity, object userState) {
            if ((this.SaveTemplateAttributeOperationCompleted == null)) {
                this.SaveTemplateAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateAttributeOperationCompleted);
            }
            this.InvokeAsync("SaveTemplateAttribute", new object[] {
                        entity}, this.SaveTemplateAttributeOperationCompleted, userState);
        }
        
        private void OnSaveTemplateAttributeOperationCompleted(object arg) {
            if ((this.SaveTemplateAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateAttributeCompleted(this, new SaveTemplateAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTemplateAttribute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTemplateAttribute(string ID) {
            this.Invoke("DeleteTemplateAttribute", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void DeleteTemplateAttributeAsync(string ID) {
            this.DeleteTemplateAttributeAsync(ID, null);
        }
        
        /// <remarks/>
        public void DeleteTemplateAttributeAsync(string ID, object userState) {
            if ((this.DeleteTemplateAttributeOperationCompleted == null)) {
                this.DeleteTemplateAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateAttributeOperationCompleted);
            }
            this.InvokeAsync("DeleteTemplateAttribute", new object[] {
                        ID}, this.DeleteTemplateAttributeOperationCompleted, userState);
        }
        
        private void OnDeleteTemplateAttributeOperationCompleted(object arg) {
            if ((this.DeleteTemplateAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTemplateAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplateAttributeByTemplateID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TemplateAttribute GetTemplateAttributeByTemplateID(string templateId) {
            object[] results = this.Invoke("GetTemplateAttributeByTemplateID", new object[] {
                        templateId});
            return ((TemplateAttribute)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateAttributeByTemplateIDAsync(string templateId) {
            this.GetTemplateAttributeByTemplateIDAsync(templateId, null);
        }
        
        /// <remarks/>
        public void GetTemplateAttributeByTemplateIDAsync(string templateId, object userState) {
            if ((this.GetTemplateAttributeByTemplateIDOperationCompleted == null)) {
                this.GetTemplateAttributeByTemplateIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateAttributeByTemplateIDOperationCompleted);
            }
            this.InvokeAsync("GetTemplateAttributeByTemplateID", new object[] {
                        templateId}, this.GetTemplateAttributeByTemplateIDOperationCompleted, userState);
        }
        
        private void OnGetTemplateAttributeByTemplateIDOperationCompleted(object arg) {
            if ((this.GetTemplateAttributeByTemplateIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateAttributeByTemplateIDCompleted(this, new GetTemplateAttributeByTemplateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommonDictionryListFirstDepth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommonDictionry[] GetCommonDictionryListFirstDepth(string code) {
            object[] results = this.Invoke("GetCommonDictionryListFirstDepth", new object[] {
                        code});
            return ((CommonDictionry[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonDictionryListFirstDepthAsync(string code) {
            this.GetCommonDictionryListFirstDepthAsync(code, null);
        }
        
        /// <remarks/>
        public void GetCommonDictionryListFirstDepthAsync(string code, object userState) {
            if ((this.GetCommonDictionryListFirstDepthOperationCompleted == null)) {
                this.GetCommonDictionryListFirstDepthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonDictionryListFirstDepthOperationCompleted);
            }
            this.InvokeAsync("GetCommonDictionryListFirstDepth", new object[] {
                        code}, this.GetCommonDictionryListFirstDepthOperationCompleted, userState);
        }
        
        private void OnGetCommonDictionryListFirstDepthOperationCompleted(object arg) {
            if ((this.GetCommonDictionryListFirstDepthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonDictionryListFirstDepthCompleted(this, new GetCommonDictionryListFirstDepthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommonDictionryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommonDictionry[] GetCommonDictionryList(string code) {
            object[] results = this.Invoke("GetCommonDictionryList", new object[] {
                        code});
            return ((CommonDictionry[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonDictionryListAsync(string code) {
            this.GetCommonDictionryListAsync(code, null);
        }
        
        /// <remarks/>
        public void GetCommonDictionryListAsync(string code, object userState) {
            if ((this.GetCommonDictionryListOperationCompleted == null)) {
                this.GetCommonDictionryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonDictionryListOperationCompleted);
            }
            this.InvokeAsync("GetCommonDictionryList", new object[] {
                        code}, this.GetCommonDictionryListOperationCompleted, userState);
        }
        
        private void OnGetCommonDictionryListOperationCompleted(object arg) {
            if ((this.GetCommonDictionryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonDictionryListCompleted(this, new GetCommonDictionryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveCommonDictionry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveCommonDictionry(CommonDictionry entity) {
            object[] results = this.Invoke("SaveCommonDictionry", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCommonDictionryAsync(CommonDictionry entity) {
            this.SaveCommonDictionryAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveCommonDictionryAsync(CommonDictionry entity, object userState) {
            if ((this.SaveCommonDictionryOperationCompleted == null)) {
                this.SaveCommonDictionryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCommonDictionryOperationCompleted);
            }
            this.InvokeAsync("SaveCommonDictionry", new object[] {
                        entity}, this.SaveCommonDictionryOperationCompleted, userState);
        }
        
        private void OnSaveCommonDictionryOperationCompleted(object arg) {
            if ((this.SaveCommonDictionryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCommonDictionryCompleted(this, new SaveCommonDictionryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDepartment[] GetDepartment(string AppName, string DataRightType, string userCode) {
            object[] results = this.Invoke("GetDepartment", new object[] {
                        AppName,
                        DataRightType,
                        userCode});
            return ((EmrDepartment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string AppName, string DataRightType, string userCode) {
            this.GetDepartmentAsync(AppName, DataRightType, userCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string AppName, string DataRightType, string userCode, object userState) {
            if ((this.GetDepartmentOperationCompleted == null)) {
                this.GetDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetDepartment", new object[] {
                        AppName,
                        DataRightType,
                        userCode}, this.GetDepartmentOperationCompleted, userState);
        }
        
        private void OnGetDepartmentOperationCompleted(object arg) {
            if ((this.GetDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentCompleted(this, new GetDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDoctorQualify[] SearchDoctor(string TypeCode) {
            object[] results = this.Invoke("SearchDoctor", new object[] {
                        TypeCode});
            return ((EmrDoctorQualify[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchDoctorAsync(string TypeCode) {
            this.SearchDoctorAsync(TypeCode, null);
        }
        
        /// <remarks/>
        public void SearchDoctorAsync(string TypeCode, object userState) {
            if ((this.SearchDoctorOperationCompleted == null)) {
                this.SearchDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDoctorOperationCompleted);
            }
            this.InvokeAsync("SearchDoctor", new object[] {
                        TypeCode}, this.SearchDoctorOperationCompleted, userState);
        }
        
        private void OnSearchDoctorOperationCompleted(object arg) {
            if ((this.SearchDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDoctorCompleted(this, new SearchDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDoctorQualify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDoctorQualify(EmrDoctorQualify emr) {
            object[] results = this.Invoke("SaveEmrDoctorQualify", new object[] {
                        emr});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDoctorQualifyAsync(EmrDoctorQualify emr) {
            this.SaveEmrDoctorQualifyAsync(emr, null);
        }
        
        /// <remarks/>
        public void SaveEmrDoctorQualifyAsync(EmrDoctorQualify emr, object userState) {
            if ((this.SaveEmrDoctorQualifyOperationCompleted == null)) {
                this.SaveEmrDoctorQualifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDoctorQualifyOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDoctorQualify", new object[] {
                        emr}, this.SaveEmrDoctorQualifyOperationCompleted, userState);
        }
        
        private void OnSaveEmrDoctorQualifyOperationCompleted(object arg) {
            if ((this.SaveEmrDoctorQualifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDoctorQualifyCompleted(this, new SaveEmrDoctorQualifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddEmrDoctorQualify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult AddEmrDoctorQualify(EmrDoctorQualify emr) {
            object[] results = this.Invoke("AddEmrDoctorQualify", new object[] {
                        emr});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmrDoctorQualifyAsync(EmrDoctorQualify emr) {
            this.AddEmrDoctorQualifyAsync(emr, null);
        }
        
        /// <remarks/>
        public void AddEmrDoctorQualifyAsync(EmrDoctorQualify emr, object userState) {
            if ((this.AddEmrDoctorQualifyOperationCompleted == null)) {
                this.AddEmrDoctorQualifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmrDoctorQualifyOperationCompleted);
            }
            this.InvokeAsync("AddEmrDoctorQualify", new object[] {
                        emr}, this.AddEmrDoctorQualifyOperationCompleted, userState);
        }
        
        private void OnAddEmrDoctorQualifyOperationCompleted(object arg) {
            if ((this.AddEmrDoctorQualifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmrDoctorQualifyCompleted(this, new AddEmrDoctorQualifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrDoctorQualify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteEmrDoctorQualify(EmrDoctorQualify emr) {
            object[] results = this.Invoke("DeleteEmrDoctorQualify", new object[] {
                        emr});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrDoctorQualifyAsync(EmrDoctorQualify emr) {
            this.DeleteEmrDoctorQualifyAsync(emr, null);
        }
        
        /// <remarks/>
        public void DeleteEmrDoctorQualifyAsync(EmrDoctorQualify emr, object userState) {
            if ((this.DeleteEmrDoctorQualifyOperationCompleted == null)) {
                this.DeleteEmrDoctorQualifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrDoctorQualifyOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrDoctorQualify", new object[] {
                        emr}, this.DeleteEmrDoctorQualifyOperationCompleted, userState);
        }
        
        private void OnDeleteEmrDoctorQualifyOperationCompleted(object arg) {
            if ((this.DeleteEmrDoctorQualifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrDoctorQualifyCompleted(this, new DeleteEmrDoctorQualifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmrDoctorQualify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult UpdateEmrDoctorQualify(EmrDoctorQualify emr) {
            object[] results = this.Invoke("UpdateEmrDoctorQualify", new object[] {
                        emr});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrDoctorQualifyAsync(EmrDoctorQualify emr) {
            this.UpdateEmrDoctorQualifyAsync(emr, null);
        }
        
        /// <remarks/>
        public void UpdateEmrDoctorQualifyAsync(EmrDoctorQualify emr, object userState) {
            if ((this.UpdateEmrDoctorQualifyOperationCompleted == null)) {
                this.UpdateEmrDoctorQualifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrDoctorQualifyOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrDoctorQualify", new object[] {
                        emr}, this.UpdateEmrDoctorQualifyOperationCompleted, userState);
        }
        
        private void OnUpdateEmrDoctorQualifyOperationCompleted(object arg) {
            if ((this.UpdateEmrDoctorQualifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrDoctorQualifyCompleted(this, new UpdateEmrDoctorQualifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchDoctorByDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDoctorQualify[] SearchDoctorByDept(string DeptCode) {
            object[] results = this.Invoke("SearchDoctorByDept", new object[] {
                        DeptCode});
            return ((EmrDoctorQualify[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchDoctorByDeptAsync(string DeptCode) {
            this.SearchDoctorByDeptAsync(DeptCode, null);
        }
        
        /// <remarks/>
        public void SearchDoctorByDeptAsync(string DeptCode, object userState) {
            if ((this.SearchDoctorByDeptOperationCompleted == null)) {
                this.SearchDoctorByDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDoctorByDeptOperationCompleted);
            }
            this.InvokeAsync("SearchDoctorByDept", new object[] {
                        DeptCode}, this.SearchDoctorByDeptOperationCompleted, userState);
        }
        
        private void OnSearchDoctorByDeptOperationCompleted(object arg) {
            if ((this.SearchDoctorByDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDoctorByDeptCompleted(this, new SearchDoctorByDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchQualifiedDoctorByWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDoctorQualify[] SearchQualifiedDoctorByWard(string WardCode, string qualifyLevel) {
            object[] results = this.Invoke("SearchQualifiedDoctorByWard", new object[] {
                        WardCode,
                        qualifyLevel});
            return ((EmrDoctorQualify[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchQualifiedDoctorByWardAsync(string WardCode, string qualifyLevel) {
            this.SearchQualifiedDoctorByWardAsync(WardCode, qualifyLevel, null);
        }
        
        /// <remarks/>
        public void SearchQualifiedDoctorByWardAsync(string WardCode, string qualifyLevel, object userState) {
            if ((this.SearchQualifiedDoctorByWardOperationCompleted == null)) {
                this.SearchQualifiedDoctorByWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchQualifiedDoctorByWardOperationCompleted);
            }
            this.InvokeAsync("SearchQualifiedDoctorByWard", new object[] {
                        WardCode,
                        qualifyLevel}, this.SearchQualifiedDoctorByWardOperationCompleted, userState);
        }
        
        private void OnSearchQualifiedDoctorByWardOperationCompleted(object arg) {
            if ((this.SearchQualifiedDoctorByWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchQualifiedDoctorByWardCompleted(this, new SearchQualifiedDoctorByWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDoctorQualify[] SearchByDoctor(EmrDoctor emrd) {
            object[] results = this.Invoke("SearchByDoctor", new object[] {
                        emrd});
            return ((EmrDoctorQualify[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchByDoctorAsync(EmrDoctor emrd) {
            this.SearchByDoctorAsync(emrd, null);
        }
        
        /// <remarks/>
        public void SearchByDoctorAsync(EmrDoctor emrd, object userState) {
            if ((this.SearchByDoctorOperationCompleted == null)) {
                this.SearchByDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchByDoctorOperationCompleted);
            }
            this.InvokeAsync("SearchByDoctor", new object[] {
                        emrd}, this.SearchByDoctorOperationCompleted, userState);
        }
        
        private void OnSearchByDoctorOperationCompleted(object arg) {
            if ((this.SearchByDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchByDoctorCompleted(this, new SearchByDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchDoctorByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDoctorQualify[] SearchDoctorByName(string doctorName) {
            object[] results = this.Invoke("SearchDoctorByName", new object[] {
                        doctorName});
            return ((EmrDoctorQualify[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchDoctorByNameAsync(string doctorName) {
            this.SearchDoctorByNameAsync(doctorName, null);
        }
        
        /// <remarks/>
        public void SearchDoctorByNameAsync(string doctorName, object userState) {
            if ((this.SearchDoctorByNameOperationCompleted == null)) {
                this.SearchDoctorByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDoctorByNameOperationCompleted);
            }
            this.InvokeAsync("SearchDoctorByName", new object[] {
                        doctorName}, this.SearchDoctorByNameOperationCompleted, userState);
        }
        
        private void OnSearchDoctorByNameOperationCompleted(object arg) {
            if ((this.SearchDoctorByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDoctorByNameCompleted(this, new SearchDoctorByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLogByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Common_OperateLogInfo[] GetLogByCondition(string beginDate, string endDate, Common_OperateLogInfo log) {
            object[] results = this.Invoke("GetLogByCondition", new object[] {
                        beginDate,
                        endDate,
                        log});
            return ((Common_OperateLogInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLogByConditionAsync(string beginDate, string endDate, Common_OperateLogInfo log) {
            this.GetLogByConditionAsync(beginDate, endDate, log, null);
        }
        
        /// <remarks/>
        public void GetLogByConditionAsync(string beginDate, string endDate, Common_OperateLogInfo log, object userState) {
            if ((this.GetLogByConditionOperationCompleted == null)) {
                this.GetLogByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogByConditionOperationCompleted);
            }
            this.InvokeAsync("GetLogByCondition", new object[] {
                        beginDate,
                        endDate,
                        log}, this.GetLogByConditionOperationCompleted, userState);
        }
        
        private void OnGetLogByConditionOperationCompleted(object arg) {
            if ((this.GetLogByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogByConditionCompleted(this, new GetLogByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOperateLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOperateLog(int logType, int operateResult, string userCode, string userName, string moduleName, string operationName, string message, string keyWord) {
            this.Invoke("AddOperateLog", new object[] {
                        logType,
                        operateResult,
                        userCode,
                        userName,
                        moduleName,
                        operationName,
                        message,
                        keyWord});
        }
        
        /// <remarks/>
        public void AddOperateLogAsync(int logType, int operateResult, string userCode, string userName, string moduleName, string operationName, string message, string keyWord) {
            this.AddOperateLogAsync(logType, operateResult, userCode, userName, moduleName, operationName, message, keyWord, null);
        }
        
        /// <remarks/>
        public void AddOperateLogAsync(int logType, int operateResult, string userCode, string userName, string moduleName, string operationName, string message, string keyWord, object userState) {
            if ((this.AddOperateLogOperationCompleted == null)) {
                this.AddOperateLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperateLogOperationCompleted);
            }
            this.InvokeAsync("AddOperateLog", new object[] {
                        logType,
                        operateResult,
                        userCode,
                        userName,
                        moduleName,
                        operationName,
                        message,
                        keyWord}, this.AddOperateLogOperationCompleted, userState);
        }
        
        private void OnAddOperateLogOperationCompleted(object arg) {
            if ((this.AddOperateLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperateLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrQulityControlDeptByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQulityControlDept[] GetEmrQulityControlDeptByCondition(string condition) {
            object[] results = this.Invoke("GetEmrQulityControlDeptByCondition", new object[] {
                        condition});
            return ((EmrQulityControlDept[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptByConditionAsync(string condition) {
            this.GetEmrQulityControlDeptByConditionAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptByConditionAsync(string condition, object userState) {
            if ((this.GetEmrQulityControlDeptByConditionOperationCompleted == null)) {
                this.GetEmrQulityControlDeptByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrQulityControlDeptByConditionOperationCompleted);
            }
            this.InvokeAsync("GetEmrQulityControlDeptByCondition", new object[] {
                        condition}, this.GetEmrQulityControlDeptByConditionOperationCompleted, userState);
        }
        
        private void OnGetEmrQulityControlDeptByConditionOperationCompleted(object arg) {
            if ((this.GetEmrQulityControlDeptByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrQulityControlDeptByConditionCompleted(this, new GetEmrQulityControlDeptByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMRStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetEMRStatus(EMRStatus status) {
            this.Invoke("GetEMRStatus", new object[] {
                        status});
        }
        
        /// <remarks/>
        public void GetEMRStatusAsync(EMRStatus status) {
            this.GetEMRStatusAsync(status, null);
        }
        
        /// <remarks/>
        public void GetEMRStatusAsync(EMRStatus status, object userState) {
            if ((this.GetEMRStatusOperationCompleted == null)) {
                this.GetEMRStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMRStatusOperationCompleted);
            }
            this.InvokeAsync("GetEMRStatus", new object[] {
                        status}, this.GetEMRStatusOperationCompleted, userState);
        }
        
        private void OnGetEMRStatusOperationCompleted(object arg) {
            if ((this.GetEMRStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMRStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEMRStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult UpdateEMRStatus(EMRStatusAction action, string cureNo, string userCode, string userName) {
            object[] results = this.Invoke("UpdateEMRStatus", new object[] {
                        action,
                        cureNo,
                        userCode,
                        userName});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEMRStatusAsync(EMRStatusAction action, string cureNo, string userCode, string userName) {
            this.UpdateEMRStatusAsync(action, cureNo, userCode, userName, null);
        }
        
        /// <remarks/>
        public void UpdateEMRStatusAsync(EMRStatusAction action, string cureNo, string userCode, string userName, object userState) {
            if ((this.UpdateEMRStatusOperationCompleted == null)) {
                this.UpdateEMRStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEMRStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEMRStatus", new object[] {
                        action,
                        cureNo,
                        userCode,
                        userName}, this.UpdateEMRStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEMRStatusOperationCompleted(object arg) {
            if ((this.UpdateEMRStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEMRStatusCompleted(this, new UpdateEMRStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveQulityControlDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveQulityControlDept(EmrQulityControlDept entity) {
            object[] results = this.Invoke("SaveQulityControlDept", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQulityControlDeptAsync(EmrQulityControlDept entity) {
            this.SaveQulityControlDeptAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveQulityControlDeptAsync(EmrQulityControlDept entity, object userState) {
            if ((this.SaveQulityControlDeptOperationCompleted == null)) {
                this.SaveQulityControlDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQulityControlDeptOperationCompleted);
            }
            this.InvokeAsync("SaveQulityControlDept", new object[] {
                        entity}, this.SaveQulityControlDeptOperationCompleted, userState);
        }
        
        private void OnSaveQulityControlDeptOperationCompleted(object arg) {
            if ((this.SaveQulityControlDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQulityControlDeptCompleted(this, new SaveQulityControlDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteQulityControlDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteQulityControlDept(EmrQulityControlDept entity) {
            this.Invoke("DeleteQulityControlDept", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteQulityControlDeptAsync(EmrQulityControlDept entity) {
            this.DeleteQulityControlDeptAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteQulityControlDeptAsync(EmrQulityControlDept entity, object userState) {
            if ((this.DeleteQulityControlDeptOperationCompleted == null)) {
                this.DeleteQulityControlDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQulityControlDeptOperationCompleted);
            }
            this.InvokeAsync("DeleteQulityControlDept", new object[] {
                        entity}, this.DeleteQulityControlDeptOperationCompleted, userState);
        }
        
        private void OnDeleteQulityControlDeptOperationCompleted(object arg) {
            if ((this.DeleteQulityControlDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQulityControlDeptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDischaredPatientEmrDocStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetDischaredPatientEmrDocStatus() {
            object[] results = this.Invoke("SetDischaredPatientEmrDocStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetDischaredPatientEmrDocStatusAsync() {
            this.SetDischaredPatientEmrDocStatusAsync(null);
        }
        
        /// <remarks/>
        public void SetDischaredPatientEmrDocStatusAsync(object userState) {
            if ((this.SetDischaredPatientEmrDocStatusOperationCompleted == null)) {
                this.SetDischaredPatientEmrDocStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDischaredPatientEmrDocStatusOperationCompleted);
            }
            this.InvokeAsync("SetDischaredPatientEmrDocStatus", new object[0], this.SetDischaredPatientEmrDocStatusOperationCompleted, userState);
        }
        
        private void OnSetDischaredPatientEmrDocStatusOperationCompleted(object arg) {
            if ((this.SetDischaredPatientEmrDocStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDischaredPatientEmrDocStatusCompleted(this, new SetDischaredPatientEmrDocStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrQulityControlDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQulityControlDept GetEmrQulityControlDept(string cureNo) {
            object[] results = this.Invoke("GetEmrQulityControlDept", new object[] {
                        cureNo});
            return ((EmrQulityControlDept)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptAsync(string cureNo) {
            this.GetEmrQulityControlDeptAsync(cureNo, null);
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptAsync(string cureNo, object userState) {
            if ((this.GetEmrQulityControlDeptOperationCompleted == null)) {
                this.GetEmrQulityControlDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrQulityControlDeptOperationCompleted);
            }
            this.InvokeAsync("GetEmrQulityControlDept", new object[] {
                        cureNo}, this.GetEmrQulityControlDeptOperationCompleted, userState);
        }
        
        private void OnGetEmrQulityControlDeptOperationCompleted(object arg) {
            if ((this.GetEmrQulityControlDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrQulityControlDeptCompleted(this, new GetEmrQulityControlDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrQulityControlDeptList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQulityControlDept[] GetEmrQulityControlDeptList(string wardCode) {
            object[] results = this.Invoke("GetEmrQulityControlDeptList", new object[] {
                        wardCode});
            return ((EmrQulityControlDept[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptListAsync(string wardCode) {
            this.GetEmrQulityControlDeptListAsync(wardCode, null);
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDeptListAsync(string wardCode, object userState) {
            if ((this.GetEmrQulityControlDeptListOperationCompleted == null)) {
                this.GetEmrQulityControlDeptListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrQulityControlDeptListOperationCompleted);
            }
            this.InvokeAsync("GetEmrQulityControlDeptList", new object[] {
                        wardCode}, this.GetEmrQulityControlDeptListOperationCompleted, userState);
        }
        
        private void OnGetEmrQulityControlDeptListOperationCompleted(object arg) {
            if ((this.GetEmrQulityControlDeptListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrQulityControlDeptListCompleted(this, new GetEmrQulityControlDeptListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlDelaylistByWardNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQualityControlDelaylist[] GetQualityControlDelaylistByWardNo(string WardNo) {
            object[] results = this.Invoke("GetQualityControlDelaylistByWardNo", new object[] {
                        WardNo});
            return ((EmrQualityControlDelaylist[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlDelaylistByWardNoAsync(string WardNo) {
            this.GetQualityControlDelaylistByWardNoAsync(WardNo, null);
        }
        
        /// <remarks/>
        public void GetQualityControlDelaylistByWardNoAsync(string WardNo, object userState) {
            if ((this.GetQualityControlDelaylistByWardNoOperationCompleted == null)) {
                this.GetQualityControlDelaylistByWardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlDelaylistByWardNoOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlDelaylistByWardNo", new object[] {
                        WardNo}, this.GetQualityControlDelaylistByWardNoOperationCompleted, userState);
        }
        
        private void OnGetQualityControlDelaylistByWardNoOperationCompleted(object arg) {
            if ((this.GetQualityControlDelaylistByWardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlDelaylistByWardNoCompleted(this, new GetQualityControlDelaylistByWardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrReviewList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQulityControlDept[] GetEmrReviewList(string usercode, int doctorlevel) {
            object[] results = this.Invoke("GetEmrReviewList", new object[] {
                        usercode,
                        doctorlevel});
            return ((EmrQulityControlDept[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrReviewListAsync(string usercode, int doctorlevel) {
            this.GetEmrReviewListAsync(usercode, doctorlevel, null);
        }
        
        /// <remarks/>
        public void GetEmrReviewListAsync(string usercode, int doctorlevel, object userState) {
            if ((this.GetEmrReviewListOperationCompleted == null)) {
                this.GetEmrReviewListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrReviewListOperationCompleted);
            }
            this.InvokeAsync("GetEmrReviewList", new object[] {
                        usercode,
                        doctorlevel}, this.GetEmrReviewListOperationCompleted, userState);
        }
        
        private void OnGetEmrReviewListOperationCompleted(object arg) {
            if ((this.GetEmrReviewListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrReviewListCompleted(this, new GetEmrReviewListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocReviewList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDocReviewList(string usercode, int doctorlevel, string wardCode, int ismyReview, int savestatus) {
            object[] results = this.Invoke("GetDocReviewList", new object[] {
                        usercode,
                        doctorlevel,
                        wardCode,
                        ismyReview,
                        savestatus});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocReviewListAsync(string usercode, int doctorlevel, string wardCode, int ismyReview, int savestatus) {
            this.GetDocReviewListAsync(usercode, doctorlevel, wardCode, ismyReview, savestatus, null);
        }
        
        /// <remarks/>
        public void GetDocReviewListAsync(string usercode, int doctorlevel, string wardCode, int ismyReview, int savestatus, object userState) {
            if ((this.GetDocReviewListOperationCompleted == null)) {
                this.GetDocReviewListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocReviewListOperationCompleted);
            }
            this.InvokeAsync("GetDocReviewList", new object[] {
                        usercode,
                        doctorlevel,
                        wardCode,
                        ismyReview,
                        savestatus}, this.GetDocReviewListOperationCompleted, userState);
        }
        
        private void OnGetDocReviewListOperationCompleted(object arg) {
            if ((this.GetDocReviewListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocReviewListCompleted(this, new GetDocReviewListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrQulityControlDocActivationList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQulityControlDocActivation[] GetEmrQulityControlDocActivationList(string wardCode, string searchName, int page, ref int totalcount) {
            object[] results = this.Invoke("GetEmrQulityControlDocActivationList", new object[] {
                        wardCode,
                        searchName,
                        page,
                        totalcount});
            totalcount = ((int)(results[1]));
            return ((EmrQulityControlDocActivation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDocActivationListAsync(string wardCode, string searchName, int page, int totalcount) {
            this.GetEmrQulityControlDocActivationListAsync(wardCode, searchName, page, totalcount, null);
        }
        
        /// <remarks/>
        public void GetEmrQulityControlDocActivationListAsync(string wardCode, string searchName, int page, int totalcount, object userState) {
            if ((this.GetEmrQulityControlDocActivationListOperationCompleted == null)) {
                this.GetEmrQulityControlDocActivationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrQulityControlDocActivationListOperationCompleted);
            }
            this.InvokeAsync("GetEmrQulityControlDocActivationList", new object[] {
                        wardCode,
                        searchName,
                        page,
                        totalcount}, this.GetEmrQulityControlDocActivationListOperationCompleted, userState);
        }
        
        private void OnGetEmrQulityControlDocActivationListOperationCompleted(object arg) {
            if ((this.GetEmrQulityControlDocActivationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrQulityControlDocActivationListCompleted(this, new GetEmrQulityControlDocActivationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ActivateDoc(string CureNo, string usercode, string username, string msg) {
            this.Invoke("ActivateDoc", new object[] {
                        CureNo,
                        usercode,
                        username,
                        msg});
        }
        
        /// <remarks/>
        public void ActivateDocAsync(string CureNo, string usercode, string username, string msg) {
            this.ActivateDocAsync(CureNo, usercode, username, msg, null);
        }
        
        /// <remarks/>
        public void ActivateDocAsync(string CureNo, string usercode, string username, string msg, object userState) {
            if ((this.ActivateDocOperationCompleted == null)) {
                this.ActivateDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateDocOperationCompleted);
            }
            this.InvokeAsync("ActivateDoc", new object[] {
                        CureNo,
                        usercode,
                        username,
                        msg}, this.ActivateDocOperationCompleted, userState);
        }
        
        private void OnActivateDocOperationCompleted(object arg) {
            if ((this.ActivateDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateDocCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrMyPatients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrMyPatients(EmrMyPatients entity) {
            object[] results = this.Invoke("SaveEmrMyPatients", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrMyPatientsAsync(EmrMyPatients entity) {
            this.SaveEmrMyPatientsAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrMyPatientsAsync(EmrMyPatients entity, object userState) {
            if ((this.SaveEmrMyPatientsOperationCompleted == null)) {
                this.SaveEmrMyPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrMyPatientsOperationCompleted);
            }
            this.InvokeAsync("SaveEmrMyPatients", new object[] {
                        entity}, this.SaveEmrMyPatientsOperationCompleted, userState);
        }
        
        private void OnSaveEmrMyPatientsOperationCompleted(object arg) {
            if ((this.SaveEmrMyPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrMyPatientsCompleted(this, new SaveEmrMyPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrMyPatients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrMyPatients(EmrMyPatients entity) {
            this.Invoke("DeleteEmrMyPatients", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteEmrMyPatientsAsync(EmrMyPatients entity) {
            this.DeleteEmrMyPatientsAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrMyPatientsAsync(EmrMyPatients entity, object userState) {
            if ((this.DeleteEmrMyPatientsOperationCompleted == null)) {
                this.DeleteEmrMyPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrMyPatientsOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrMyPatients", new object[] {
                        entity}, this.DeleteEmrMyPatientsOperationCompleted, userState);
        }
        
        private void OnDeleteEmrMyPatientsOperationCompleted(object arg) {
            if ((this.DeleteEmrMyPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrMyPatientsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrMyPatients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrMyPatients GetEmrMyPatients(string CureNo, string DoctorNo) {
            object[] results = this.Invoke("GetEmrMyPatients", new object[] {
                        CureNo,
                        DoctorNo});
            return ((EmrMyPatients)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrMyPatientsAsync(string CureNo, string DoctorNo) {
            this.GetEmrMyPatientsAsync(CureNo, DoctorNo, null);
        }
        
        /// <remarks/>
        public void GetEmrMyPatientsAsync(string CureNo, string DoctorNo, object userState) {
            if ((this.GetEmrMyPatientsOperationCompleted == null)) {
                this.GetEmrMyPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrMyPatientsOperationCompleted);
            }
            this.InvokeAsync("GetEmrMyPatients", new object[] {
                        CureNo,
                        DoctorNo}, this.GetEmrMyPatientsOperationCompleted, userState);
        }
        
        private void OnGetEmrMyPatientsOperationCompleted(object arg) {
            if ((this.GetEmrMyPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrMyPatientsCompleted(this, new GetEmrMyPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrMyPatientsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrMyPatients[] GetEmrMyPatientsList(string DoctorNo) {
            object[] results = this.Invoke("GetEmrMyPatientsList", new object[] {
                        DoctorNo});
            return ((EmrMyPatients[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrMyPatientsListAsync(string DoctorNo) {
            this.GetEmrMyPatientsListAsync(DoctorNo, null);
        }
        
        /// <remarks/>
        public void GetEmrMyPatientsListAsync(string DoctorNo, object userState) {
            if ((this.GetEmrMyPatientsListOperationCompleted == null)) {
                this.GetEmrMyPatientsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrMyPatientsListOperationCompleted);
            }
            this.InvokeAsync("GetEmrMyPatientsList", new object[] {
                        DoctorNo}, this.GetEmrMyPatientsListOperationCompleted, userState);
        }
        
        private void OnGetEmrMyPatientsListOperationCompleted(object arg) {
            if ((this.GetEmrMyPatientsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrMyPatientsListCompleted(this, new GetEmrMyPatientsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPatientsByWardWhichIsLatestCureForMyPatients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPatientsByWardWhichIsLatestCureForMyPatients(string WardCode, System.DateTime now) {
            object[] results = this.Invoke("GetAllPatientsByWardWhichIsLatestCureForMyPatients", new object[] {
                        WardCode,
                        now});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPatientsByWardWhichIsLatestCureForMyPatientsAsync(string WardCode, System.DateTime now) {
            this.GetAllPatientsByWardWhichIsLatestCureForMyPatientsAsync(WardCode, now, null);
        }
        
        /// <remarks/>
        public void GetAllPatientsByWardWhichIsLatestCureForMyPatientsAsync(string WardCode, System.DateTime now, object userState) {
            if ((this.GetAllPatientsByWardWhichIsLatestCureForMyPatientsOperationCompleted == null)) {
                this.GetAllPatientsByWardWhichIsLatestCureForMyPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPatientsByWardWhichIsLatestCureForMyPatientsOperationCompleted);
            }
            this.InvokeAsync("GetAllPatientsByWardWhichIsLatestCureForMyPatients", new object[] {
                        WardCode,
                        now}, this.GetAllPatientsByWardWhichIsLatestCureForMyPatientsOperationCompleted, userState);
        }
        
        private void OnGetAllPatientsByWardWhichIsLatestCureForMyPatientsOperationCompleted(object arg) {
            if ((this.GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompleted(this, new GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocStatusList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDict[] GetDocStatusList(string[] cureNoList) {
            object[] results = this.Invoke("GetDocStatusList", new object[] {
                        cureNoList});
            return ((EmrDict[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocStatusListAsync(string[] cureNoList) {
            this.GetDocStatusListAsync(cureNoList, null);
        }
        
        /// <remarks/>
        public void GetDocStatusListAsync(string[] cureNoList, object userState) {
            if ((this.GetDocStatusListOperationCompleted == null)) {
                this.GetDocStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocStatusListOperationCompleted);
            }
            this.InvokeAsync("GetDocStatusList", new object[] {
                        cureNoList}, this.GetDocStatusListOperationCompleted, userState);
        }
        
        private void OnGetDocStatusListOperationCompleted(object arg) {
            if ((this.GetDocStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocStatusListCompleted(this, new GetDocStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTreatDoctors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTreatDoctor[] GetTreatDoctors(string[] cureNoList) {
            object[] results = this.Invoke("GetTreatDoctors", new object[] {
                        cureNoList});
            return ((EmrTreatDoctor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatDoctorsAsync(string[] cureNoList) {
            this.GetTreatDoctorsAsync(cureNoList, null);
        }
        
        /// <remarks/>
        public void GetTreatDoctorsAsync(string[] cureNoList, object userState) {
            if ((this.GetTreatDoctorsOperationCompleted == null)) {
                this.GetTreatDoctorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatDoctorsOperationCompleted);
            }
            this.InvokeAsync("GetTreatDoctors", new object[] {
                        cureNoList}, this.GetTreatDoctorsOperationCompleted, userState);
        }
        
        private void OnGetTreatDoctorsOperationCompleted(object arg) {
            if ((this.GetTreatDoctorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatDoctorsCompleted(this, new GetTreatDoctorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCPCureNosByStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCPCureNosByStatus(int status) {
            object[] results = this.Invoke("GetCPCureNosByStatus", new object[] {
                        status});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCPCureNosByStatusAsync(int status) {
            this.GetCPCureNosByStatusAsync(status, null);
        }
        
        /// <remarks/>
        public void GetCPCureNosByStatusAsync(int status, object userState) {
            if ((this.GetCPCureNosByStatusOperationCompleted == null)) {
                this.GetCPCureNosByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCPCureNosByStatusOperationCompleted);
            }
            this.InvokeAsync("GetCPCureNosByStatus", new object[] {
                        status}, this.GetCPCureNosByStatusOperationCompleted, userState);
        }
        
        private void OnGetCPCureNosByStatusOperationCompleted(object arg) {
            if ((this.GetCPCureNosByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCPCureNosByStatusCompleted(this, new GetCPCureNosByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCPCureNoStatusList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDict[] GetCPCureNoStatusList(string[] cureNoList) {
            object[] results = this.Invoke("GetCPCureNoStatusList", new object[] {
                        cureNoList});
            return ((EmrDict[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCPCureNoStatusListAsync(string[] cureNoList) {
            this.GetCPCureNoStatusListAsync(cureNoList, null);
        }
        
        /// <remarks/>
        public void GetCPCureNoStatusListAsync(string[] cureNoList, object userState) {
            if ((this.GetCPCureNoStatusListOperationCompleted == null)) {
                this.GetCPCureNoStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCPCureNoStatusListOperationCompleted);
            }
            this.InvokeAsync("GetCPCureNoStatusList", new object[] {
                        cureNoList}, this.GetCPCureNoStatusListOperationCompleted, userState);
        }
        
        private void OnGetCPCureNoStatusListOperationCompleted(object arg) {
            if ((this.GetCPCureNoStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCPCureNoStatusListCompleted(this, new GetCPCureNoStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyPatientInfoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrMyPatients[] GetMyPatientInfoList(EmrMyPatientsCondition condition, bool needPaging, out int total) {
            object[] results = this.Invoke("GetMyPatientInfoList", new object[] {
                        condition,
                        needPaging});
            total = ((int)(results[1]));
            return ((EmrMyPatients[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyPatientInfoListAsync(EmrMyPatientsCondition condition, bool needPaging) {
            this.GetMyPatientInfoListAsync(condition, needPaging, null);
        }
        
        /// <remarks/>
        public void GetMyPatientInfoListAsync(EmrMyPatientsCondition condition, bool needPaging, object userState) {
            if ((this.GetMyPatientInfoListOperationCompleted == null)) {
                this.GetMyPatientInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyPatientInfoListOperationCompleted);
            }
            this.InvokeAsync("GetMyPatientInfoList", new object[] {
                        condition,
                        needPaging}, this.GetMyPatientInfoListOperationCompleted, userState);
        }
        
        private void OnGetMyPatientInfoListOperationCompleted(object arg) {
            if ((this.GetMyPatientInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyPatientInfoListCompleted(this, new GetMyPatientInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyPatientInfoListByProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultCollectionOfListOfEmrMyPatients GetMyPatientInfoListByProc(EmrMyPatientsCondition condition) {
            object[] results = this.Invoke("GetMyPatientInfoListByProc", new object[] {
                        condition});
            return ((ResultCollectionOfListOfEmrMyPatients)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyPatientInfoListByProcAsync(EmrMyPatientsCondition condition) {
            this.GetMyPatientInfoListByProcAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetMyPatientInfoListByProcAsync(EmrMyPatientsCondition condition, object userState) {
            if ((this.GetMyPatientInfoListByProcOperationCompleted == null)) {
                this.GetMyPatientInfoListByProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyPatientInfoListByProcOperationCompleted);
            }
            this.InvokeAsync("GetMyPatientInfoListByProc", new object[] {
                        condition}, this.GetMyPatientInfoListByProcOperationCompleted, userState);
        }
        
        private void OnGetMyPatientInfoListByProcOperationCompleted(object arg) {
            if ((this.GetMyPatientInfoListByProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyPatientInfoListByProcCompleted(this, new GetMyPatientInfoListByProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyPatientCureNoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMyPatientCureNoList(string userCode) {
            object[] results = this.Invoke("GetMyPatientCureNoList", new object[] {
                        userCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyPatientCureNoListAsync(string userCode) {
            this.GetMyPatientCureNoListAsync(userCode, null);
        }
        
        /// <remarks/>
        public void GetMyPatientCureNoListAsync(string userCode, object userState) {
            if ((this.GetMyPatientCureNoListOperationCompleted == null)) {
                this.GetMyPatientCureNoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyPatientCureNoListOperationCompleted);
            }
            this.InvokeAsync("GetMyPatientCureNoList", new object[] {
                        userCode}, this.GetMyPatientCureNoListOperationCompleted, userState);
        }
        
        private void OnGetMyPatientCureNoListOperationCompleted(object arg) {
            if ((this.GetMyPatientCureNoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyPatientCureNoListCompleted(this, new GetMyPatientCureNoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfoIntegratedListByProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrMyPatients[] GetPatientInfoIntegratedListByProc(EmrCoverPageCondition condition) {
            object[] results = this.Invoke("GetPatientInfoIntegratedListByProc", new object[] {
                        condition});
            return ((EmrMyPatients[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoIntegratedListByProcAsync(EmrCoverPageCondition condition) {
            this.GetPatientInfoIntegratedListByProcAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoIntegratedListByProcAsync(EmrCoverPageCondition condition, object userState) {
            if ((this.GetPatientInfoIntegratedListByProcOperationCompleted == null)) {
                this.GetPatientInfoIntegratedListByProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoIntegratedListByProcOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoIntegratedListByProc", new object[] {
                        condition}, this.GetPatientInfoIntegratedListByProcOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoIntegratedListByProcOperationCompleted(object arg) {
            if ((this.GetPatientInfoIntegratedListByProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoIntegratedListByProcCompleted(this, new GetPatientInfoIntegratedListByProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfoIntegratedList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrMyPatients[] GetPatientInfoIntegratedList(EmrMyPatientsCondition condition) {
            object[] results = this.Invoke("GetPatientInfoIntegratedList", new object[] {
                        condition});
            return ((EmrMyPatients[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoIntegratedListAsync(EmrMyPatientsCondition condition) {
            this.GetPatientInfoIntegratedListAsync(condition, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoIntegratedListAsync(EmrMyPatientsCondition condition, object userState) {
            if ((this.GetPatientInfoIntegratedListOperationCompleted == null)) {
                this.GetPatientInfoIntegratedListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoIntegratedListOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoIntegratedList", new object[] {
                        condition}, this.GetPatientInfoIntegratedListOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoIntegratedListOperationCompleted(object arg) {
            if ((this.GetPatientInfoIntegratedListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoIntegratedListCompleted(this, new GetPatientInfoIntegratedListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyInputAssistantTreeView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMyInputAssistantTreeView() {
            object[] results = this.Invoke("GetMyInputAssistantTreeView", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyInputAssistantTreeViewAsync() {
            this.GetMyInputAssistantTreeViewAsync(null);
        }
        
        /// <remarks/>
        public void GetMyInputAssistantTreeViewAsync(object userState) {
            if ((this.GetMyInputAssistantTreeViewOperationCompleted == null)) {
                this.GetMyInputAssistantTreeViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyInputAssistantTreeViewOperationCompleted);
            }
            this.InvokeAsync("GetMyInputAssistantTreeView", new object[0], this.GetMyInputAssistantTreeViewOperationCompleted, userState);
        }
        
        private void OnGetMyInputAssistantTreeViewOperationCompleted(object arg) {
            if ((this.GetMyInputAssistantTreeViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyInputAssistantTreeViewCompleted(this, new GetMyInputAssistantTreeViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeneralSymbol", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGeneralSymbol(string nodeType) {
            object[] results = this.Invoke("GetGeneralSymbol", new object[] {
                        nodeType});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralSymbolAsync(string nodeType) {
            this.GetGeneralSymbolAsync(nodeType, null);
        }
        
        /// <remarks/>
        public void GetGeneralSymbolAsync(string nodeType, object userState) {
            if ((this.GetGeneralSymbolOperationCompleted == null)) {
                this.GetGeneralSymbolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralSymbolOperationCompleted);
            }
            this.InvokeAsync("GetGeneralSymbol", new object[] {
                        nodeType}, this.GetGeneralSymbolOperationCompleted, userState);
        }
        
        private void OnGetGeneralSymbolOperationCompleted(object arg) {
            if ((this.GetGeneralSymbolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralSymbolCompleted(this, new GetGeneralSymbolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchEmrScoreType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrScoreType[] SearchEmrScoreType(int typeID, string scorename) {
            object[] results = this.Invoke("SearchEmrScoreType", new object[] {
                        typeID,
                        scorename});
            return ((EmrScoreType[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchEmrScoreTypeAsync(int typeID, string scorename) {
            this.SearchEmrScoreTypeAsync(typeID, scorename, null);
        }
        
        /// <remarks/>
        public void SearchEmrScoreTypeAsync(int typeID, string scorename, object userState) {
            if ((this.SearchEmrScoreTypeOperationCompleted == null)) {
                this.SearchEmrScoreTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchEmrScoreTypeOperationCompleted);
            }
            this.InvokeAsync("SearchEmrScoreType", new object[] {
                        typeID,
                        scorename}, this.SearchEmrScoreTypeOperationCompleted, userState);
        }
        
        private void OnSearchEmrScoreTypeOperationCompleted(object arg) {
            if ((this.SearchEmrScoreTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchEmrScoreTypeCompleted(this, new SearchEmrScoreTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrScoreType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrScoreType(EmrScoreType entity) {
            object[] results = this.Invoke("SaveEmrScoreType", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrScoreTypeAsync(EmrScoreType entity) {
            this.SaveEmrScoreTypeAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrScoreTypeAsync(EmrScoreType entity, object userState) {
            if ((this.SaveEmrScoreTypeOperationCompleted == null)) {
                this.SaveEmrScoreTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrScoreTypeOperationCompleted);
            }
            this.InvokeAsync("SaveEmrScoreType", new object[] {
                        entity}, this.SaveEmrScoreTypeOperationCompleted, userState);
        }
        
        private void OnSaveEmrScoreTypeOperationCompleted(object arg) {
            if ((this.SaveEmrScoreTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrScoreTypeCompleted(this, new SaveEmrScoreTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrScoreType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteEmrScoreType(EmrScoreType entity) {
            object[] results = this.Invoke("DeleteEmrScoreType", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrScoreTypeAsync(EmrScoreType entity) {
            this.DeleteEmrScoreTypeAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrScoreTypeAsync(EmrScoreType entity, object userState) {
            if ((this.DeleteEmrScoreTypeOperationCompleted == null)) {
                this.DeleteEmrScoreTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrScoreTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrScoreType", new object[] {
                        entity}, this.DeleteEmrScoreTypeOperationCompleted, userState);
        }
        
        private void OnDeleteEmrScoreTypeOperationCompleted(object arg) {
            if ((this.DeleteEmrScoreTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrScoreTypeCompleted(this, new DeleteEmrScoreTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchEmrScoreByContition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrScore[] SearchEmrScoreByContition(string typeID, string scorename) {
            object[] results = this.Invoke("SearchEmrScoreByContition", new object[] {
                        typeID,
                        scorename});
            return ((EmrScore[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchEmrScoreByContitionAsync(string typeID, string scorename) {
            this.SearchEmrScoreByContitionAsync(typeID, scorename, null);
        }
        
        /// <remarks/>
        public void SearchEmrScoreByContitionAsync(string typeID, string scorename, object userState) {
            if ((this.SearchEmrScoreByContitionOperationCompleted == null)) {
                this.SearchEmrScoreByContitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchEmrScoreByContitionOperationCompleted);
            }
            this.InvokeAsync("SearchEmrScoreByContition", new object[] {
                        typeID,
                        scorename}, this.SearchEmrScoreByContitionOperationCompleted, userState);
        }
        
        private void OnSearchEmrScoreByContitionOperationCompleted(object arg) {
            if ((this.SearchEmrScoreByContitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchEmrScoreByContitionCompleted(this, new SearchEmrScoreByContitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrScore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrScore(EmrScore entity) {
            object[] results = this.Invoke("SaveEmrScore", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrScoreAsync(EmrScore entity) {
            this.SaveEmrScoreAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrScoreAsync(EmrScore entity, object userState) {
            if ((this.SaveEmrScoreOperationCompleted == null)) {
                this.SaveEmrScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrScoreOperationCompleted);
            }
            this.InvokeAsync("SaveEmrScore", new object[] {
                        entity}, this.SaveEmrScoreOperationCompleted, userState);
        }
        
        private void OnSaveEmrScoreOperationCompleted(object arg) {
            if ((this.SaveEmrScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrScoreCompleted(this, new SaveEmrScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrScore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteEmrScore(EmrScore entity) {
            object[] results = this.Invoke("DeleteEmrScore", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrScoreAsync(EmrScore entity) {
            this.DeleteEmrScoreAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrScoreAsync(EmrScore entity, object userState) {
            if ((this.DeleteEmrScoreOperationCompleted == null)) {
                this.DeleteEmrScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrScoreOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrScore", new object[] {
                        entity}, this.DeleteEmrScoreOperationCompleted, userState);
        }
        
        private void OnDeleteEmrScoreOperationCompleted(object arg) {
            if ((this.DeleteEmrScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrScoreCompleted(this, new DeleteEmrScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrScoreList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrScoreList(EmrScore[] emrscoreList) {
            object[] results = this.Invoke("SaveEmrScoreList", new object[] {
                        emrscoreList});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrScoreListAsync(EmrScore[] emrscoreList) {
            this.SaveEmrScoreListAsync(emrscoreList, null);
        }
        
        /// <remarks/>
        public void SaveEmrScoreListAsync(EmrScore[] emrscoreList, object userState) {
            if ((this.SaveEmrScoreListOperationCompleted == null)) {
                this.SaveEmrScoreListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrScoreListOperationCompleted);
            }
            this.InvokeAsync("SaveEmrScoreList", new object[] {
                        emrscoreList}, this.SaveEmrScoreListOperationCompleted, userState);
        }
        
        private void OnSaveEmrScoreListOperationCompleted(object arg) {
            if ((this.SaveEmrScoreListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrScoreListCompleted(this, new SaveEmrScoreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrScoreRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrScoreRecord(EmrScoreRecord entity) {
            this.Invoke("DeleteEmrScoreRecord", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteEmrScoreRecordAsync(EmrScoreRecord entity) {
            this.DeleteEmrScoreRecordAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrScoreRecordAsync(EmrScoreRecord entity, object userState) {
            if ((this.DeleteEmrScoreRecordOperationCompleted == null)) {
                this.DeleteEmrScoreRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrScoreRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrScoreRecord", new object[] {
                        entity}, this.DeleteEmrScoreRecordOperationCompleted, userState);
        }
        
        private void OnDeleteEmrScoreRecordOperationCompleted(object arg) {
            if ((this.DeleteEmrScoreRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrScoreRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrScoreRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrScoreRecord GetEmrScoreRecord(string userCode, string emr_id, int sectionNo) {
            object[] results = this.Invoke("GetEmrScoreRecord", new object[] {
                        userCode,
                        emr_id,
                        sectionNo});
            return ((EmrScoreRecord)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrScoreRecordAsync(string userCode, string emr_id, int sectionNo) {
            this.GetEmrScoreRecordAsync(userCode, emr_id, sectionNo, null);
        }
        
        /// <remarks/>
        public void GetEmrScoreRecordAsync(string userCode, string emr_id, int sectionNo, object userState) {
            if ((this.GetEmrScoreRecordOperationCompleted == null)) {
                this.GetEmrScoreRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrScoreRecordOperationCompleted);
            }
            this.InvokeAsync("GetEmrScoreRecord", new object[] {
                        userCode,
                        emr_id,
                        sectionNo}, this.GetEmrScoreRecordOperationCompleted, userState);
        }
        
        private void OnGetEmrScoreRecordOperationCompleted(object arg) {
            if ((this.GetEmrScoreRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrScoreRecordCompleted(this, new GetEmrScoreRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrScoreRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrScoreRecord(EmrScoreRecord entity) {
            object[] results = this.Invoke("SaveEmrScoreRecord", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrScoreRecordAsync(EmrScoreRecord entity) {
            this.SaveEmrScoreRecordAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrScoreRecordAsync(EmrScoreRecord entity, object userState) {
            if ((this.SaveEmrScoreRecordOperationCompleted == null)) {
                this.SaveEmrScoreRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrScoreRecordOperationCompleted);
            }
            this.InvokeAsync("SaveEmrScoreRecord", new object[] {
                        entity}, this.SaveEmrScoreRecordOperationCompleted, userState);
        }
        
        private void OnSaveEmrScoreRecordOperationCompleted(object arg) {
            if ((this.SaveEmrScoreRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrScoreRecordCompleted(this, new SaveEmrScoreRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchScoreDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrScoreDoc[] SearchScoreDoc(string Emr_id, string UserCode, string ScoreTypeID, string ScoreItemName) {
            object[] results = this.Invoke("SearchScoreDoc", new object[] {
                        Emr_id,
                        UserCode,
                        ScoreTypeID,
                        ScoreItemName});
            return ((EmrScoreDoc[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchScoreDocAsync(string Emr_id, string UserCode, string ScoreTypeID, string ScoreItemName) {
            this.SearchScoreDocAsync(Emr_id, UserCode, ScoreTypeID, ScoreItemName, null);
        }
        
        /// <remarks/>
        public void SearchScoreDocAsync(string Emr_id, string UserCode, string ScoreTypeID, string ScoreItemName, object userState) {
            if ((this.SearchScoreDocOperationCompleted == null)) {
                this.SearchScoreDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchScoreDocOperationCompleted);
            }
            this.InvokeAsync("SearchScoreDoc", new object[] {
                        Emr_id,
                        UserCode,
                        ScoreTypeID,
                        ScoreItemName}, this.SearchScoreDocOperationCompleted, userState);
        }
        
        private void OnSearchScoreDocOperationCompleted(object arg) {
            if ((this.SearchScoreDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchScoreDocCompleted(this, new SearchScoreDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveScoreDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveScoreDoc(EmrScoreDoc entity) {
            object[] results = this.Invoke("SaveScoreDoc", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveScoreDocAsync(EmrScoreDoc entity) {
            this.SaveScoreDocAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveScoreDocAsync(EmrScoreDoc entity, object userState) {
            if ((this.SaveScoreDocOperationCompleted == null)) {
                this.SaveScoreDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveScoreDocOperationCompleted);
            }
            this.InvokeAsync("SaveScoreDoc", new object[] {
                        entity}, this.SaveScoreDocOperationCompleted, userState);
        }
        
        private void OnSaveScoreDocOperationCompleted(object arg) {
            if ((this.SaveScoreDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveScoreDocCompleted(this, new SaveScoreDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteScoreDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteScoreDoc(EmrScoreDoc entity) {
            object[] results = this.Invoke("DeleteScoreDoc", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScoreDocAsync(EmrScoreDoc entity) {
            this.DeleteScoreDocAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteScoreDocAsync(EmrScoreDoc entity, object userState) {
            if ((this.DeleteScoreDocOperationCompleted == null)) {
                this.DeleteScoreDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScoreDocOperationCompleted);
            }
            this.InvokeAsync("DeleteScoreDoc", new object[] {
                        entity}, this.DeleteScoreDocOperationCompleted, userState);
        }
        
        private void OnDeleteScoreDocOperationCompleted(object arg) {
            if ((this.DeleteScoreDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScoreDocCompleted(this, new DeleteScoreDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrScoreRecordByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrScoreRecordByCureNo(string CureNo) {
            this.Invoke("DeleteEmrScoreRecordByCureNo", new object[] {
                        CureNo});
        }
        
        /// <remarks/>
        public void DeleteEmrScoreRecordByCureNoAsync(string CureNo) {
            this.DeleteEmrScoreRecordByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void DeleteEmrScoreRecordByCureNoAsync(string CureNo, object userState) {
            if ((this.DeleteEmrScoreRecordByCureNoOperationCompleted == null)) {
                this.DeleteEmrScoreRecordByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrScoreRecordByCureNoOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrScoreRecordByCureNo", new object[] {
                        CureNo}, this.DeleteEmrScoreRecordByCureNoOperationCompleted, userState);
        }
        
        private void OnDeleteEmrScoreRecordByCureNoOperationCompleted(object arg) {
            if ((this.DeleteEmrScoreRecordByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrScoreRecordByCureNoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrScoreRecordByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrScoreRecord GetEmrScoreRecordByCureNo(string CureNo) {
            object[] results = this.Invoke("GetEmrScoreRecordByCureNo", new object[] {
                        CureNo});
            return ((EmrScoreRecord)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrScoreRecordByCureNoAsync(string CureNo) {
            this.GetEmrScoreRecordByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void GetEmrScoreRecordByCureNoAsync(string CureNo, object userState) {
            if ((this.GetEmrScoreRecordByCureNoOperationCompleted == null)) {
                this.GetEmrScoreRecordByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrScoreRecordByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetEmrScoreRecordByCureNo", new object[] {
                        CureNo}, this.GetEmrScoreRecordByCureNoOperationCompleted, userState);
        }
        
        private void OnGetEmrScoreRecordByCureNoOperationCompleted(object arg) {
            if ((this.GetEmrScoreRecordByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrScoreRecordByCureNoCompleted(this, new GetEmrScoreRecordByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetControlTimeConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQualityControlTime[] GetControlTimeConfig() {
            object[] results = this.Invoke("GetControlTimeConfig", new object[0]);
            return ((EmrQualityControlTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetControlTimeConfigAsync() {
            this.GetControlTimeConfigAsync(null);
        }
        
        /// <remarks/>
        public void GetControlTimeConfigAsync(object userState) {
            if ((this.GetControlTimeConfigOperationCompleted == null)) {
                this.GetControlTimeConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlTimeConfigOperationCompleted);
            }
            this.InvokeAsync("GetControlTimeConfig", new object[0], this.GetControlTimeConfigOperationCompleted, userState);
        }
        
        private void OnGetControlTimeConfigOperationCompleted(object arg) {
            if ((this.GetControlTimeConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetControlTimeConfigCompleted(this, new GetControlTimeConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlDelaylistByCureSection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQualityControlDelaylist[] GetQualityControlDelaylistByCureSection(string cureNo, string sectioinID) {
            object[] results = this.Invoke("GetQualityControlDelaylistByCureSection", new object[] {
                        cureNo,
                        sectioinID});
            return ((EmrQualityControlDelaylist[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlDelaylistByCureSectionAsync(string cureNo, string sectioinID) {
            this.GetQualityControlDelaylistByCureSectionAsync(cureNo, sectioinID, null);
        }
        
        /// <remarks/>
        public void GetQualityControlDelaylistByCureSectionAsync(string cureNo, string sectioinID, object userState) {
            if ((this.GetQualityControlDelaylistByCureSectionOperationCompleted == null)) {
                this.GetQualityControlDelaylistByCureSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlDelaylistByCureSectionOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlDelaylistByCureSection", new object[] {
                        cureNo,
                        sectioinID}, this.GetQualityControlDelaylistByCureSectionOperationCompleted, userState);
        }
        
        private void OnGetQualityControlDelaylistByCureSectionOperationCompleted(object arg) {
            if ((this.GetQualityControlDelaylistByCureSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlDelaylistByCureSectionCompleted(this, new GetQualityControlDelaylistByCureSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualityControlDelaylist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQualityControlDelaylist[] GetQualityControlDelaylist(string cureNo, string sectioinID, int QCType) {
            object[] results = this.Invoke("GetQualityControlDelaylist", new object[] {
                        cureNo,
                        sectioinID,
                        QCType});
            return ((EmrQualityControlDelaylist[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityControlDelaylistAsync(string cureNo, string sectioinID, int QCType) {
            this.GetQualityControlDelaylistAsync(cureNo, sectioinID, QCType, null);
        }
        
        /// <remarks/>
        public void GetQualityControlDelaylistAsync(string cureNo, string sectioinID, int QCType, object userState) {
            if ((this.GetQualityControlDelaylistOperationCompleted == null)) {
                this.GetQualityControlDelaylistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityControlDelaylistOperationCompleted);
            }
            this.InvokeAsync("GetQualityControlDelaylist", new object[] {
                        cureNo,
                        sectioinID,
                        QCType}, this.GetQualityControlDelaylistOperationCompleted, userState);
        }
        
        private void OnGetQualityControlDelaylistOperationCompleted(object arg) {
            if ((this.GetQualityControlDelaylistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityControlDelaylistCompleted(this, new GetQualityControlDelaylistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDelayItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddDelayItem(EmrQualityControlDelaylist entity) {
            this.Invoke("AddDelayItem", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void AddDelayItemAsync(EmrQualityControlDelaylist entity) {
            this.AddDelayItemAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddDelayItemAsync(EmrQualityControlDelaylist entity, object userState) {
            if ((this.AddDelayItemOperationCompleted == null)) {
                this.AddDelayItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDelayItemOperationCompleted);
            }
            this.InvokeAsync("AddDelayItem", new object[] {
                        entity}, this.AddDelayItemOperationCompleted, userState);
        }
        
        private void OnAddDelayItemOperationCompleted(object arg) {
            if ((this.AddDelayItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDelayItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDelayItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDelayItem(EmrQualityControlDelaylist entity) {
            this.Invoke("UpdateDelayItem", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void UpdateDelayItemAsync(EmrQualityControlDelaylist entity) {
            this.UpdateDelayItemAsync(entity, null);
        }
        
        /// <remarks/>
        public void UpdateDelayItemAsync(EmrQualityControlDelaylist entity, object userState) {
            if ((this.UpdateDelayItemOperationCompleted == null)) {
                this.UpdateDelayItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDelayItemOperationCompleted);
            }
            this.InvokeAsync("UpdateDelayItem", new object[] {
                        entity}, this.UpdateDelayItemOperationCompleted, userState);
        }
        
        private void OnUpdateDelayItemOperationCompleted(object arg) {
            if ((this.UpdateDelayItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDelayItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddControlTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddControlTime(EmrQualityControlTime qualityControlTime) {
            this.Invoke("AddControlTime", new object[] {
                        qualityControlTime});
        }
        
        /// <remarks/>
        public void AddControlTimeAsync(EmrQualityControlTime qualityControlTime) {
            this.AddControlTimeAsync(qualityControlTime, null);
        }
        
        /// <remarks/>
        public void AddControlTimeAsync(EmrQualityControlTime qualityControlTime, object userState) {
            if ((this.AddControlTimeOperationCompleted == null)) {
                this.AddControlTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddControlTimeOperationCompleted);
            }
            this.InvokeAsync("AddControlTime", new object[] {
                        qualityControlTime}, this.AddControlTimeOperationCompleted, userState);
        }
        
        private void OnAddControlTimeOperationCompleted(object arg) {
            if ((this.AddControlTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddControlTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperationDateFromHIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperationDateFromHIS(string CureNo, int status) {
            object[] results = this.Invoke("GetOperationDateFromHIS", new object[] {
                        CureNo,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationDateFromHISAsync(string CureNo, int status) {
            this.GetOperationDateFromHISAsync(CureNo, status, null);
        }
        
        /// <remarks/>
        public void GetOperationDateFromHISAsync(string CureNo, int status, object userState) {
            if ((this.GetOperationDateFromHISOperationCompleted == null)) {
                this.GetOperationDateFromHISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationDateFromHISOperationCompleted);
            }
            this.InvokeAsync("GetOperationDateFromHIS", new object[] {
                        CureNo,
                        status}, this.GetOperationDateFromHISOperationCompleted, userState);
        }
        
        private void OnGetOperationDateFromHISOperationCompleted(object arg) {
            if ((this.GetOperationDateFromHISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationDateFromHISCompleted(this, new GetOperationDateFromHISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddControlComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddControlComplete(EmrQualityControlComplete ControlComplete) {
            this.Invoke("AddControlComplete", new object[] {
                        ControlComplete});
        }
        
        /// <remarks/>
        public void AddControlCompleteAsync(EmrQualityControlComplete ControlComplete) {
            this.AddControlCompleteAsync(ControlComplete, null);
        }
        
        /// <remarks/>
        public void AddControlCompleteAsync(EmrQualityControlComplete ControlComplete, object userState) {
            if ((this.AddControlCompleteOperationCompleted == null)) {
                this.AddControlCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddControlCompleteOperationCompleted);
            }
            this.InvokeAsync("AddControlComplete", new object[] {
                        ControlComplete}, this.AddControlCompleteOperationCompleted, userState);
        }
        
        private void OnAddControlCompleteOperationCompleted(object arg) {
            if ((this.AddControlCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddControlCompleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchControlComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQualityControlComplete[] SearchControlComplete(string ControlComplete) {
            object[] results = this.Invoke("SearchControlComplete", new object[] {
                        ControlComplete});
            return ((EmrQualityControlComplete[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchControlCompleteAsync(string ControlComplete) {
            this.SearchControlCompleteAsync(ControlComplete, null);
        }
        
        /// <remarks/>
        public void SearchControlCompleteAsync(string ControlComplete, object userState) {
            if ((this.SearchControlCompleteOperationCompleted == null)) {
                this.SearchControlCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchControlCompleteOperationCompleted);
            }
            this.InvokeAsync("SearchControlComplete", new object[] {
                        ControlComplete}, this.SearchControlCompleteOperationCompleted, userState);
        }
        
        private void OnSearchControlCompleteOperationCompleted(object arg) {
            if ((this.SearchControlCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchControlCompleteCompleted(this, new SearchControlCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompleteMaxId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCompleteMaxId() {
            object[] results = this.Invoke("GetCompleteMaxId", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompleteMaxIdAsync() {
            this.GetCompleteMaxIdAsync(null);
        }
        
        /// <remarks/>
        public void GetCompleteMaxIdAsync(object userState) {
            if ((this.GetCompleteMaxIdOperationCompleted == null)) {
                this.GetCompleteMaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompleteMaxIdOperationCompleted);
            }
            this.InvokeAsync("GetCompleteMaxId", new object[0], this.GetCompleteMaxIdOperationCompleted, userState);
        }
        
        private void OnGetCompleteMaxIdOperationCompleted(object arg) {
            if ((this.GetCompleteMaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleteMaxIdCompleted(this, new GetCompleteMaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateComplete(EmrQualityControlComplete ControlComplete) {
            this.Invoke("UpdateComplete", new object[] {
                        ControlComplete});
        }
        
        /// <remarks/>
        public void UpdateCompleteAsync(EmrQualityControlComplete ControlComplete) {
            this.UpdateCompleteAsync(ControlComplete, null);
        }
        
        /// <remarks/>
        public void UpdateCompleteAsync(EmrQualityControlComplete ControlComplete, object userState) {
            if ((this.UpdateCompleteOperationCompleted == null)) {
                this.UpdateCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCompleteOperationCompleted);
            }
            this.InvokeAsync("UpdateComplete", new object[] {
                        ControlComplete}, this.UpdateCompleteOperationCompleted, userState);
        }
        
        private void OnUpdateCompleteOperationCompleted(object arg) {
            if ((this.UpdateCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteControlComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteControlComplete(EmrQualityControlComplete ControlComplete) {
            this.Invoke("DeleteControlComplete", new object[] {
                        ControlComplete});
        }
        
        /// <remarks/>
        public void DeleteControlCompleteAsync(EmrQualityControlComplete ControlComplete) {
            this.DeleteControlCompleteAsync(ControlComplete, null);
        }
        
        /// <remarks/>
        public void DeleteControlCompleteAsync(EmrQualityControlComplete ControlComplete, object userState) {
            if ((this.DeleteControlCompleteOperationCompleted == null)) {
                this.DeleteControlCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteControlCompleteOperationCompleted);
            }
            this.InvokeAsync("DeleteControlComplete", new object[] {
                        ControlComplete}, this.DeleteControlCompleteOperationCompleted, userState);
        }
        
        private void OnDeleteControlCompleteOperationCompleted(object arg) {
            if ((this.DeleteControlCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteControlCompleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContinue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddContinue(EmrQualityControlContinue ControlContinue) {
            this.Invoke("AddContinue", new object[] {
                        ControlContinue});
        }
        
        /// <remarks/>
        public void AddContinueAsync(EmrQualityControlContinue ControlContinue) {
            this.AddContinueAsync(ControlContinue, null);
        }
        
        /// <remarks/>
        public void AddContinueAsync(EmrQualityControlContinue ControlContinue, object userState) {
            if ((this.AddContinueOperationCompleted == null)) {
                this.AddContinueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContinueOperationCompleted);
            }
            this.InvokeAsync("AddContinue", new object[] {
                        ControlContinue}, this.AddContinueOperationCompleted, userState);
        }
        
        private void OnAddContinueOperationCompleted(object arg) {
            if ((this.AddContinueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContinueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchControlContinue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrQualityControlContinue[] SearchControlContinue(string ControlContinue) {
            object[] results = this.Invoke("SearchControlContinue", new object[] {
                        ControlContinue});
            return ((EmrQualityControlContinue[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchControlContinueAsync(string ControlContinue) {
            this.SearchControlContinueAsync(ControlContinue, null);
        }
        
        /// <remarks/>
        public void SearchControlContinueAsync(string ControlContinue, object userState) {
            if ((this.SearchControlContinueOperationCompleted == null)) {
                this.SearchControlContinueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchControlContinueOperationCompleted);
            }
            this.InvokeAsync("SearchControlContinue", new object[] {
                        ControlContinue}, this.SearchControlContinueOperationCompleted, userState);
        }
        
        private void OnSearchControlContinueOperationCompleted(object arg) {
            if ((this.SearchControlContinueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchControlContinueCompleted(this, new SearchControlContinueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContinueMaxId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetContinueMaxId() {
            object[] results = this.Invoke("GetContinueMaxId", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetContinueMaxIdAsync() {
            this.GetContinueMaxIdAsync(null);
        }
        
        /// <remarks/>
        public void GetContinueMaxIdAsync(object userState) {
            if ((this.GetContinueMaxIdOperationCompleted == null)) {
                this.GetContinueMaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContinueMaxIdOperationCompleted);
            }
            this.InvokeAsync("GetContinueMaxId", new object[0], this.GetContinueMaxIdOperationCompleted, userState);
        }
        
        private void OnGetContinueMaxIdOperationCompleted(object arg) {
            if ((this.GetContinueMaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContinueMaxIdCompleted(this, new GetContinueMaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContinue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateContinue(EmrQualityControlContinue ControlContinue) {
            this.Invoke("UpdateContinue", new object[] {
                        ControlContinue});
        }
        
        /// <remarks/>
        public void UpdateContinueAsync(EmrQualityControlContinue ControlContinue) {
            this.UpdateContinueAsync(ControlContinue, null);
        }
        
        /// <remarks/>
        public void UpdateContinueAsync(EmrQualityControlContinue ControlContinue, object userState) {
            if ((this.UpdateContinueOperationCompleted == null)) {
                this.UpdateContinueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContinueOperationCompleted);
            }
            this.InvokeAsync("UpdateContinue", new object[] {
                        ControlContinue}, this.UpdateContinueOperationCompleted, userState);
        }
        
        private void OnUpdateContinueOperationCompleted(object arg) {
            if ((this.UpdateContinueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContinueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteControlContinue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteControlContinue(EmrQualityControlContinue ControlContinue) {
            this.Invoke("DeleteControlContinue", new object[] {
                        ControlContinue});
        }
        
        /// <remarks/>
        public void DeleteControlContinueAsync(EmrQualityControlContinue ControlContinue) {
            this.DeleteControlContinueAsync(ControlContinue, null);
        }
        
        /// <remarks/>
        public void DeleteControlContinueAsync(EmrQualityControlContinue ControlContinue, object userState) {
            if ((this.DeleteControlContinueOperationCompleted == null)) {
                this.DeleteControlContinueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteControlContinueOperationCompleted);
            }
            this.InvokeAsync("DeleteControlContinue", new object[] {
                        ControlContinue}, this.DeleteControlContinueOperationCompleted, userState);
        }
        
        private void OnDeleteControlContinueOperationCompleted(object arg) {
            if ((this.DeleteControlContinueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteControlContinueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMedicalImageLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveMedicalImageLib(string name, string fileType, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fs) {
            object[] results = this.Invoke("SaveMedicalImageLib", new object[] {
                        name,
                        fileType,
                        fs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMedicalImageLibAsync(string name, string fileType, byte[] fs) {
            this.SaveMedicalImageLibAsync(name, fileType, fs, null);
        }
        
        /// <remarks/>
        public void SaveMedicalImageLibAsync(string name, string fileType, byte[] fs, object userState) {
            if ((this.SaveMedicalImageLibOperationCompleted == null)) {
                this.SaveMedicalImageLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMedicalImageLibOperationCompleted);
            }
            this.InvokeAsync("SaveMedicalImageLib", new object[] {
                        name,
                        fileType,
                        fs}, this.SaveMedicalImageLibOperationCompleted, userState);
        }
        
        private void OnSaveMedicalImageLibOperationCompleted(object arg) {
            if ((this.SaveMedicalImageLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMedicalImageLibCompleted(this, new SaveMedicalImageLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMedicalImageLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMedicalImageLib(string guid) {
            object[] results = this.Invoke("DeleteMedicalImageLib", new object[] {
                        guid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMedicalImageLibAsync(string guid) {
            this.DeleteMedicalImageLibAsync(guid, null);
        }
        
        /// <remarks/>
        public void DeleteMedicalImageLibAsync(string guid, object userState) {
            if ((this.DeleteMedicalImageLibOperationCompleted == null)) {
                this.DeleteMedicalImageLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMedicalImageLibOperationCompleted);
            }
            this.InvokeAsync("DeleteMedicalImageLib", new object[] {
                        guid}, this.DeleteMedicalImageLibOperationCompleted, userState);
        }
        
        private void OnDeleteMedicalImageLibOperationCompleted(object arg) {
            if ((this.DeleteMedicalImageLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMedicalImageLibCompleted(this, new DeleteMedicalImageLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMedicalImageLib", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMedicalImageLib() {
            object[] results = this.Invoke("GetMedicalImageLib", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicalImageLibAsync() {
            this.GetMedicalImageLibAsync(null);
        }
        
        /// <remarks/>
        public void GetMedicalImageLibAsync(object userState) {
            if ((this.GetMedicalImageLibOperationCompleted == null)) {
                this.GetMedicalImageLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicalImageLibOperationCompleted);
            }
            this.InvokeAsync("GetMedicalImageLib", new object[0], this.GetMedicalImageLibOperationCompleted, userState);
        }
        
        private void OnGetMedicalImageLibOperationCompleted(object arg) {
            if ((this.GetMedicalImageLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicalImageLibCompleted(this, new GetMedicalImageLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrAllergicHistoryByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrAllergicHistory GetEmrAllergicHistoryByCureNo(string CureNo) {
            object[] results = this.Invoke("GetEmrAllergicHistoryByCureNo", new object[] {
                        CureNo});
            return ((EmrAllergicHistory)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrAllergicHistoryByCureNoAsync(string CureNo) {
            this.GetEmrAllergicHistoryByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void GetEmrAllergicHistoryByCureNoAsync(string CureNo, object userState) {
            if ((this.GetEmrAllergicHistoryByCureNoOperationCompleted == null)) {
                this.GetEmrAllergicHistoryByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrAllergicHistoryByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetEmrAllergicHistoryByCureNo", new object[] {
                        CureNo}, this.GetEmrAllergicHistoryByCureNoOperationCompleted, userState);
        }
        
        private void OnGetEmrAllergicHistoryByCureNoOperationCompleted(object arg) {
            if ((this.GetEmrAllergicHistoryByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrAllergicHistoryByCureNoCompleted(this, new GetEmrAllergicHistoryByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrAllergicHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrAllergicHistory(EmrAllergicHistory entity) {
            object[] results = this.Invoke("SaveEmrAllergicHistory", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrAllergicHistoryAsync(EmrAllergicHistory entity) {
            this.SaveEmrAllergicHistoryAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrAllergicHistoryAsync(EmrAllergicHistory entity, object userState) {
            if ((this.SaveEmrAllergicHistoryOperationCompleted == null)) {
                this.SaveEmrAllergicHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrAllergicHistoryOperationCompleted);
            }
            this.InvokeAsync("SaveEmrAllergicHistory", new object[] {
                        entity}, this.SaveEmrAllergicHistoryOperationCompleted, userState);
        }
        
        private void OnSaveEmrAllergicHistoryOperationCompleted(object arg) {
            if ((this.SaveEmrAllergicHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrAllergicHistoryCompleted(this, new SaveEmrAllergicHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrAllergicHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteEmrAllergicHistory(EmrAllergicHistory entity) {
            object[] results = this.Invoke("DeleteEmrAllergicHistory", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrAllergicHistoryAsync(EmrAllergicHistory entity) {
            this.DeleteEmrAllergicHistoryAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrAllergicHistoryAsync(EmrAllergicHistory entity, object userState) {
            if ((this.DeleteEmrAllergicHistoryOperationCompleted == null)) {
                this.DeleteEmrAllergicHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrAllergicHistoryOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrAllergicHistory", new object[] {
                        entity}, this.DeleteEmrAllergicHistoryOperationCompleted, userState);
        }
        
        private void OnDeleteEmrAllergicHistoryOperationCompleted(object arg) {
            if ((this.DeleteEmrAllergicHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrAllergicHistoryCompleted(this, new DeleteEmrAllergicHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWebConifgValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebConifgValue(string key) {
            object[] results = this.Invoke("GetWebConifgValue", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebConifgValueAsync(string key) {
            this.GetWebConifgValueAsync(key, null);
        }
        
        /// <remarks/>
        public void GetWebConifgValueAsync(string key, object userState) {
            if ((this.GetWebConifgValueOperationCompleted == null)) {
                this.GetWebConifgValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebConifgValueOperationCompleted);
            }
            this.InvokeAsync("GetWebConifgValue", new object[] {
                        key}, this.GetWebConifgValueOperationCompleted, userState);
        }
        
        private void OnGetWebConifgValueOperationCompleted(object arg) {
            if ((this.GetWebConifgValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebConifgValueCompleted(this, new GetWebConifgValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWebConnectionStringsValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebConnectionStringsValue(string key) {
            object[] results = this.Invoke("GetWebConnectionStringsValue", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebConnectionStringsValueAsync(string key) {
            this.GetWebConnectionStringsValueAsync(key, null);
        }
        
        /// <remarks/>
        public void GetWebConnectionStringsValueAsync(string key, object userState) {
            if ((this.GetWebConnectionStringsValueOperationCompleted == null)) {
                this.GetWebConnectionStringsValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebConnectionStringsValueOperationCompleted);
            }
            this.InvokeAsync("GetWebConnectionStringsValue", new object[] {
                        key}, this.GetWebConnectionStringsValueOperationCompleted, userState);
        }
        
        private void OnGetWebConnectionStringsValueOperationCompleted(object arg) {
            if ((this.GetWebConnectionStringsValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebConnectionStringsValueCompleted(this, new GetWebConnectionStringsValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfoDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientInfoDateTime(int Type, string CureNo) {
            object[] results = this.Invoke("GetPatientInfoDateTime", new object[] {
                        Type,
                        CureNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoDateTimeAsync(int Type, string CureNo) {
            this.GetPatientInfoDateTimeAsync(Type, CureNo, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoDateTimeAsync(int Type, string CureNo, object userState) {
            if ((this.GetPatientInfoDateTimeOperationCompleted == null)) {
                this.GetPatientInfoDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoDateTime", new object[] {
                        Type,
                        CureNo}, this.GetPatientInfoDateTimeOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoDateTimeOperationCompleted(object arg) {
            if ((this.GetPatientInfoDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoDateTimeCompleted(this, new GetPatientInfoDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEncryptDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveEncryptDoc(EmrDocEncryptdEntity doc) {
            this.Invoke("SaveEncryptDoc", new object[] {
                        doc});
        }
        
        /// <remarks/>
        public void SaveEncryptDocAsync(EmrDocEncryptdEntity doc) {
            this.SaveEncryptDocAsync(doc, null);
        }
        
        /// <remarks/>
        public void SaveEncryptDocAsync(EmrDocEncryptdEntity doc, object userState) {
            if ((this.SaveEncryptDocOperationCompleted == null)) {
                this.SaveEncryptDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEncryptDocOperationCompleted);
            }
            this.InvokeAsync("SaveEncryptDoc", new object[] {
                        doc}, this.SaveEncryptDocOperationCompleted, userState);
        }
        
        private void OnSaveEncryptDocOperationCompleted(object arg) {
            if ((this.SaveEncryptDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEncryptDocCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClinicePathByCurNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClinicePathByCurNo(string ICDNo, string CurNo) {
            object[] results = this.Invoke("GetClinicePathByCurNo", new object[] {
                        ICDNo,
                        CurNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicePathByCurNoAsync(string ICDNo, string CurNo) {
            this.GetClinicePathByCurNoAsync(ICDNo, CurNo, null);
        }
        
        /// <remarks/>
        public void GetClinicePathByCurNoAsync(string ICDNo, string CurNo, object userState) {
            if ((this.GetClinicePathByCurNoOperationCompleted == null)) {
                this.GetClinicePathByCurNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicePathByCurNoOperationCompleted);
            }
            this.InvokeAsync("GetClinicePathByCurNo", new object[] {
                        ICDNo,
                        CurNo}, this.GetClinicePathByCurNoOperationCompleted, userState);
        }
        
        private void OnGetClinicePathByCurNoOperationCompleted(object arg) {
            if ((this.GetClinicePathByCurNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicePathByCurNoCompleted(this, new GetClinicePathByCurNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserIsInCP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUserIsInCP(string CurNo) {
            object[] results = this.Invoke("CheckUserIsInCP", new object[] {
                        CurNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserIsInCPAsync(string CurNo) {
            this.CheckUserIsInCPAsync(CurNo, null);
        }
        
        /// <remarks/>
        public void CheckUserIsInCPAsync(string CurNo, object userState) {
            if ((this.CheckUserIsInCPOperationCompleted == null)) {
                this.CheckUserIsInCPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserIsInCPOperationCompleted);
            }
            this.InvokeAsync("CheckUserIsInCP", new object[] {
                        CurNo}, this.CheckUserIsInCPOperationCompleted, userState);
        }
        
        private void OnCheckUserIsInCPOperationCompleted(object arg) {
            if ((this.CheckUserIsInCPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserIsInCPCompleted(this, new CheckUserIsInCPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyPatientList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyPatientList(int userCode) {
            object[] results = this.Invoke("GetMyPatientList", new object[] {
                        userCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyPatientListAsync(int userCode) {
            this.GetMyPatientListAsync(userCode, null);
        }
        
        /// <remarks/>
        public void GetMyPatientListAsync(int userCode, object userState) {
            if ((this.GetMyPatientListOperationCompleted == null)) {
                this.GetMyPatientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyPatientListOperationCompleted);
            }
            this.InvokeAsync("GetMyPatientList", new object[] {
                        userCode}, this.GetMyPatientListOperationCompleted, userState);
        }
        
        private void OnGetMyPatientListOperationCompleted(object arg) {
            if ((this.GetMyPatientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyPatientListCompleted(this, new GetMyPatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyHZPatientList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyHZPatientList(int userCode) {
            object[] results = this.Invoke("GetMyHZPatientList", new object[] {
                        userCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyHZPatientListAsync(int userCode) {
            this.GetMyHZPatientListAsync(userCode, null);
        }
        
        /// <remarks/>
        public void GetMyHZPatientListAsync(int userCode, object userState) {
            if ((this.GetMyHZPatientListOperationCompleted == null)) {
                this.GetMyHZPatientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyHZPatientListOperationCompleted);
            }
            this.InvokeAsync("GetMyHZPatientList", new object[] {
                        userCode}, this.GetMyHZPatientListOperationCompleted, userState);
        }
        
        private void OnGetMyHZPatientListOperationCompleted(object arg) {
            if ((this.GetMyHZPatientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyHZPatientListCompleted(this, new GetMyHZPatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWardCaseStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetWardCaseStatus(string wardCode) {
            object[] results = this.Invoke("GetWardCaseStatus", new object[] {
                        wardCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWardCaseStatusAsync(string wardCode) {
            this.GetWardCaseStatusAsync(wardCode, null);
        }
        
        /// <remarks/>
        public void GetWardCaseStatusAsync(string wardCode, object userState) {
            if ((this.GetWardCaseStatusOperationCompleted == null)) {
                this.GetWardCaseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWardCaseStatusOperationCompleted);
            }
            this.InvokeAsync("GetWardCaseStatus", new object[] {
                        wardCode}, this.GetWardCaseStatusOperationCompleted, userState);
        }
        
        private void OnGetWardCaseStatusOperationCompleted(object arg) {
            if ((this.GetWardCaseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWardCaseStatusCompleted(this, new GetWardCaseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransferPatientViewWhichIsLatestCure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetTransferPatientViewWhichIsLatestCure(int OpCode, int[] exceptedWards) {
            object[] results = this.Invoke("GetTransferPatientViewWhichIsLatestCure", new object[] {
                        OpCode,
                        exceptedWards});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferPatientViewWhichIsLatestCureAsync(int OpCode, int[] exceptedWards) {
            this.GetTransferPatientViewWhichIsLatestCureAsync(OpCode, exceptedWards, null);
        }
        
        /// <remarks/>
        public void GetTransferPatientViewWhichIsLatestCureAsync(int OpCode, int[] exceptedWards, object userState) {
            if ((this.GetTransferPatientViewWhichIsLatestCureOperationCompleted == null)) {
                this.GetTransferPatientViewWhichIsLatestCureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferPatientViewWhichIsLatestCureOperationCompleted);
            }
            this.InvokeAsync("GetTransferPatientViewWhichIsLatestCure", new object[] {
                        OpCode,
                        exceptedWards}, this.GetTransferPatientViewWhichIsLatestCureOperationCompleted, userState);
        }
        
        private void OnGetTransferPatientViewWhichIsLatestCureOperationCompleted(object arg) {
            if ((this.GetTransferPatientViewWhichIsLatestCureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferPatientViewWhichIsLatestCureCompleted(this, new GetTransferPatientViewWhichIsLatestCureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadPhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReadPhoto(string cureNo) {
            object[] results = this.Invoke("ReadPhoto", new object[] {
                        cureNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadPhotoAsync(string cureNo) {
            this.ReadPhotoAsync(cureNo, null);
        }
        
        /// <remarks/>
        public void ReadPhotoAsync(string cureNo, object userState) {
            if ((this.ReadPhotoOperationCompleted == null)) {
                this.ReadPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadPhotoOperationCompleted);
            }
            this.InvokeAsync("ReadPhoto", new object[] {
                        cureNo}, this.ReadPhotoOperationCompleted, userState);
        }
        
        private void OnReadPhotoOperationCompleted(object arg) {
            if ((this.ReadPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadPhotoCompleted(this, new ReadPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdmitNoByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAdmitNoByCureNo(string CureNo) {
            object[] results = this.Invoke("GetAdmitNoByCureNo", new object[] {
                        CureNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdmitNoByCureNoAsync(string CureNo) {
            this.GetAdmitNoByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void GetAdmitNoByCureNoAsync(string CureNo, object userState) {
            if ((this.GetAdmitNoByCureNoOperationCompleted == null)) {
                this.GetAdmitNoByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdmitNoByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetAdmitNoByCureNo", new object[] {
                        CureNo}, this.GetAdmitNoByCureNoOperationCompleted, userState);
        }
        
        private void OnGetAdmitNoByCureNoOperationCompleted(object arg) {
            if ((this.GetAdmitNoByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdmitNoByCureNoCompleted(this, new GetAdmitNoByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPatientViewWhichIsLatestCure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAllPatientViewWhichIsLatestCure(string WardCode, System.DateTime now) {
            object[] results = this.Invoke("GetAllPatientViewWhichIsLatestCure", new object[] {
                        WardCode,
                        now});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPatientViewWhichIsLatestCureAsync(string WardCode, System.DateTime now) {
            this.GetAllPatientViewWhichIsLatestCureAsync(WardCode, now, null);
        }
        
        /// <remarks/>
        public void GetAllPatientViewWhichIsLatestCureAsync(string WardCode, System.DateTime now, object userState) {
            if ((this.GetAllPatientViewWhichIsLatestCureOperationCompleted == null)) {
                this.GetAllPatientViewWhichIsLatestCureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPatientViewWhichIsLatestCureOperationCompleted);
            }
            this.InvokeAsync("GetAllPatientViewWhichIsLatestCure", new object[] {
                        WardCode,
                        now}, this.GetAllPatientViewWhichIsLatestCureOperationCompleted, userState);
        }
        
        private void OnGetAllPatientViewWhichIsLatestCureOperationCompleted(object arg) {
            if ((this.GetAllPatientViewWhichIsLatestCureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPatientViewWhichIsLatestCureCompleted(this, new GetAllPatientViewWhichIsLatestCureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBedsWithPatientByWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBedsWithPatientByWard(string WardCode, System.DateTime now) {
            object[] results = this.Invoke("GetBedsWithPatientByWard", new object[] {
                        WardCode,
                        now});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBedsWithPatientByWardAsync(string WardCode, System.DateTime now) {
            this.GetBedsWithPatientByWardAsync(WardCode, now, null);
        }
        
        /// <remarks/>
        public void GetBedsWithPatientByWardAsync(string WardCode, System.DateTime now, object userState) {
            if ((this.GetBedsWithPatientByWardOperationCompleted == null)) {
                this.GetBedsWithPatientByWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBedsWithPatientByWardOperationCompleted);
            }
            this.InvokeAsync("GetBedsWithPatientByWard", new object[] {
                        WardCode,
                        now}, this.GetBedsWithPatientByWardOperationCompleted, userState);
        }
        
        private void OnGetBedsWithPatientByWardOperationCompleted(object arg) {
            if ((this.GetBedsWithPatientByWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBedsWithPatientByWardCompleted(this, new GetBedsWithPatientByWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddBedsByWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAddBedsByWard(string WardCode) {
            object[] results = this.Invoke("GetAddBedsByWard", new object[] {
                        WardCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddBedsByWardAsync(string WardCode) {
            this.GetAddBedsByWardAsync(WardCode, null);
        }
        
        /// <remarks/>
        public void GetAddBedsByWardAsync(string WardCode, object userState) {
            if ((this.GetAddBedsByWardOperationCompleted == null)) {
                this.GetAddBedsByWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddBedsByWardOperationCompleted);
            }
            this.InvokeAsync("GetAddBedsByWard", new object[] {
                        WardCode}, this.GetAddBedsByWardOperationCompleted, userState);
        }
        
        private void OnGetAddBedsByWardOperationCompleted(object arg) {
            if ((this.GetAddBedsByWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddBedsByWardCompleted(this, new GetAddBedsByWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAddBeds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAddBeds(int WardCode, int bedno) {
            object[] results = this.Invoke("DeleteAddBeds", new object[] {
                        WardCode,
                        bedno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAddBedsAsync(int WardCode, int bedno) {
            this.DeleteAddBedsAsync(WardCode, bedno, null);
        }
        
        /// <remarks/>
        public void DeleteAddBedsAsync(int WardCode, int bedno, object userState) {
            if ((this.DeleteAddBedsOperationCompleted == null)) {
                this.DeleteAddBedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAddBedsOperationCompleted);
            }
            this.InvokeAsync("DeleteAddBeds", new object[] {
                        WardCode,
                        bedno}, this.DeleteAddBedsOperationCompleted, userState);
        }
        
        private void OnDeleteAddBedsOperationCompleted(object arg) {
            if ((this.DeleteAddBedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAddBedsCompleted(this, new DeleteAddBedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAddBeds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertAddBeds(int WardCode, int bedno, int addbedno) {
            object[] results = this.Invoke("InsertAddBeds", new object[] {
                        WardCode,
                        bedno,
                        addbedno});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAddBedsAsync(int WardCode, int bedno, int addbedno) {
            this.InsertAddBedsAsync(WardCode, bedno, addbedno, null);
        }
        
        /// <remarks/>
        public void InsertAddBedsAsync(int WardCode, int bedno, int addbedno, object userState) {
            if ((this.InsertAddBedsOperationCompleted == null)) {
                this.InsertAddBedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAddBedsOperationCompleted);
            }
            this.InvokeAsync("InsertAddBeds", new object[] {
                        WardCode,
                        bedno,
                        addbedno}, this.InsertAddBedsOperationCompleted, userState);
        }
        
        private void OnInsertAddBedsOperationCompleted(object arg) {
            if ((this.InsertAddBedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAddBedsCompleted(this, new InsertAddBedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTodayDischargedPatientCountByWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTodayDischargedPatientCountByWard(string WardCode) {
            object[] results = this.Invoke("GetTodayDischargedPatientCountByWard", new object[] {
                        WardCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTodayDischargedPatientCountByWardAsync(string WardCode) {
            this.GetTodayDischargedPatientCountByWardAsync(WardCode, null);
        }
        
        /// <remarks/>
        public void GetTodayDischargedPatientCountByWardAsync(string WardCode, object userState) {
            if ((this.GetTodayDischargedPatientCountByWardOperationCompleted == null)) {
                this.GetTodayDischargedPatientCountByWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTodayDischargedPatientCountByWardOperationCompleted);
            }
            this.InvokeAsync("GetTodayDischargedPatientCountByWard", new object[] {
                        WardCode}, this.GetTodayDischargedPatientCountByWardOperationCompleted, userState);
        }
        
        private void OnGetTodayDischargedPatientCountByWardOperationCompleted(object arg) {
            if ((this.GetTodayDischargedPatientCountByWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTodayDischargedPatientCountByWardCompleted(this, new GetTodayDischargedPatientCountByWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfoByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientInfoByCureNo(string CrueNo) {
            object[] results = this.Invoke("GetPatientInfoByCureNo", new object[] {
                        CrueNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoByCureNoAsync(string CrueNo) {
            this.GetPatientInfoByCureNoAsync(CrueNo, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoByCureNoAsync(string CrueNo, object userState) {
            if ((this.GetPatientInfoByCureNoOperationCompleted == null)) {
                this.GetPatientInfoByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoByCureNo", new object[] {
                        CrueNo}, this.GetPatientInfoByCureNoOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoByCureNoOperationCompleted(object arg) {
            if ((this.GetPatientInfoByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoByCureNoCompleted(this, new GetPatientInfoByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfoByCureNoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientInfoByCureNoList(string[] cureNolist) {
            object[] results = this.Invoke("GetPatientInfoByCureNoList", new object[] {
                        cureNolist});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoByCureNoListAsync(string[] cureNolist) {
            this.GetPatientInfoByCureNoListAsync(cureNolist, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoByCureNoListAsync(string[] cureNolist, object userState) {
            if ((this.GetPatientInfoByCureNoListOperationCompleted == null)) {
                this.GetPatientInfoByCureNoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoByCureNoListOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoByCureNoList", new object[] {
                        cureNolist}, this.GetPatientInfoByCureNoListOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoByCureNoListOperationCompleted(object arg) {
            if ((this.GetPatientInfoByCureNoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoByCureNoListCompleted(this, new GetPatientInfoByCureNoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientBasicInfoByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientBasicInfoByCureNo(string CrueNo) {
            object[] results = this.Invoke("GetPatientBasicInfoByCureNo", new object[] {
                        CrueNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientBasicInfoByCureNoAsync(string CrueNo) {
            this.GetPatientBasicInfoByCureNoAsync(CrueNo, null);
        }
        
        /// <remarks/>
        public void GetPatientBasicInfoByCureNoAsync(string CrueNo, object userState) {
            if ((this.GetPatientBasicInfoByCureNoOperationCompleted == null)) {
                this.GetPatientBasicInfoByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientBasicInfoByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetPatientBasicInfoByCureNo", new object[] {
                        CrueNo}, this.GetPatientBasicInfoByCureNoOperationCompleted, userState);
        }
        
        private void OnGetPatientBasicInfoByCureNoOperationCompleted(object arg) {
            if ((this.GetPatientBasicInfoByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientBasicInfoByCureNoCompleted(this, new GetPatientBasicInfoByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPatientInfoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPatientInfoList() {
            object[] results = this.Invoke("GetAllPatientInfoList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPatientInfoListAsync() {
            this.GetAllPatientInfoListAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPatientInfoListAsync(object userState) {
            if ((this.GetAllPatientInfoListOperationCompleted == null)) {
                this.GetAllPatientInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPatientInfoListOperationCompleted);
            }
            this.InvokeAsync("GetAllPatientInfoList", new object[0], this.GetAllPatientInfoListOperationCompleted, userState);
        }
        
        private void OnGetAllPatientInfoListOperationCompleted(object arg) {
            if ((this.GetAllPatientInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPatientInfoListCompleted(this, new GetAllPatientInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListAllWard() {
            object[] results = this.Invoke("ListAllWard", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListAllWardAsync() {
            this.ListAllWardAsync(null);
        }
        
        /// <remarks/>
        public void ListAllWardAsync(object userState) {
            if ((this.ListAllWardOperationCompleted == null)) {
                this.ListAllWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllWardOperationCompleted);
            }
            this.InvokeAsync("ListAllWard", new object[0], this.ListAllWardOperationCompleted, userState);
        }
        
        private void OnListAllWardOperationCompleted(object arg) {
            if ((this.ListAllWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllWardCompleted(this, new ListAllWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCardNo(string cureNo) {
            object[] results = this.Invoke("GetCardNo", new object[] {
                        cureNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardNoAsync(string cureNo) {
            this.GetCardNoAsync(cureNo, null);
        }
        
        /// <remarks/>
        public void GetCardNoAsync(string cureNo, object userState) {
            if ((this.GetCardNoOperationCompleted == null)) {
                this.GetCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardNoOperationCompleted);
            }
            this.InvokeAsync("GetCardNo", new object[] {
                        cureNo}, this.GetCardNoOperationCompleted, userState);
        }
        
        private void OnGetCardNoOperationCompleted(object arg) {
            if ((this.GetCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardNoCompleted(this, new GetCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PatientIsDischargeByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PatientIsDischargeByCureNo(int CureNo) {
            object[] results = this.Invoke("PatientIsDischargeByCureNo", new object[] {
                        CureNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PatientIsDischargeByCureNoAsync(int CureNo) {
            this.PatientIsDischargeByCureNoAsync(CureNo, null);
        }
        
        /// <remarks/>
        public void PatientIsDischargeByCureNoAsync(int CureNo, object userState) {
            if ((this.PatientIsDischargeByCureNoOperationCompleted == null)) {
                this.PatientIsDischargeByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientIsDischargeByCureNoOperationCompleted);
            }
            this.InvokeAsync("PatientIsDischargeByCureNo", new object[] {
                        CureNo}, this.PatientIsDischargeByCureNoOperationCompleted, userState);
        }
        
        private void OnPatientIsDischargeByCureNoOperationCompleted(object arg) {
            if ((this.PatientIsDischargeByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientIsDischargeByCureNoCompleted(this, new PatientIsDischargeByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientExtendBaseDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientExtendBaseDataSet(string curenNo) {
            object[] results = this.Invoke("GetPatientExtendBaseDataSet", new object[] {
                        curenNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientExtendBaseDataSetAsync(string curenNo) {
            this.GetPatientExtendBaseDataSetAsync(curenNo, null);
        }
        
        /// <remarks/>
        public void GetPatientExtendBaseDataSetAsync(string curenNo, object userState) {
            if ((this.GetPatientExtendBaseDataSetOperationCompleted == null)) {
                this.GetPatientExtendBaseDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientExtendBaseDataSetOperationCompleted);
            }
            this.InvokeAsync("GetPatientExtendBaseDataSet", new object[] {
                        curenNo}, this.GetPatientExtendBaseDataSetOperationCompleted, userState);
        }
        
        private void OnGetPatientExtendBaseDataSetOperationCompleted(object arg) {
            if ((this.GetPatientExtendBaseDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientExtendBaseDataSetCompleted(this, new GetPatientExtendBaseDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCachedPatientsListByWard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCachedPatientsListByWard(string WardNo) {
            this.Invoke("DeleteCachedPatientsListByWard", new object[] {
                        WardNo});
        }
        
        /// <remarks/>
        public void DeleteCachedPatientsListByWardAsync(string WardNo) {
            this.DeleteCachedPatientsListByWardAsync(WardNo, null);
        }
        
        /// <remarks/>
        public void DeleteCachedPatientsListByWardAsync(string WardNo, object userState) {
            if ((this.DeleteCachedPatientsListByWardOperationCompleted == null)) {
                this.DeleteCachedPatientsListByWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCachedPatientsListByWardOperationCompleted);
            }
            this.InvokeAsync("DeleteCachedPatientsListByWard", new object[] {
                        WardNo}, this.DeleteCachedPatientsListByWardOperationCompleted, userState);
        }
        
        private void OnDeleteCachedPatientsListByWardOperationCompleted(object arg) {
            if ((this.DeleteCachedPatientsListByWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCachedPatientsListByWardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfosByCureNos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPatientInfosByCureNos(string[] cureNolist) {
            object[] results = this.Invoke("GetPatientInfosByCureNos", new object[] {
                        cureNolist});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfosByCureNosAsync(string[] cureNolist) {
            this.GetPatientInfosByCureNosAsync(cureNolist, null);
        }
        
        /// <remarks/>
        public void GetPatientInfosByCureNosAsync(string[] cureNolist, object userState) {
            if ((this.GetPatientInfosByCureNosOperationCompleted == null)) {
                this.GetPatientInfosByCureNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfosByCureNosOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfosByCureNos", new object[] {
                        cureNolist}, this.GetPatientInfosByCureNosOperationCompleted, userState);
        }
        
        private void OnGetPatientInfosByCureNosOperationCompleted(object arg) {
            if ((this.GetPatientInfosByCureNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfosByCureNosCompleted(this, new GetPatientInfosByCureNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCureNosByStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCureNosByStatus(string[] cureNolist, int hospitalStatus) {
            object[] results = this.Invoke("GetCureNosByStatus", new object[] {
                        cureNolist,
                        hospitalStatus});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCureNosByStatusAsync(string[] cureNolist, int hospitalStatus) {
            this.GetCureNosByStatusAsync(cureNolist, hospitalStatus, null);
        }
        
        /// <remarks/>
        public void GetCureNosByStatusAsync(string[] cureNolist, int hospitalStatus, object userState) {
            if ((this.GetCureNosByStatusOperationCompleted == null)) {
                this.GetCureNosByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCureNosByStatusOperationCompleted);
            }
            this.InvokeAsync("GetCureNosByStatus", new object[] {
                        cureNolist,
                        hospitalStatus}, this.GetCureNosByStatusOperationCompleted, userState);
        }
        
        private void OnGetCureNosByStatusOperationCompleted(object arg) {
            if ((this.GetCureNosByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCureNosByStatusCompleted(this, new GetCureNosByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientDiagnosis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPatientDiagnosis(string cureNo) {
            object[] results = this.Invoke("GetPatientDiagnosis", new object[] {
                        cureNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientDiagnosisAsync(string cureNo) {
            this.GetPatientDiagnosisAsync(cureNo, null);
        }
        
        /// <remarks/>
        public void GetPatientDiagnosisAsync(string cureNo, object userState) {
            if ((this.GetPatientDiagnosisOperationCompleted == null)) {
                this.GetPatientDiagnosisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientDiagnosisOperationCompleted);
            }
            this.InvokeAsync("GetPatientDiagnosis", new object[] {
                        cureNo}, this.GetPatientDiagnosisOperationCompleted, userState);
        }
        
        private void OnGetPatientDiagnosisOperationCompleted(object arg) {
            if ((this.GetPatientDiagnosisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientDiagnosisCompleted(this, new GetPatientDiagnosisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSections", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSection[] GetEmrDocSections(string emr_id) {
            object[] results = this.Invoke("GetEmrDocSections", new object[] {
                        emr_id});
            return ((EmrDocSection[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionsAsync(string emr_id) {
            this.GetEmrDocSectionsAsync(emr_id, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionsAsync(string emr_id, object userState) {
            if ((this.GetEmrDocSectionsOperationCompleted == null)) {
                this.GetEmrDocSectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionsOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSections", new object[] {
                        emr_id}, this.GetEmrDocSectionsOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionsOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionsCompleted(this, new GetEmrDocSectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConnectDataForEmrWithParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConnectDataForEmrWithParam(string cureNo, EmrDataReference entity) {
            object[] results = this.Invoke("ConnectDataForEmrWithParam", new object[] {
                        cureNo,
                        entity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectDataForEmrWithParamAsync(string cureNo, EmrDataReference entity) {
            this.ConnectDataForEmrWithParamAsync(cureNo, entity, null);
        }
        
        /// <remarks/>
        public void ConnectDataForEmrWithParamAsync(string cureNo, EmrDataReference entity, object userState) {
            if ((this.ConnectDataForEmrWithParamOperationCompleted == null)) {
                this.ConnectDataForEmrWithParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectDataForEmrWithParamOperationCompleted);
            }
            this.InvokeAsync("ConnectDataForEmrWithParam", new object[] {
                        cureNo,
                        entity}, this.ConnectDataForEmrWithParamOperationCompleted, userState);
        }
        
        private void OnConnectDataForEmrWithParamOperationCompleted(object arg) {
            if ((this.ConnectDataForEmrWithParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectDataForEmrWithParamCompleted(this, new ConnectDataForEmrWithParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrIdByCureNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmrIdByCureNo(string cureNo) {
            object[] results = this.Invoke("GetEmrIdByCureNo", new object[] {
                        cureNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrIdByCureNoAsync(string cureNo) {
            this.GetEmrIdByCureNoAsync(cureNo, null);
        }
        
        /// <remarks/>
        public void GetEmrIdByCureNoAsync(string cureNo, object userState) {
            if ((this.GetEmrIdByCureNoOperationCompleted == null)) {
                this.GetEmrIdByCureNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrIdByCureNoOperationCompleted);
            }
            this.InvokeAsync("GetEmrIdByCureNo", new object[] {
                        cureNo}, this.GetEmrIdByCureNoOperationCompleted, userState);
        }
        
        private void OnGetEmrIdByCureNoOperationCompleted(object arg) {
            if ((this.GetEmrIdByCureNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrIdByCureNoCompleted(this, new GetEmrIdByCureNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSection GetEmrDocSection(string emr_id, int sectionNo) {
            object[] results = this.Invoke("GetEmrDocSection", new object[] {
                        emr_id,
                        sectionNo});
            return ((EmrDocSection)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionAsync(string emr_id, int sectionNo) {
            this.GetEmrDocSectionAsync(emr_id, sectionNo, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionAsync(string emr_id, int sectionNo, object userState) {
            if ((this.GetEmrDocSectionOperationCompleted == null)) {
                this.GetEmrDocSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSection", new object[] {
                        emr_id,
                        sectionNo}, this.GetEmrDocSectionOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionCompleted(this, new GetEmrDocSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSectionTitleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSection[] GetEmrDocSectionTitleList(string emr_id) {
            object[] results = this.Invoke("GetEmrDocSectionTitleList", new object[] {
                        emr_id});
            return ((EmrDocSection[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionTitleListAsync(string emr_id) {
            this.GetEmrDocSectionTitleListAsync(emr_id, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionTitleListAsync(string emr_id, object userState) {
            if ((this.GetEmrDocSectionTitleListOperationCompleted == null)) {
                this.GetEmrDocSectionTitleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionTitleListOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSectionTitleList", new object[] {
                        emr_id}, this.GetEmrDocSectionTitleListOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionTitleListOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionTitleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionTitleListCompleted(this, new GetEmrDocSectionTitleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDoc(EmrDocSection entity) {
            object[] results = this.Invoke("SaveEmrDoc", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDocAsync(EmrDocSection entity) {
            this.SaveEmrDocAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrDocAsync(EmrDocSection entity, object userState) {
            if ((this.SaveEmrDocOperationCompleted == null)) {
                this.SaveEmrDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDocOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDoc", new object[] {
                        entity}, this.SaveEmrDocOperationCompleted, userState);
        }
        
        private void OnSaveEmrDocOperationCompleted(object arg) {
            if ((this.SaveEmrDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDocCompleted(this, new SaveEmrDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReviewEmrDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult ReviewEmrDoc(EmrDocSection entity) {
            object[] results = this.Invoke("ReviewEmrDoc", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void ReviewEmrDocAsync(EmrDocSection entity) {
            this.ReviewEmrDocAsync(entity, null);
        }
        
        /// <remarks/>
        public void ReviewEmrDocAsync(EmrDocSection entity, object userState) {
            if ((this.ReviewEmrDocOperationCompleted == null)) {
                this.ReviewEmrDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReviewEmrDocOperationCompleted);
            }
            this.InvokeAsync("ReviewEmrDoc", new object[] {
                        entity}, this.ReviewEmrDocOperationCompleted, userState);
        }
        
        private void OnReviewEmrDocOperationCompleted(object arg) {
            if ((this.ReviewEmrDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReviewEmrDocCompleted(this, new ReviewEmrDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrDocSection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrDocSection(EmrDocSection entity) {
            this.Invoke("DeleteEmrDocSection", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteEmrDocSectionAsync(EmrDocSection entity) {
            this.DeleteEmrDocSectionAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrDocSectionAsync(EmrDocSection entity, object userState) {
            if ((this.DeleteEmrDocSectionOperationCompleted == null)) {
                this.DeleteEmrDocSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrDocSectionOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrDocSection", new object[] {
                        entity}, this.DeleteEmrDocSectionOperationCompleted, userState);
        }
        
        private void OnDeleteEmrDocSectionOperationCompleted(object arg) {
            if ((this.DeleteEmrDocSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrDocSectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocStruct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocStruct GetEmrDocStruct(string cureNo, string propertyValue) {
            object[] results = this.Invoke("GetEmrDocStruct", new object[] {
                        cureNo,
                        propertyValue});
            return ((EmrDocStruct)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocStructAsync(string cureNo, string propertyValue) {
            this.GetEmrDocStructAsync(cureNo, propertyValue, null);
        }
        
        /// <remarks/>
        public void GetEmrDocStructAsync(string cureNo, string propertyValue, object userState) {
            if ((this.GetEmrDocStructOperationCompleted == null)) {
                this.GetEmrDocStructOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocStructOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocStruct", new object[] {
                        cureNo,
                        propertyValue}, this.GetEmrDocStructOperationCompleted, userState);
        }
        
        private void OnGetEmrDocStructOperationCompleted(object arg) {
            if ((this.GetEmrDocStructCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocStructCompleted(this, new GetEmrDocStructCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocsByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSection[] GetDocsByCondition(System.DateTime createFrm, System.DateTime createTo) {
            object[] results = this.Invoke("GetDocsByCondition", new object[] {
                        createFrm,
                        createTo});
            return ((EmrDocSection[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocsByConditionAsync(System.DateTime createFrm, System.DateTime createTo) {
            this.GetDocsByConditionAsync(createFrm, createTo, null);
        }
        
        /// <remarks/>
        public void GetDocsByConditionAsync(System.DateTime createFrm, System.DateTime createTo, object userState) {
            if ((this.GetDocsByConditionOperationCompleted == null)) {
                this.GetDocsByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocsByConditionOperationCompleted);
            }
            this.InvokeAsync("GetDocsByCondition", new object[] {
                        createFrm,
                        createTo}, this.GetDocsByConditionOperationCompleted, userState);
        }
        
        private void OnGetDocsByConditionOperationCompleted(object arg) {
            if ((this.GetDocsByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocsByConditionCompleted(this, new GetDocsByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocsByCreateDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSection[] GetDocsByCreateDate(System.DateTime createFrm, System.DateTime createTo) {
            object[] results = this.Invoke("GetDocsByCreateDate", new object[] {
                        createFrm,
                        createTo});
            return ((EmrDocSection[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocsByCreateDateAsync(System.DateTime createFrm, System.DateTime createTo) {
            this.GetDocsByCreateDateAsync(createFrm, createTo, null);
        }
        
        /// <remarks/>
        public void GetDocsByCreateDateAsync(System.DateTime createFrm, System.DateTime createTo, object userState) {
            if ((this.GetDocsByCreateDateOperationCompleted == null)) {
                this.GetDocsByCreateDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocsByCreateDateOperationCompleted);
            }
            this.InvokeAsync("GetDocsByCreateDate", new object[] {
                        createFrm,
                        createTo}, this.GetDocsByCreateDateOperationCompleted, userState);
        }
        
        private void OnGetDocsByCreateDateOperationCompleted(object arg) {
            if ((this.GetDocsByCreateDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocsByCreateDateCompleted(this, new GetDocsByCreateDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDocSectionByTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDocSection GetEmrDocSectionByTemplate(string cureNo, string templateId) {
            object[] results = this.Invoke("GetEmrDocSectionByTemplate", new object[] {
                        cureNo,
                        templateId});
            return ((EmrDocSection)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocSectionByTemplateAsync(string cureNo, string templateId) {
            this.GetEmrDocSectionByTemplateAsync(cureNo, templateId, null);
        }
        
        /// <remarks/>
        public void GetEmrDocSectionByTemplateAsync(string cureNo, string templateId, object userState) {
            if ((this.GetEmrDocSectionByTemplateOperationCompleted == null)) {
                this.GetEmrDocSectionByTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocSectionByTemplateOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocSectionByTemplate", new object[] {
                        cureNo,
                        templateId}, this.GetEmrDocSectionByTemplateOperationCompleted, userState);
        }
        
        private void OnGetEmrDocSectionByTemplateOperationCompleted(object arg) {
            if ((this.GetEmrDocSectionByTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocSectionByTemplateCompleted(this, new GetEmrDocSectionByTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDocExisted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDocExisted(string cureNo, string templateId) {
            object[] results = this.Invoke("CheckDocExisted", new object[] {
                        cureNo,
                        templateId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDocExistedAsync(string cureNo, string templateId) {
            this.CheckDocExistedAsync(cureNo, templateId, null);
        }
        
        /// <remarks/>
        public void CheckDocExistedAsync(string cureNo, string templateId, object userState) {
            if ((this.CheckDocExistedOperationCompleted == null)) {
                this.CheckDocExistedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDocExistedOperationCompleted);
            }
            this.InvokeAsync("CheckDocExisted", new object[] {
                        cureNo,
                        templateId}, this.CheckDocExistedOperationCompleted, userState);
        }
        
        private void OnCheckDocExistedOperationCompleted(object arg) {
            if ((this.CheckDocExistedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDocExistedCompleted(this, new CheckDocExistedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDocPrinted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDocPrinted(EmrDocPrinted entity) {
            object[] results = this.Invoke("SaveEmrDocPrinted", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDocPrintedAsync(EmrDocPrinted entity) {
            this.SaveEmrDocPrintedAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrDocPrintedAsync(EmrDocPrinted entity, object userState) {
            if ((this.SaveEmrDocPrintedOperationCompleted == null)) {
                this.SaveEmrDocPrintedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDocPrintedOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDocPrinted", new object[] {
                        entity}, this.SaveEmrDocPrintedOperationCompleted, userState);
        }
        
        private void OnSaveEmrDocPrintedOperationCompleted(object arg) {
            if ((this.SaveEmrDocPrintedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDocPrintedCompleted(this, new SaveEmrDocPrintedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrDocPrintedList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrDocPrintedList(EmrDocPrinted[] entityList) {
            object[] results = this.Invoke("SaveEmrDocPrintedList", new object[] {
                        entityList});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrDocPrintedListAsync(EmrDocPrinted[] entityList) {
            this.SaveEmrDocPrintedListAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SaveEmrDocPrintedListAsync(EmrDocPrinted[] entityList, object userState) {
            if ((this.SaveEmrDocPrintedListOperationCompleted == null)) {
                this.SaveEmrDocPrintedListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrDocPrintedListOperationCompleted);
            }
            this.InvokeAsync("SaveEmrDocPrintedList", new object[] {
                        entityList}, this.SaveEmrDocPrintedListOperationCompleted, userState);
        }
        
        private void OnSaveEmrDocPrintedListOperationCompleted(object arg) {
            if ((this.SaveEmrDocPrintedListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrDocPrintedListCompleted(this, new SaveEmrDocPrintedListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DocIsPrinted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DocIsPrinted(string emr_id, int sectionNo) {
            object[] results = this.Invoke("DocIsPrinted", new object[] {
                        emr_id,
                        sectionNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DocIsPrintedAsync(string emr_id, int sectionNo) {
            this.DocIsPrintedAsync(emr_id, sectionNo, null);
        }
        
        /// <remarks/>
        public void DocIsPrintedAsync(string emr_id, int sectionNo, object userState) {
            if ((this.DocIsPrintedOperationCompleted == null)) {
                this.DocIsPrintedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocIsPrintedOperationCompleted);
            }
            this.InvokeAsync("DocIsPrinted", new object[] {
                        emr_id,
                        sectionNo}, this.DocIsPrintedOperationCompleted, userState);
        }
        
        private void OnDocIsPrintedOperationCompleted(object arg) {
            if ((this.DocIsPrintedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocIsPrintedCompleted(this, new DocIsPrintedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCureNoByCheckerCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCureNoByCheckerCode(string CheckerCode) {
            object[] results = this.Invoke("GetCureNoByCheckerCode", new object[] {
                        CheckerCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCureNoByCheckerCodeAsync(string CheckerCode) {
            this.GetCureNoByCheckerCodeAsync(CheckerCode, null);
        }
        
        /// <remarks/>
        public void GetCureNoByCheckerCodeAsync(string CheckerCode, object userState) {
            if ((this.GetCureNoByCheckerCodeOperationCompleted == null)) {
                this.GetCureNoByCheckerCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCureNoByCheckerCodeOperationCompleted);
            }
            this.InvokeAsync("GetCureNoByCheckerCode", new object[] {
                        CheckerCode}, this.GetCureNoByCheckerCodeOperationCompleted, userState);
        }
        
        private void OnGetCureNoByCheckerCodeOperationCompleted(object arg) {
            if ((this.GetCureNoByCheckerCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCureNoByCheckerCodeCompleted(this, new GetCureNoByCheckerCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddEmrDocCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult AddEmrDocCheck(EmrDocCheck entity) {
            object[] results = this.Invoke("AddEmrDocCheck", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmrDocCheckAsync(EmrDocCheck entity) {
            this.AddEmrDocCheckAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddEmrDocCheckAsync(EmrDocCheck entity, object userState) {
            if ((this.AddEmrDocCheckOperationCompleted == null)) {
                this.AddEmrDocCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmrDocCheckOperationCompleted);
            }
            this.InvokeAsync("AddEmrDocCheck", new object[] {
                        entity}, this.AddEmrDocCheckOperationCompleted, userState);
        }
        
        private void OnAddEmrDocCheckOperationCompleted(object arg) {
            if ((this.AddEmrDocCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmrDocCheckCompleted(this, new AddEmrDocCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDepartment[] GetDepartmentList(string ID) {
            object[] results = this.Invoke("GetDepartmentList", new object[] {
                        ID});
            return ((EmrDepartment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync(string ID) {
            this.GetDepartmentListAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync(string ID, object userState) {
            if ((this.GetDepartmentListOperationCompleted == null)) {
                this.GetDepartmentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentListOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentList", new object[] {
                        ID}, this.GetDepartmentListOperationCompleted, userState);
        }
        
        private void OnGetDepartmentListOperationCompleted(object arg) {
            if ((this.GetDepartmentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentListCompleted(this, new GetDepartmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTypeStructureList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTypeStructure[] GetTypeStructureList(string TypeID) {
            object[] results = this.Invoke("GetTypeStructureList", new object[] {
                        TypeID});
            return ((EmrTypeStructure[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeStructureListAsync(string TypeID) {
            this.GetTypeStructureListAsync(TypeID, null);
        }
        
        /// <remarks/>
        public void GetTypeStructureListAsync(string TypeID, object userState) {
            if ((this.GetTypeStructureListOperationCompleted == null)) {
                this.GetTypeStructureListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeStructureListOperationCompleted);
            }
            this.InvokeAsync("GetTypeStructureList", new object[] {
                        TypeID}, this.GetTypeStructureListOperationCompleted, userState);
        }
        
        private void OnGetTypeStructureListOperationCompleted(object arg) {
            if ((this.GetTypeStructureListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeStructureListCompleted(this, new GetTypeStructureListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrTypeStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrTypeStructure(EmrTypeStructure entity) {
            object[] results = this.Invoke("SaveEmrTypeStructure", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrTypeStructureAsync(EmrTypeStructure entity) {
            this.SaveEmrTypeStructureAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrTypeStructureAsync(EmrTypeStructure entity, object userState) {
            if ((this.SaveEmrTypeStructureOperationCompleted == null)) {
                this.SaveEmrTypeStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrTypeStructureOperationCompleted);
            }
            this.InvokeAsync("SaveEmrTypeStructure", new object[] {
                        entity}, this.SaveEmrTypeStructureOperationCompleted, userState);
        }
        
        private void OnSaveEmrTypeStructureOperationCompleted(object arg) {
            if ((this.SaveEmrTypeStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrTypeStructureCompleted(this, new SaveEmrTypeStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrTypeStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrTypeStructure(EmrTypeStructure entity) {
            this.Invoke("DeleteEmrTypeStructure", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteEmrTypeStructureAsync(EmrTypeStructure entity) {
            this.DeleteEmrTypeStructureAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrTypeStructureAsync(EmrTypeStructure entity, object userState) {
            if ((this.DeleteEmrTypeStructureOperationCompleted == null)) {
                this.DeleteEmrTypeStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrTypeStructureOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrTypeStructure", new object[] {
                        entity}, this.DeleteEmrTypeStructureOperationCompleted, userState);
        }
        
        private void OnDeleteEmrTypeStructureOperationCompleted(object arg) {
            if ((this.DeleteEmrTypeStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrTypeStructureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SerializeEmrDataReference", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SerializeEmrDataReference(EmrDataReference entity) {
            object[] results = this.Invoke("SerializeEmrDataReference", new object[] {
                        entity});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SerializeEmrDataReferenceAsync(EmrDataReference entity) {
            this.SerializeEmrDataReferenceAsync(entity, null);
        }
        
        /// <remarks/>
        public void SerializeEmrDataReferenceAsync(EmrDataReference entity, object userState) {
            if ((this.SerializeEmrDataReferenceOperationCompleted == null)) {
                this.SerializeEmrDataReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSerializeEmrDataReferenceOperationCompleted);
            }
            this.InvokeAsync("SerializeEmrDataReference", new object[] {
                        entity}, this.SerializeEmrDataReferenceOperationCompleted, userState);
        }
        
        private void OnSerializeEmrDataReferenceOperationCompleted(object arg) {
            if ((this.SerializeEmrDataReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SerializeEmrDataReferenceCompleted(this, new SerializeEmrDataReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeserializeEmrDataReference", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDataReference DeserializeEmrDataReference(System.Xml.XmlNode doc) {
            object[] results = this.Invoke("DeserializeEmrDataReference", new object[] {
                        doc});
            return ((EmrDataReference)(results[0]));
        }
        
        /// <remarks/>
        public void DeserializeEmrDataReferenceAsync(System.Xml.XmlNode doc) {
            this.DeserializeEmrDataReferenceAsync(doc, null);
        }
        
        /// <remarks/>
        public void DeserializeEmrDataReferenceAsync(System.Xml.XmlNode doc, object userState) {
            if ((this.DeserializeEmrDataReferenceOperationCompleted == null)) {
                this.DeserializeEmrDataReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeserializeEmrDataReferenceOperationCompleted);
            }
            this.InvokeAsync("DeserializeEmrDataReference", new object[] {
                        doc}, this.DeserializeEmrDataReferenceOperationCompleted, userState);
        }
        
        private void OnDeserializeEmrDataReferenceOperationCompleted(object arg) {
            if ((this.DeserializeEmrDataReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeserializeEmrDataReferenceCompleted(this, new DeserializeEmrDataReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTemplateCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveTemplateCategory(EmrTemplate template) {
            object[] results = this.Invoke("SaveTemplateCategory", new object[] {
                        template});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateCategoryAsync(EmrTemplate template) {
            this.SaveTemplateCategoryAsync(template, null);
        }
        
        /// <remarks/>
        public void SaveTemplateCategoryAsync(EmrTemplate template, object userState) {
            if ((this.SaveTemplateCategoryOperationCompleted == null)) {
                this.SaveTemplateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateCategoryOperationCompleted);
            }
            this.InvokeAsync("SaveTemplateCategory", new object[] {
                        template}, this.SaveTemplateCategoryOperationCompleted, userState);
        }
        
        private void OnSaveTemplateCategoryOperationCompleted(object arg) {
            if ((this.SaveTemplateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateCategoryCompleted(this, new SaveTemplateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveTemplate(EmrTemplate template) {
            object[] results = this.Invoke("SaveTemplate", new object[] {
                        template});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateAsync(EmrTemplate template) {
            this.SaveTemplateAsync(template, null);
        }
        
        /// <remarks/>
        public void SaveTemplateAsync(EmrTemplate template, object userState) {
            if ((this.SaveTemplateOperationCompleted == null)) {
                this.SaveTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateOperationCompleted);
            }
            this.InvokeAsync("SaveTemplate", new object[] {
                        template}, this.SaveTemplateOperationCompleted, userState);
        }
        
        private void OnSaveTemplateOperationCompleted(object arg) {
            if ((this.SaveTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateCompleted(this, new SaveTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrTemplateList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplate[] GetEmrTemplateList(int category, int visitType, string ownerCode) {
            object[] results = this.Invoke("GetEmrTemplateList", new object[] {
                        category,
                        visitType,
                        ownerCode});
            return ((EmrTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrTemplateListAsync(int category, int visitType, string ownerCode) {
            this.GetEmrTemplateListAsync(category, visitType, ownerCode, null);
        }
        
        /// <remarks/>
        public void GetEmrTemplateListAsync(int category, int visitType, string ownerCode, object userState) {
            if ((this.GetEmrTemplateListOperationCompleted == null)) {
                this.GetEmrTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrTemplateListOperationCompleted);
            }
            this.InvokeAsync("GetEmrTemplateList", new object[] {
                        category,
                        visitType,
                        ownerCode}, this.GetEmrTemplateListOperationCompleted, userState);
        }
        
        private void OnGetEmrTemplateListOperationCompleted(object arg) {
            if ((this.GetEmrTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrTemplateListCompleted(this, new GetEmrTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrTemplate(EmrTemplate template) {
            this.Invoke("DeleteEmrTemplate", new object[] {
                        template});
        }
        
        /// <remarks/>
        public void DeleteEmrTemplateAsync(EmrTemplate template) {
            this.DeleteEmrTemplateAsync(template, null);
        }
        
        /// <remarks/>
        public void DeleteEmrTemplateAsync(EmrTemplate template, object userState) {
            if ((this.DeleteEmrTemplateOperationCompleted == null)) {
                this.DeleteEmrTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrTemplateOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrTemplate", new object[] {
                        template}, this.DeleteEmrTemplateOperationCompleted, userState);
        }
        
        private void OnDeleteEmrTemplateOperationCompleted(object arg) {
            if ((this.DeleteEmrTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTemplateListWithContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplate[] GetAllTemplateListWithContent() {
            object[] results = this.Invoke("GetAllTemplateListWithContent", new object[0]);
            return ((EmrTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTemplateListWithContentAsync() {
            this.GetAllTemplateListWithContentAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTemplateListWithContentAsync(object userState) {
            if ((this.GetAllTemplateListWithContentOperationCompleted == null)) {
                this.GetAllTemplateListWithContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTemplateListWithContentOperationCompleted);
            }
            this.InvokeAsync("GetAllTemplateListWithContent", new object[0], this.GetAllTemplateListWithContentOperationCompleted, userState);
        }
        
        private void OnGetAllTemplateListWithContentOperationCompleted(object arg) {
            if ((this.GetAllTemplateListWithContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTemplateListWithContentCompleted(this, new GetAllTemplateListWithContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTemplates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplate[] GetAllTemplates() {
            object[] results = this.Invoke("GetAllTemplates", new object[0]);
            return ((EmrTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTemplatesAsync() {
            this.GetAllTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTemplatesAsync(object userState) {
            if ((this.GetAllTemplatesOperationCompleted == null)) {
                this.GetAllTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetAllTemplates", new object[0], this.GetAllTemplatesOperationCompleted, userState);
        }
        
        private void OnGetAllTemplatesOperationCompleted(object arg) {
            if ((this.GetAllTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTemplatesCompleted(this, new GetAllTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTemplateSections", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplateSection[] GetAllTemplateSections() {
            object[] results = this.Invoke("GetAllTemplateSections", new object[0]);
            return ((EmrTemplateSection[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTemplateSectionsAsync() {
            this.GetAllTemplateSectionsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTemplateSectionsAsync(object userState) {
            if ((this.GetAllTemplateSectionsOperationCompleted == null)) {
                this.GetAllTemplateSectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTemplateSectionsOperationCompleted);
            }
            this.InvokeAsync("GetAllTemplateSections", new object[0], this.GetAllTemplateSectionsOperationCompleted, userState);
        }
        
        private void OnGetAllTemplateSectionsOperationCompleted(object arg) {
            if ((this.GetAllTemplateSectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTemplateSectionsCompleted(this, new GetAllTemplateSectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllElements", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrElement[] GetAllElements() {
            object[] results = this.Invoke("GetAllElements", new object[0]);
            return ((EmrElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllElementsAsync() {
            this.GetAllElementsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllElementsAsync(object userState) {
            if ((this.GetAllElementsOperationCompleted == null)) {
                this.GetAllElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllElementsOperationCompleted);
            }
            this.InvokeAsync("GetAllElements", new object[0], this.GetAllElementsOperationCompleted, userState);
        }
        
        private void OnGetAllElementsOperationCompleted(object arg) {
            if ((this.GetAllElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllElementsCompleted(this, new GetAllElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplate GetEmrTemplate(string id) {
            object[] results = this.Invoke("GetEmrTemplate", new object[] {
                        id});
            return ((EmrTemplate)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrTemplateAsync(string id) {
            this.GetEmrTemplateAsync(id, null);
        }
        
        /// <remarks/>
        public void GetEmrTemplateAsync(string id, object userState) {
            if ((this.GetEmrTemplateOperationCompleted == null)) {
                this.GetEmrTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrTemplateOperationCompleted);
            }
            this.InvokeAsync("GetEmrTemplate", new object[] {
                        id}, this.GetEmrTemplateOperationCompleted, userState);
        }
        
        private void OnGetEmrTemplateOperationCompleted(object arg) {
            if ((this.GetEmrTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrTemplateCompleted(this, new GetEmrTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrTemplateSection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplateSection GetEmrTemplateSection(string id) {
            object[] results = this.Invoke("GetEmrTemplateSection", new object[] {
                        id});
            return ((EmrTemplateSection)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrTemplateSectionAsync(string id) {
            this.GetEmrTemplateSectionAsync(id, null);
        }
        
        /// <remarks/>
        public void GetEmrTemplateSectionAsync(string id, object userState) {
            if ((this.GetEmrTemplateSectionOperationCompleted == null)) {
                this.GetEmrTemplateSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrTemplateSectionOperationCompleted);
            }
            this.InvokeAsync("GetEmrTemplateSection", new object[] {
                        id}, this.GetEmrTemplateSectionOperationCompleted, userState);
        }
        
        private void OnGetEmrTemplateSectionOperationCompleted(object arg) {
            if ((this.GetEmrTemplateSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrTemplateSectionCompleted(this, new GetEmrTemplateSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTemplateBaseCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveTemplateBaseCategory(EmrTemplateBase entity) {
            object[] results = this.Invoke("SaveTemplateBaseCategory", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateBaseCategoryAsync(EmrTemplateBase entity) {
            this.SaveTemplateBaseCategoryAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveTemplateBaseCategoryAsync(EmrTemplateBase entity, object userState) {
            if ((this.SaveTemplateBaseCategoryOperationCompleted == null)) {
                this.SaveTemplateBaseCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateBaseCategoryOperationCompleted);
            }
            this.InvokeAsync("SaveTemplateBaseCategory", new object[] {
                        entity}, this.SaveTemplateBaseCategoryOperationCompleted, userState);
        }
        
        private void OnSaveTemplateBaseCategoryOperationCompleted(object arg) {
            if ((this.SaveTemplateBaseCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateBaseCategoryCompleted(this, new SaveTemplateBaseCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTemplateCategoryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveTemplateCategoryList(EmrTemplateBase entity) {
            object[] results = this.Invoke("SaveTemplateCategoryList", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateCategoryListAsync(EmrTemplateBase entity) {
            this.SaveTemplateCategoryListAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveTemplateCategoryListAsync(EmrTemplateBase entity, object userState) {
            if ((this.SaveTemplateCategoryListOperationCompleted == null)) {
                this.SaveTemplateCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateCategoryListOperationCompleted);
            }
            this.InvokeAsync("SaveTemplateCategoryList", new object[] {
                        entity}, this.SaveTemplateCategoryListOperationCompleted, userState);
        }
        
        private void OnSaveTemplateCategoryListOperationCompleted(object arg) {
            if ((this.SaveTemplateCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateCategoryListCompleted(this, new SaveTemplateCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxTemplateBaseQueueNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxTemplateBaseQueueNo(int category, string parentID) {
            object[] results = this.Invoke("GetMaxTemplateBaseQueueNo", new object[] {
                        category,
                        parentID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxTemplateBaseQueueNoAsync(int category, string parentID) {
            this.GetMaxTemplateBaseQueueNoAsync(category, parentID, null);
        }
        
        /// <remarks/>
        public void GetMaxTemplateBaseQueueNoAsync(int category, string parentID, object userState) {
            if ((this.GetMaxTemplateBaseQueueNoOperationCompleted == null)) {
                this.GetMaxTemplateBaseQueueNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxTemplateBaseQueueNoOperationCompleted);
            }
            this.InvokeAsync("GetMaxTemplateBaseQueueNo", new object[] {
                        category,
                        parentID}, this.GetMaxTemplateBaseQueueNoOperationCompleted, userState);
        }
        
        private void OnGetMaxTemplateBaseQueueNoOperationCompleted(object arg) {
            if ((this.GetMaxTemplateBaseQueueNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxTemplateBaseQueueNoCompleted(this, new GetMaxTemplateBaseQueueNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNearestQueueNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNearestQueueNo(string category, string parentID, int QueueNo, int getType) {
            object[] results = this.Invoke("GetNearestQueueNo", new object[] {
                        category,
                        parentID,
                        QueueNo,
                        getType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNearestQueueNoAsync(string category, string parentID, int QueueNo, int getType) {
            this.GetNearestQueueNoAsync(category, parentID, QueueNo, getType, null);
        }
        
        /// <remarks/>
        public void GetNearestQueueNoAsync(string category, string parentID, int QueueNo, int getType, object userState) {
            if ((this.GetNearestQueueNoOperationCompleted == null)) {
                this.GetNearestQueueNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNearestQueueNoOperationCompleted);
            }
            this.InvokeAsync("GetNearestQueueNo", new object[] {
                        category,
                        parentID,
                        QueueNo,
                        getType}, this.GetNearestQueueNoOperationCompleted, userState);
        }
        
        private void OnGetNearestQueueNoOperationCompleted(object arg) {
            if ((this.GetNearestQueueNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNearestQueueNoCompleted(this, new GetNearestQueueNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTemplateBase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult DeleteTemplateBase(EmrTemplateBase entity) {
            object[] results = this.Invoke("DeleteTemplateBase", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTemplateBaseAsync(EmrTemplateBase entity) {
            this.DeleteTemplateBaseAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteTemplateBaseAsync(EmrTemplateBase entity, object userState) {
            if ((this.DeleteTemplateBaseOperationCompleted == null)) {
                this.DeleteTemplateBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateBaseOperationCompleted);
            }
            this.InvokeAsync("DeleteTemplateBase", new object[] {
                        entity}, this.DeleteTemplateBaseOperationCompleted, userState);
        }
        
        private void OnDeleteTemplateBaseOperationCompleted(object arg) {
            if ((this.DeleteTemplateBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTemplateBaseCompleted(this, new DeleteTemplateBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrTemplateSectionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplateSection[] GetEmrTemplateSectionList(int category, int visitType, string ownerCode) {
            object[] results = this.Invoke("GetEmrTemplateSectionList", new object[] {
                        category,
                        visitType,
                        ownerCode});
            return ((EmrTemplateSection[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrTemplateSectionListAsync(int category, int visitType, string ownerCode) {
            this.GetEmrTemplateSectionListAsync(category, visitType, ownerCode, null);
        }
        
        /// <remarks/>
        public void GetEmrTemplateSectionListAsync(int category, int visitType, string ownerCode, object userState) {
            if ((this.GetEmrTemplateSectionListOperationCompleted == null)) {
                this.GetEmrTemplateSectionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrTemplateSectionListOperationCompleted);
            }
            this.InvokeAsync("GetEmrTemplateSectionList", new object[] {
                        category,
                        visitType,
                        ownerCode}, this.GetEmrTemplateSectionListOperationCompleted, userState);
        }
        
        private void OnGetEmrTemplateSectionListOperationCompleted(object arg) {
            if ((this.GetEmrTemplateSectionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrTemplateSectionListCompleted(this, new GetEmrTemplateSectionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTemplateSectionCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveTemplateSectionCategory(EmrTemplateSection entity) {
            object[] results = this.Invoke("SaveTemplateSectionCategory", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateSectionCategoryAsync(EmrTemplateSection entity) {
            this.SaveTemplateSectionCategoryAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveTemplateSectionCategoryAsync(EmrTemplateSection entity, object userState) {
            if ((this.SaveTemplateSectionCategoryOperationCompleted == null)) {
                this.SaveTemplateSectionCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateSectionCategoryOperationCompleted);
            }
            this.InvokeAsync("SaveTemplateSectionCategory", new object[] {
                        entity}, this.SaveTemplateSectionCategoryOperationCompleted, userState);
        }
        
        private void OnSaveTemplateSectionCategoryOperationCompleted(object arg) {
            if ((this.SaveTemplateSectionCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateSectionCategoryCompleted(this, new SaveTemplateSectionCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveTemplateSection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveTemplateSection(EmrTemplateSection entity) {
            object[] results = this.Invoke("SaveTemplateSection", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateSectionAsync(EmrTemplateSection entity) {
            this.SaveTemplateSectionAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveTemplateSectionAsync(EmrTemplateSection entity, object userState) {
            if ((this.SaveTemplateSectionOperationCompleted == null)) {
                this.SaveTemplateSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateSectionOperationCompleted);
            }
            this.InvokeAsync("SaveTemplateSection", new object[] {
                        entity}, this.SaveTemplateSectionOperationCompleted, userState);
        }
        
        private void OnSaveTemplateSectionOperationCompleted(object arg) {
            if ((this.SaveTemplateSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateSectionCompleted(this, new SaveTemplateSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrTemplateSection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrTemplateSection(EmrTemplateSection entity) {
            this.Invoke("DeleteEmrTemplateSection", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteEmrTemplateSectionAsync(EmrTemplateSection entity) {
            this.DeleteEmrTemplateSectionAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrTemplateSectionAsync(EmrTemplateSection entity, object userState) {
            if ((this.DeleteEmrTemplateSectionOperationCompleted == null)) {
                this.DeleteEmrTemplateSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrTemplateSectionOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrTemplateSection", new object[] {
                        entity}, this.DeleteEmrTemplateSectionOperationCompleted, userState);
        }
        
        private void OnDeleteEmrTemplateSectionOperationCompleted(object arg) {
            if ((this.DeleteEmrTemplateSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrTemplateSectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxQueueNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxQueueNo(int category, string parentID) {
            object[] results = this.Invoke("GetMaxQueueNo", new object[] {
                        category,
                        parentID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxQueueNoAsync(int category, string parentID) {
            this.GetMaxQueueNoAsync(category, parentID, null);
        }
        
        /// <remarks/>
        public void GetMaxQueueNoAsync(int category, string parentID, object userState) {
            if ((this.GetMaxQueueNoOperationCompleted == null)) {
                this.GetMaxQueueNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxQueueNoOperationCompleted);
            }
            this.InvokeAsync("GetMaxQueueNo", new object[] {
                        category,
                        parentID}, this.GetMaxQueueNoOperationCompleted, userState);
        }
        
        private void OnGetMaxQueueNoOperationCompleted(object arg) {
            if ((this.GetMaxQueueNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxQueueNoCompleted(this, new GetMaxQueueNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrElementList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrElement[] GetEmrElementList(int category, int visitType, string ownerCode) {
            object[] results = this.Invoke("GetEmrElementList", new object[] {
                        category,
                        visitType,
                        ownerCode});
            return ((EmrElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrElementListAsync(int category, int visitType, string ownerCode) {
            this.GetEmrElementListAsync(category, visitType, ownerCode, null);
        }
        
        /// <remarks/>
        public void GetEmrElementListAsync(int category, int visitType, string ownerCode, object userState) {
            if ((this.GetEmrElementListOperationCompleted == null)) {
                this.GetEmrElementListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrElementListOperationCompleted);
            }
            this.InvokeAsync("GetEmrElementList", new object[] {
                        category,
                        visitType,
                        ownerCode}, this.GetEmrElementListOperationCompleted, userState);
        }
        
        private void OnGetEmrElementListOperationCompleted(object arg) {
            if ((this.GetEmrElementListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrElementListCompleted(this, new GetEmrElementListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrElement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrElement GetEmrElement(string ID) {
            object[] results = this.Invoke("GetEmrElement", new object[] {
                        ID});
            return ((EmrElement)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrElementAsync(string ID) {
            this.GetEmrElementAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetEmrElementAsync(string ID, object userState) {
            if ((this.GetEmrElementOperationCompleted == null)) {
                this.GetEmrElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrElementOperationCompleted);
            }
            this.InvokeAsync("GetEmrElement", new object[] {
                        ID}, this.GetEmrElementOperationCompleted, userState);
        }
        
        private void OnGetEmrElementOperationCompleted(object arg) {
            if ((this.GetEmrElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrElementCompleted(this, new GetEmrElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveElementCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveElementCategory(EmrElement entity) {
            object[] results = this.Invoke("SaveElementCategory", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveElementCategoryAsync(EmrElement entity) {
            this.SaveElementCategoryAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveElementCategoryAsync(EmrElement entity, object userState) {
            if ((this.SaveElementCategoryOperationCompleted == null)) {
                this.SaveElementCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveElementCategoryOperationCompleted);
            }
            this.InvokeAsync("SaveElementCategory", new object[] {
                        entity}, this.SaveElementCategoryOperationCompleted, userState);
        }
        
        private void OnSaveElementCategoryOperationCompleted(object arg) {
            if ((this.SaveElementCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveElementCategoryCompleted(this, new SaveElementCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveElement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveElement(EmrElement entity) {
            object[] results = this.Invoke("SaveElement", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveElementAsync(EmrElement entity) {
            this.SaveElementAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveElementAsync(EmrElement entity, object userState) {
            if ((this.SaveElementOperationCompleted == null)) {
                this.SaveElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveElementOperationCompleted);
            }
            this.InvokeAsync("SaveElement", new object[] {
                        entity}, this.SaveElementOperationCompleted, userState);
        }
        
        private void OnSaveElementOperationCompleted(object arg) {
            if ((this.SaveElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveElementCompleted(this, new SaveElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteElement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteElement(EmrElement entity) {
            this.Invoke("DeleteElement", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteElementAsync(EmrElement entity) {
            this.DeleteElementAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteElementAsync(EmrElement entity, object userState) {
            if ((this.DeleteElementOperationCompleted == null)) {
                this.DeleteElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteElementOperationCompleted);
            }
            this.InvokeAsync("DeleteElement", new object[] {
                        entity}, this.DeleteElementOperationCompleted, userState);
        }
        
        private void OnDeleteElementOperationCompleted(object arg) {
            if ((this.DeleteElementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteElementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDataReferenceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDataReference[] GetEmrDataReferenceList() {
            object[] results = this.Invoke("GetEmrDataReferenceList", new object[0]);
            return ((EmrDataReference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDataReferenceListAsync() {
            this.GetEmrDataReferenceListAsync(null);
        }
        
        /// <remarks/>
        public void GetEmrDataReferenceListAsync(object userState) {
            if ((this.GetEmrDataReferenceListOperationCompleted == null)) {
                this.GetEmrDataReferenceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDataReferenceListOperationCompleted);
            }
            this.InvokeAsync("GetEmrDataReferenceList", new object[0], this.GetEmrDataReferenceListOperationCompleted, userState);
        }
        
        private void OnGetEmrDataReferenceListOperationCompleted(object arg) {
            if ((this.GetEmrDataReferenceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDataReferenceListCompleted(this, new GetEmrDataReferenceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplateRightList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrTemplateRight[] GetTemplateRightList(string DeptCode) {
            object[] results = this.Invoke("GetTemplateRightList", new object[] {
                        DeptCode});
            return ((EmrTemplateRight[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateRightListAsync(string DeptCode) {
            this.GetTemplateRightListAsync(DeptCode, null);
        }
        
        /// <remarks/>
        public void GetTemplateRightListAsync(string DeptCode, object userState) {
            if ((this.GetTemplateRightListOperationCompleted == null)) {
                this.GetTemplateRightListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateRightListOperationCompleted);
            }
            this.InvokeAsync("GetTemplateRightList", new object[] {
                        DeptCode}, this.GetTemplateRightListOperationCompleted, userState);
        }
        
        private void OnGetTemplateRightListOperationCompleted(object arg) {
            if ((this.GetTemplateRightListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateRightListCompleted(this, new GetTemplateRightListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEmrTTemplateRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveEmrTTemplateRight(EmrTemplateRight entity) {
            object[] results = this.Invoke("SaveEmrTTemplateRight", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEmrTTemplateRightAsync(EmrTemplateRight entity) {
            this.SaveEmrTTemplateRightAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveEmrTTemplateRightAsync(EmrTemplateRight entity, object userState) {
            if ((this.SaveEmrTTemplateRightOperationCompleted == null)) {
                this.SaveEmrTTemplateRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEmrTTemplateRightOperationCompleted);
            }
            this.InvokeAsync("SaveEmrTTemplateRight", new object[] {
                        entity}, this.SaveEmrTTemplateRightOperationCompleted, userState);
        }
        
        private void OnSaveEmrTTemplateRightOperationCompleted(object arg) {
            if ((this.SaveEmrTTemplateRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEmrTTemplateRightCompleted(this, new SaveEmrTTemplateRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmrTemplateRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmrTemplateRight(EmrTemplateRight entity) {
            this.Invoke("DeleteEmrTemplateRight", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void DeleteEmrTemplateRightAsync(EmrTemplateRight entity) {
            this.DeleteEmrTemplateRightAsync(entity, null);
        }
        
        /// <remarks/>
        public void DeleteEmrTemplateRightAsync(EmrTemplateRight entity, object userState) {
            if ((this.DeleteEmrTemplateRightOperationCompleted == null)) {
                this.DeleteEmrTemplateRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrTemplateRightOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrTemplateRight", new object[] {
                        entity}, this.DeleteEmrTemplateRightOperationCompleted, userState);
        }
        
        private void OnDeleteEmrTemplateRightOperationCompleted(object arg) {
            if ((this.DeleteEmrTemplateRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrTemplateRightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmrDictList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrDict[] GetEmrDictList(string dicType) {
            object[] results = this.Invoke("GetEmrDictList", new object[] {
                        dicType});
            return ((EmrDict[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDictListAsync(string dicType) {
            this.GetEmrDictListAsync(dicType, null);
        }
        
        /// <remarks/>
        public void GetEmrDictListAsync(string dicType, object userState) {
            if ((this.GetEmrDictListOperationCompleted == null)) {
                this.GetEmrDictListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDictListOperationCompleted);
            }
            this.InvokeAsync("GetEmrDictList", new object[] {
                        dicType}, this.GetEmrDictListOperationCompleted, userState);
        }
        
        private void OnGetEmrDictListOperationCompleted(object arg) {
            if ((this.GetEmrDictListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDictListCompleted(this, new GetEmrDictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersDataRightList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UsersDataRight[] GetUsersDataRightList(string AppName, string DataRightType, string DataRightCode) {
            object[] results = this.Invoke("GetUsersDataRightList", new object[] {
                        AppName,
                        DataRightType,
                        DataRightCode});
            return ((UsersDataRight[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersDataRightListAsync(string AppName, string DataRightType, string DataRightCode) {
            this.GetUsersDataRightListAsync(AppName, DataRightType, DataRightCode, null);
        }
        
        /// <remarks/>
        public void GetUsersDataRightListAsync(string AppName, string DataRightType, string DataRightCode, object userState) {
            if ((this.GetUsersDataRightListOperationCompleted == null)) {
                this.GetUsersDataRightListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersDataRightListOperationCompleted);
            }
            this.InvokeAsync("GetUsersDataRightList", new object[] {
                        AppName,
                        DataRightType,
                        DataRightCode}, this.GetUsersDataRightListOperationCompleted, userState);
        }
        
        private void OnGetUsersDataRightListOperationCompleted(object arg) {
            if ((this.GetUsersDataRightListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersDataRightListCompleted(this, new GetUsersDataRightListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersDataRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UsersDataRight GetUsersDataRight(string AppName, string DataRightType, string DataRightCode, string DoctorCode, string DataRightValue) {
            object[] results = this.Invoke("GetUsersDataRight", new object[] {
                        AppName,
                        DataRightType,
                        DataRightCode,
                        DoctorCode,
                        DataRightValue});
            return ((UsersDataRight)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersDataRightAsync(string AppName, string DataRightType, string DataRightCode, string DoctorCode, string DataRightValue) {
            this.GetUsersDataRightAsync(AppName, DataRightType, DataRightCode, DoctorCode, DataRightValue, null);
        }
        
        /// <remarks/>
        public void GetUsersDataRightAsync(string AppName, string DataRightType, string DataRightCode, string DoctorCode, string DataRightValue, object userState) {
            if ((this.GetUsersDataRightOperationCompleted == null)) {
                this.GetUsersDataRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersDataRightOperationCompleted);
            }
            this.InvokeAsync("GetUsersDataRight", new object[] {
                        AppName,
                        DataRightType,
                        DataRightCode,
                        DoctorCode,
                        DataRightValue}, this.GetUsersDataRightOperationCompleted, userState);
        }
        
        private void OnGetUsersDataRightOperationCompleted(object arg) {
            if ((this.GetUsersDataRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersDataRightCompleted(this, new GetUsersDataRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUsersDataRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult SaveUsersDataRight(UsersDataRight entity) {
            object[] results = this.Invoke("SaveUsersDataRight", new object[] {
                        entity});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUsersDataRightAsync(UsersDataRight entity) {
            this.SaveUsersDataRightAsync(entity, null);
        }
        
        /// <remarks/>
        public void SaveUsersDataRightAsync(UsersDataRight entity, object userState) {
            if ((this.SaveUsersDataRightOperationCompleted == null)) {
                this.SaveUsersDataRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUsersDataRightOperationCompleted);
            }
            this.InvokeAsync("SaveUsersDataRight", new object[] {
                        entity}, this.SaveUsersDataRightOperationCompleted, userState);
        }
        
        private void OnSaveUsersDataRightOperationCompleted(object arg) {
            if ((this.SaveUsersDataRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUsersDataRightCompleted(this, new SaveUsersDataRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUsersDataRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmrServiceResult AddUsersDataRight(UsersDataRight userRight) {
            object[] results = this.Invoke("AddUsersDataRight", new object[] {
                        userRight});
            return ((EmrServiceResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddUsersDataRightAsync(UsersDataRight userRight) {
            this.AddUsersDataRightAsync(userRight, null);
        }
        
        /// <remarks/>
        public void AddUsersDataRightAsync(UsersDataRight userRight, object userState) {
            if ((this.AddUsersDataRightOperationCompleted == null)) {
                this.AddUsersDataRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsersDataRightOperationCompleted);
            }
            this.InvokeAsync("AddUsersDataRight", new object[] {
                        userRight}, this.AddUsersDataRightOperationCompleted, userState);
        }
        
        private void OnAddUsersDataRightOperationCompleted(object arg) {
            if ((this.AddUsersDataRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsersDataRightCompleted(this, new AddUsersDataRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUsersDataRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUsersDataRight(UsersDataRight userRight) {
            this.Invoke("DeleteUsersDataRight", new object[] {
                        userRight});
        }
        
        /// <remarks/>
        public void DeleteUsersDataRightAsync(UsersDataRight userRight) {
            this.DeleteUsersDataRightAsync(userRight, null);
        }
        
        /// <remarks/>
        public void DeleteUsersDataRightAsync(UsersDataRight userRight, object userState) {
            if ((this.DeleteUsersDataRightOperationCompleted == null)) {
                this.DeleteUsersDataRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUsersDataRightOperationCompleted);
            }
            this.InvokeAsync("DeleteUsersDataRight", new object[] {
                        userRight}, this.DeleteUsersDataRightOperationCompleted, userState);
        }
        
        private void OnDeleteUsersDataRightOperationCompleted(object arg) {
            if ((this.DeleteUsersDataRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUsersDataRightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDocRight(string type, string departCode, string userCode) {
            object[] results = this.Invoke("GetDocRight", new object[] {
                        type,
                        departCode,
                        userCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocRightAsync(string type, string departCode, string userCode) {
            this.GetDocRightAsync(type, departCode, userCode, null);
        }
        
        /// <remarks/>
        public void GetDocRightAsync(string type, string departCode, string userCode, object userState) {
            if ((this.GetDocRightOperationCompleted == null)) {
                this.GetDocRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocRightOperationCompleted);
            }
            this.InvokeAsync("GetDocRight", new object[] {
                        type,
                        departCode,
                        userCode}, this.GetDocRightOperationCompleted, userState);
        }
        
        private void OnGetDocRightOperationCompleted(object arg) {
            if ((this.GetDocRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocRightCompleted(this, new GetDocRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocBorrow {
        
        private int idField;
        
        private string cureNoField;
        
        private string admitNoField;
        
        private string bedNoField;
        
        private string patientNameField;
        
        private string wardCodeField;
        
        private string wardNameField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private System.Nullable<System.DateTime> validityStartField;
        
        private System.Nullable<System.DateTime> validityEndField;
        
        private System.Nullable<System.DateTime> applyTimeField;
        
        private int applyStatusField;
        
        private string approveUserCodeField;
        
        private string approveUserNameField;
        
        private System.Nullable<System.DateTime> approveTimeField;
        
        private string revokedUserCodeField;
        
        private string revokedUserNameField;
        
        private System.Nullable<System.DateTime> revokedTimeField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ValidityStart {
            get {
                return this.validityStartField;
            }
            set {
                this.validityStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ValidityEnd {
            get {
                return this.validityEndField;
            }
            set {
                this.validityEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApplyTime {
            get {
                return this.applyTimeField;
            }
            set {
                this.applyTimeField = value;
            }
        }
        
        /// <remarks/>
        public int ApplyStatus {
            get {
                return this.applyStatusField;
            }
            set {
                this.applyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ApproveUserCode {
            get {
                return this.approveUserCodeField;
            }
            set {
                this.approveUserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ApproveUserName {
            get {
                return this.approveUserNameField;
            }
            set {
                this.approveUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApproveTime {
            get {
                return this.approveTimeField;
            }
            set {
                this.approveTimeField = value;
            }
        }
        
        /// <remarks/>
        public string RevokedUserCode {
            get {
                return this.revokedUserCodeField;
            }
            set {
                this.revokedUserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RevokedUserName {
            get {
                return this.revokedUserNameField;
            }
            set {
                this.revokedUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RevokedTime {
            get {
                return this.revokedTimeField;
            }
            set {
                this.revokedTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UsersDataRight {
        
        private int idField;
        
        private string doctorCodeField;
        
        private string doctorNameField;
        
        private string appNameField;
        
        private string dataRightTypeField;
        
        private string dataRightCodeField;
        
        private string dataRightNameField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private string dataRightValueField;
        
        private System.Nullable<System.DateTime> createTimeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorCode {
            get {
                return this.doctorCodeField;
            }
            set {
                this.doctorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        public string AppName {
            get {
                return this.appNameField;
            }
            set {
                this.appNameField = value;
            }
        }
        
        /// <remarks/>
        public string DataRightType {
            get {
                return this.dataRightTypeField;
            }
            set {
                this.dataRightTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DataRightCode {
            get {
                return this.dataRightCodeField;
            }
            set {
                this.dataRightCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DataRightName {
            get {
                return this.dataRightNameField;
            }
            set {
                this.dataRightNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string DataRightValue {
            get {
                return this.dataRightValueField;
            }
            set {
                this.dataRightValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrTemplateRight {
        
        private string deptCodeField;
        
        private string deptNameField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private System.Nullable<int> statusField;
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrTypeStructure {
        
        private string typeIDField;
        
        private string typeNameField;
        
        private int isLeafField;
        
        private string parentIDField;
        
        private int printOptionField;
        
        private int isConsentField;
        
        private int needSignatureField;
        
        private string qualityControlCodeField;
        
        private int needPhysicianCheckField;
        
        private int needChiefPhysicianCheckField;
        
        private int isObjectiveField;
        
        private int isNeedPrintField;
        
        private int isBottomAppendRemarkField;
        
        private int colorTypeField;
        
        private int statusField;
        
        private int queueNoField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private int depthField;
        
        private System.Nullable<int> isUniqueField;
        
        private System.Nullable<int> autoNewPageField;
        
        /// <remarks/>
        public string TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public int IsLeaf {
            get {
                return this.isLeafField;
            }
            set {
                this.isLeafField = value;
            }
        }
        
        /// <remarks/>
        public string ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int PrintOption {
            get {
                return this.printOptionField;
            }
            set {
                this.printOptionField = value;
            }
        }
        
        /// <remarks/>
        public int IsConsent {
            get {
                return this.isConsentField;
            }
            set {
                this.isConsentField = value;
            }
        }
        
        /// <remarks/>
        public int NeedSignature {
            get {
                return this.needSignatureField;
            }
            set {
                this.needSignatureField = value;
            }
        }
        
        /// <remarks/>
        public string QualityControlCode {
            get {
                return this.qualityControlCodeField;
            }
            set {
                this.qualityControlCodeField = value;
            }
        }
        
        /// <remarks/>
        public int NeedPhysicianCheck {
            get {
                return this.needPhysicianCheckField;
            }
            set {
                this.needPhysicianCheckField = value;
            }
        }
        
        /// <remarks/>
        public int NeedChiefPhysicianCheck {
            get {
                return this.needChiefPhysicianCheckField;
            }
            set {
                this.needChiefPhysicianCheckField = value;
            }
        }
        
        /// <remarks/>
        public int IsObjective {
            get {
                return this.isObjectiveField;
            }
            set {
                this.isObjectiveField = value;
            }
        }
        
        /// <remarks/>
        public int IsNeedPrint {
            get {
                return this.isNeedPrintField;
            }
            set {
                this.isNeedPrintField = value;
            }
        }
        
        /// <remarks/>
        public int IsBottomAppendRemark {
            get {
                return this.isBottomAppendRemarkField;
            }
            set {
                this.isBottomAppendRemarkField = value;
            }
        }
        
        /// <remarks/>
        public int ColorType {
            get {
                return this.colorTypeField;
            }
            set {
                this.colorTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int QueueNo {
            get {
                return this.queueNoField;
            }
            set {
                this.queueNoField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IsUnique {
            get {
                return this.isUniqueField;
            }
            set {
                this.isUniqueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AutoNewPage {
            get {
                return this.autoNewPageField;
            }
            set {
                this.autoNewPageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocCheck {
        
        private int idField;
        
        private string emr_IDField;
        
        private string cureNoField;
        
        private int sectionNoField;
        
        private System.DateTime checkTimeField;
        
        private string checkerCodeField;
        
        private string checkerField;
        
        private int checkLevelField;
        
        private int saveStatusField;
        
        private string userCodeField;
        
        private string userNameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Emr_ID {
            get {
                return this.emr_IDField;
            }
            set {
                this.emr_IDField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public int SectionNo {
            get {
                return this.sectionNoField;
            }
            set {
                this.sectionNoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CheckTime {
            get {
                return this.checkTimeField;
            }
            set {
                this.checkTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CheckerCode {
            get {
                return this.checkerCodeField;
            }
            set {
                this.checkerCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Checker {
            get {
                return this.checkerField;
            }
            set {
                this.checkerField = value;
            }
        }
        
        /// <remarks/>
        public int CheckLevel {
            get {
                return this.checkLevelField;
            }
            set {
                this.checkLevelField = value;
            }
        }
        
        /// <remarks/>
        public int SaveStatus {
            get {
                return this.saveStatusField;
            }
            set {
                this.saveStatusField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocPrinted {
        
        private string emr_idField;
        
        private int sectionNoField;
        
        private string printorField;
        
        private System.DateTime print_dateField;
        
        private int groupNoField;
        
        private int groupIndexField;
        
        private int lastPageField;
        
        private int lastRowIndexField;
        
        /// <remarks/>
        public string emr_id {
            get {
                return this.emr_idField;
            }
            set {
                this.emr_idField = value;
            }
        }
        
        /// <remarks/>
        public int sectionNo {
            get {
                return this.sectionNoField;
            }
            set {
                this.sectionNoField = value;
            }
        }
        
        /// <remarks/>
        public string printor {
            get {
                return this.printorField;
            }
            set {
                this.printorField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime print_date {
            get {
                return this.print_dateField;
            }
            set {
                this.print_dateField = value;
            }
        }
        
        /// <remarks/>
        public int GroupNo {
            get {
                return this.groupNoField;
            }
            set {
                this.groupNoField = value;
            }
        }
        
        /// <remarks/>
        public int GroupIndex {
            get {
                return this.groupIndexField;
            }
            set {
                this.groupIndexField = value;
            }
        }
        
        /// <remarks/>
        public int LastPage {
            get {
                return this.lastPageField;
            }
            set {
                this.lastPageField = value;
            }
        }
        
        /// <remarks/>
        public int LastRowIndex {
            get {
                return this.lastRowIndexField;
            }
            set {
                this.lastRowIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocEncryptdEntity {
        
        private System.Guid idField;
        
        private System.Guid docIDField;
        
        private int sectionIDField;
        
        private string signedContentField;
        
        private string oldConentField;
        
        private string signedTimeStampContentField;
        
        private System.DateTime createdAtField;
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid DocID {
            get {
                return this.docIDField;
            }
            set {
                this.docIDField = value;
            }
        }
        
        /// <remarks/>
        public int SectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        public string SignedContent {
            get {
                return this.signedContentField;
            }
            set {
                this.signedContentField = value;
            }
        }
        
        /// <remarks/>
        public string OldConent {
            get {
                return this.oldConentField;
            }
            set {
                this.oldConentField = value;
            }
        }
        
        /// <remarks/>
        public string SignedTimeStampContent {
            get {
                return this.signedTimeStampContentField;
            }
            set {
                this.signedTimeStampContentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedAt {
            get {
                return this.createdAtField;
            }
            set {
                this.createdAtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrAllergicHistory {
        
        private string cureNoField;
        
        private string admitNoField;
        
        private bool hasDragAllerigicField;
        
        private string allergicDragsField;
        
        private bool hasFoodAllerigicField;
        
        private string allergicFoodsField;
        
        private string allergicContentField;
        
        private string allergicDesField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private string chemicCodeField;
        
        private string informationSourceField;
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public bool HasDragAllerigic {
            get {
                return this.hasDragAllerigicField;
            }
            set {
                this.hasDragAllerigicField = value;
            }
        }
        
        /// <remarks/>
        public string AllergicDrags {
            get {
                return this.allergicDragsField;
            }
            set {
                this.allergicDragsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasFoodAllerigic {
            get {
                return this.hasFoodAllerigicField;
            }
            set {
                this.hasFoodAllerigicField = value;
            }
        }
        
        /// <remarks/>
        public string AllergicFoods {
            get {
                return this.allergicFoodsField;
            }
            set {
                this.allergicFoodsField = value;
            }
        }
        
        /// <remarks/>
        public string AllergicContent {
            get {
                return this.allergicContentField;
            }
            set {
                this.allergicContentField = value;
            }
        }
        
        /// <remarks/>
        public string AllergicDes {
            get {
                return this.allergicDesField;
            }
            set {
                this.allergicDesField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string ChemicCode {
            get {
                return this.chemicCodeField;
            }
            set {
                this.chemicCodeField = value;
            }
        }
        
        /// <remarks/>
        public string InformationSource {
            get {
                return this.informationSourceField;
            }
            set {
                this.informationSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrQualityControlContinue {
        
        private string sectionIdField;
        
        private int idField;
        
        private string sectionNameField;
        
        private string accordingDateField;
        
        private int intervalField;
        
        private string firstSectionNameField;
        
        private string descriptionField;
        
        private string firstSectionIDField;
        
        /// <remarks/>
        public string SectionId {
            get {
                return this.sectionIdField;
            }
            set {
                this.sectionIdField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SectionName {
            get {
                return this.sectionNameField;
            }
            set {
                this.sectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccordingDate {
            get {
                return this.accordingDateField;
            }
            set {
                this.accordingDateField = value;
            }
        }
        
        /// <remarks/>
        public int Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        public string FirstSectionName {
            get {
                return this.firstSectionNameField;
            }
            set {
                this.firstSectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FirstSectionID {
            get {
                return this.firstSectionIDField;
            }
            set {
                this.firstSectionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrQualityControlComplete {
        
        private string sectionIDField;
        
        private int idField;
        
        private string sectionNameField;
        
        private int mustField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string SectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SectionName {
            get {
                return this.sectionNameField;
            }
            set {
                this.sectionNameField = value;
            }
        }
        
        /// <remarks/>
        public int Must {
            get {
                return this.mustField;
            }
            set {
                this.mustField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrQualityControlTime {
        
        private string sectionIDField;
        
        private string sectionNameField;
        
        private string accordingDateField;
        
        private System.Nullable<int> directionField;
        
        private System.Nullable<int> intervalField;
        
        private System.Nullable<int> accordingDatePartField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string SectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        public string SectionName {
            get {
                return this.sectionNameField;
            }
            set {
                this.sectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccordingDate {
            get {
                return this.accordingDateField;
            }
            set {
                this.accordingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AccordingDatePart {
            get {
                return this.accordingDatePartField;
            }
            set {
                this.accordingDatePartField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrScoreDoc {
        
        private string emr_idField;
        
        private string userNameField;
        
        private string userCodeField;
        
        private string scoreTypeIDField;
        
        private string scoreItemCodeField;
        
        private string scoreItemNameField;
        
        private string gradingField;
        
        private string defectsField;
        
        private System.Nullable<int> reviewedField;
        
        private string autoQualityControlField;
        
        private System.Nullable<int> isIndividualPointsField;
        
        /// <remarks/>
        public string Emr_id {
            get {
                return this.emr_idField;
            }
            set {
                this.emr_idField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreTypeID {
            get {
                return this.scoreTypeIDField;
            }
            set {
                this.scoreTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreItemCode {
            get {
                return this.scoreItemCodeField;
            }
            set {
                this.scoreItemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreItemName {
            get {
                return this.scoreItemNameField;
            }
            set {
                this.scoreItemNameField = value;
            }
        }
        
        /// <remarks/>
        public string Grading {
            get {
                return this.gradingField;
            }
            set {
                this.gradingField = value;
            }
        }
        
        /// <remarks/>
        public string Defects {
            get {
                return this.defectsField;
            }
            set {
                this.defectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Reviewed {
            get {
                return this.reviewedField;
            }
            set {
                this.reviewedField = value;
            }
        }
        
        /// <remarks/>
        public string AutoQualityControl {
            get {
                return this.autoQualityControlField;
            }
            set {
                this.autoQualityControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IsIndividualPoints {
            get {
                return this.isIndividualPointsField;
            }
            set {
                this.isIndividualPointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrScoreRecord {
        
        private string userCodeField;
        
        private string userNameField;
        
        private string emr_idField;
        
        private int sectionNoField;
        
        private string scoresField;
        
        private string scoresLevelField;
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Emr_id {
            get {
                return this.emr_idField;
            }
            set {
                this.emr_idField = value;
            }
        }
        
        /// <remarks/>
        public int SectionNo {
            get {
                return this.sectionNoField;
            }
            set {
                this.sectionNoField = value;
            }
        }
        
        /// <remarks/>
        public string Scores {
            get {
                return this.scoresField;
            }
            set {
                this.scoresField = value;
            }
        }
        
        /// <remarks/>
        public string ScoresLevel {
            get {
                return this.scoresLevelField;
            }
            set {
                this.scoresLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrScore {
        
        private string scoreTypeIDField;
        
        private string scoreTypeNameField;
        
        private string scoreItemCodeField;
        
        private string scoreItemNameField;
        
        private string gradingField;
        
        private string defectsField;
        
        private System.Nullable<int> reviewedField;
        
        private string autoQualityControlField;
        
        private System.Nullable<int> isIndividualPointsField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private int idField;
        
        /// <remarks/>
        public string ScoreTypeID {
            get {
                return this.scoreTypeIDField;
            }
            set {
                this.scoreTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreTypeName {
            get {
                return this.scoreTypeNameField;
            }
            set {
                this.scoreTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreItemCode {
            get {
                return this.scoreItemCodeField;
            }
            set {
                this.scoreItemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreItemName {
            get {
                return this.scoreItemNameField;
            }
            set {
                this.scoreItemNameField = value;
            }
        }
        
        /// <remarks/>
        public string Grading {
            get {
                return this.gradingField;
            }
            set {
                this.gradingField = value;
            }
        }
        
        /// <remarks/>
        public string Defects {
            get {
                return this.defectsField;
            }
            set {
                this.defectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Reviewed {
            get {
                return this.reviewedField;
            }
            set {
                this.reviewedField = value;
            }
        }
        
        /// <remarks/>
        public string AutoQualityControl {
            get {
                return this.autoQualityControlField;
            }
            set {
                this.autoQualityControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IsIndividualPoints {
            get {
                return this.isIndividualPointsField;
            }
            set {
                this.isIndividualPointsField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrScoreType {
        
        private int scoreTypeIDField;
        
        private string scoreTypeNameField;
        
        private string scoreField;
        
        private string userCodeField;
        
        private string userNameField;
        
        /// <remarks/>
        public int ScoreTypeID {
            get {
                return this.scoreTypeIDField;
            }
            set {
                this.scoreTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ScoreTypeName {
            get {
                return this.scoreTypeNameField;
            }
            set {
                this.scoreTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrCoverPageCondition {
        
        private System.Nullable<System.DateTime> leaveDateFrField;
        
        private System.Nullable<System.DateTime> leaveDateToField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDateFr {
            get {
                return this.leaveDateFrField;
            }
            set {
                this.leaveDateFrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDateTo {
            get {
                return this.leaveDateToField;
            }
            set {
                this.leaveDateToField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrMyPatientsCondition {
        
        private bool isGetMyPatientsField;
        
        private string wardCodeField;
        
        private string brztField;
        
        private System.Nullable<System.DateTime> admitDateFrField;
        
        private System.Nullable<System.DateTime> admitDateToField;
        
        private System.Nullable<System.DateTime> leaveDateFrField;
        
        private System.Nullable<System.DateTime> leaveDateToField;
        
        private string admitNoField;
        
        private string doctorCodeField;
        
        private string docStatusField;
        
        private CommonPageInfo pageInfoField;
        
        private string mainDiagnosisField;
        
        private string surgeryNameField;
        
        private string[] cureNoListField;
        
        /// <remarks/>
        public bool IsGetMyPatients {
            get {
                return this.isGetMyPatientsField;
            }
            set {
                this.isGetMyPatientsField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Brzt {
            get {
                return this.brztField;
            }
            set {
                this.brztField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDateFr {
            get {
                return this.admitDateFrField;
            }
            set {
                this.admitDateFrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDateTo {
            get {
                return this.admitDateToField;
            }
            set {
                this.admitDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDateFr {
            get {
                return this.leaveDateFrField;
            }
            set {
                this.leaveDateFrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDateTo {
            get {
                return this.leaveDateToField;
            }
            set {
                this.leaveDateToField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorCode {
            get {
                return this.doctorCodeField;
            }
            set {
                this.doctorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DocStatus {
            get {
                return this.docStatusField;
            }
            set {
                this.docStatusField = value;
            }
        }
        
        /// <remarks/>
        public CommonPageInfo PageInfo {
            get {
                return this.pageInfoField;
            }
            set {
                this.pageInfoField = value;
            }
        }
        
        /// <remarks/>
        public string MainDiagnosis {
            get {
                return this.mainDiagnosisField;
            }
            set {
                this.mainDiagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string SurgeryName {
            get {
                return this.surgeryNameField;
            }
            set {
                this.surgeryNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] CureNoList {
            get {
                return this.cureNoListField;
            }
            set {
                this.cureNoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CommonPageInfo {
        
        private int pageIndexField;
        
        private int pageSizeField;
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrTreatDoctor {
        
        private string cureNoField;
        
        private string wardField;
        
        private string bedNoField;
        
        private System.DateTime setTimeField;
        
        private int typeField;
        
        private string doctorCode1Field;
        
        private string doctorName1Field;
        
        private string doctorCode2Field;
        
        private string doctorName2Field;
        
        private System.DateTime endTimeField;
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string Ward {
            get {
                return this.wardField;
            }
            set {
                this.wardField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SetTime {
            get {
                return this.setTimeField;
            }
            set {
                this.setTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorCode1 {
            get {
                return this.doctorCode1Field;
            }
            set {
                this.doctorCode1Field = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName1 {
            get {
                return this.doctorName1Field;
            }
            set {
                this.doctorName1Field = value;
            }
        }
        
        /// <remarks/>
        public string DoctorCode2 {
            get {
                return this.doctorCode2Field;
            }
            set {
                this.doctorCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName2 {
            get {
                return this.doctorName2Field;
            }
            set {
                this.doctorName2Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDict {
        
        private int idField;
        
        private string dicNameField;
        
        private string diclValueField;
        
        private int statusField;
        
        private string dicTypeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string dicName {
            get {
                return this.dicNameField;
            }
            set {
                this.dicNameField = value;
            }
        }
        
        /// <remarks/>
        public string diclValue {
            get {
                return this.diclValueField;
            }
            set {
                this.diclValueField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string dicType {
            get {
                return this.dicTypeField;
            }
            set {
                this.dicTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrQulityControlDocActivation {
        
        private string admitNoField;
        
        private string cureNoField;
        
        private string nameField;
        
        private int sexField;
        
        private string ageField;
        
        private string wardCodeField;
        
        private string deptCodeField;
        
        private string wardNameField;
        
        private string deptNameField;
        
        private string bedNoField;
        
        private System.Nullable<System.DateTime> admitDateField;
        
        private System.Nullable<System.DateTime> leaveDateField;
        
        private int statusField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private string sexNameField;
        
        private string statusNameField;
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.admitDateField;
            }
            set {
                this.admitDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDate {
            get {
                return this.leaveDateField;
            }
            set {
                this.leaveDateField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string SexName {
            get {
                return this.sexNameField;
            }
            set {
                this.sexNameField = value;
            }
        }
        
        /// <remarks/>
        public string StatusName {
            get {
                return this.statusNameField;
            }
            set {
                this.statusNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrQualityControlDelaylist {
        
        private string cureNoField;
        
        private System.Nullable<int> wardField;
        
        private System.Nullable<int> bedNoField;
        
        private string nameField;
        
        private System.Nullable<System.DateTime> admitDateField;
        
        private string sectionNameField;
        
        private System.DateTime regulateDateField;
        
        private System.Nullable<int> delayField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private System.Nullable<int> admitnoField;
        
        private string deptnameField;
        
        private System.Nullable<System.DateTime> updatedateField;
        
        private System.Nullable<int> processStatusField;
        
        private System.Nullable<System.DateTime> processTimeField;
        
        private int serialNoField;
        
        private System.Nullable<int> processOpField;
        
        private string sectionIDField;
        
        private int qCTypeField;
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Ward {
            get {
                return this.wardField;
            }
            set {
                this.wardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.admitDateField;
            }
            set {
                this.admitDateField = value;
            }
        }
        
        /// <remarks/>
        public string SectionName {
            get {
                return this.sectionNameField;
            }
            set {
                this.sectionNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegulateDate {
            get {
                return this.regulateDateField;
            }
            set {
                this.regulateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> admitno {
            get {
                return this.admitnoField;
            }
            set {
                this.admitnoField = value;
            }
        }
        
        /// <remarks/>
        public string deptname {
            get {
                return this.deptnameField;
            }
            set {
                this.deptnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedate {
            get {
                return this.updatedateField;
            }
            set {
                this.updatedateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProcessStatus {
            get {
                return this.processStatusField;
            }
            set {
                this.processStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ProcessTime {
            get {
                return this.processTimeField;
            }
            set {
                this.processTimeField = value;
            }
        }
        
        /// <remarks/>
        public int SerialNo {
            get {
                return this.serialNoField;
            }
            set {
                this.serialNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProcessOp {
            get {
                return this.processOpField;
            }
            set {
                this.processOpField = value;
            }
        }
        
        /// <remarks/>
        public string SectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        public int QCType {
            get {
                return this.qCTypeField;
            }
            set {
                this.qCTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrQulityControlDept {
        
        private string admitNoField;
        
        private string cureNoField;
        
        private string nameField;
        
        private int sexField;
        
        private string ageField;
        
        private string wardCodeField;
        
        private string deptCodeField;
        
        private string wardNameField;
        
        private string deptNameField;
        
        private string bedNoField;
        
        private System.Nullable<System.DateTime> admitDateField;
        
        private System.Nullable<System.DateTime> leaveDateField;
        
        private int statusField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private string sexNameField;
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.admitDateField;
            }
            set {
                this.admitDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDate {
            get {
                return this.leaveDateField;
            }
            set {
                this.leaveDateField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string SexName {
            get {
                return this.sexNameField;
            }
            set {
                this.sexNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Common_OperateLogInfo {
        
        private long logIDField;
        
        private string deptNameField;
        
        private string orgIdField;
        
        private string orgNameField;
        
        private string moduleNameField;
        
        private string operationNameField;
        
        private string messageField;
        
        private string keyWordField;
        
        private System.DateTime createTimeField;
        
        private System.Nullable<int> logTypeField;
        
        private System.Nullable<int> operateResultField;
        
        private string accountField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private string userTypeField;
        
        private string userHostAddressField;
        
        private string deptIdField;
        
        /// <remarks/>
        public long LogID {
            get {
                return this.logIDField;
            }
            set {
                this.logIDField = value;
            }
        }
        
        /// <remarks/>
        public string deptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string orgId {
            get {
                return this.orgIdField;
            }
            set {
                this.orgIdField = value;
            }
        }
        
        /// <remarks/>
        public string orgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModuleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
            }
        }
        
        /// <remarks/>
        public string OperationName {
            get {
                return this.operationNameField;
            }
            set {
                this.operationNameField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string KeyWord {
            get {
                return this.keyWordField;
            }
            set {
                this.keyWordField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LogType {
            get {
                return this.logTypeField;
            }
            set {
                this.logTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OperateResult {
            get {
                return this.operateResultField;
            }
            set {
                this.operateResultField = value;
            }
        }
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserHostAddress {
            get {
                return this.userHostAddressField;
            }
            set {
                this.userHostAddressField = value;
            }
        }
        
        /// <remarks/>
        public string deptId {
            get {
                return this.deptIdField;
            }
            set {
                this.deptIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDoctor {
        
        private string codeField;
        
        private string nameField;
        
        private string typeCodeField;
        
        private string deptNameField;
        
        private string deptCodeField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCode {
            get {
                return this.typeCodeField;
            }
            set {
                this.typeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDoctorQualify {
        
        private string doctorCodeField;
        
        private string doctorNameField;
        
        private System.Nullable<int> qualifyLevelField;
        
        private System.Nullable<int> qualifiedDoctorField;
        
        private string opCodeField;
        
        private string typeCodeField;
        
        private string typeCode2Field;
        
        private System.Nullable<System.DateTime> createTimeField;
        
        private System.Nullable<int> statusField;
        
        private string opNameField;
        
        private string departmentCodeField;
        
        private string departmentNameField;
        
        private string displayNameField;
        
        /// <remarks/>
        public string DoctorCode {
            get {
                return this.doctorCodeField;
            }
            set {
                this.doctorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> QualifyLevel {
            get {
                return this.qualifyLevelField;
            }
            set {
                this.qualifyLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> QualifiedDoctor {
            get {
                return this.qualifiedDoctorField;
            }
            set {
                this.qualifiedDoctorField = value;
            }
        }
        
        /// <remarks/>
        public string OpCode {
            get {
                return this.opCodeField;
            }
            set {
                this.opCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCode {
            get {
                return this.typeCodeField;
            }
            set {
                this.typeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCode2 {
            get {
                return this.typeCode2Field;
            }
            set {
                this.typeCode2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string OpName {
            get {
                return this.opNameField;
            }
            set {
                this.opNameField = value;
            }
        }
        
        /// <remarks/>
        public string DepartmentCode {
            get {
                return this.departmentCodeField;
            }
            set {
                this.departmentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DepartmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDepartment {
        
        private string idField;
        
        private string nameField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CommonDictionry {
        
        private int dictionaryIDField;
        
        private string codeField;
        
        private string nameField;
        
        private string valueField;
        
        private string extendPropertiesField;
        
        private string descriptionField;
        
        private int parentIDField;
        
        private int sortField;
        
        private string remarkField;
        
        private string parentPathField;
        
        private int depthField;
        
        private bool isLeafField;
        
        private bool isActiveField;
        
        private bool isDeleteField;
        
        private System.DateTime createTimeField;
        
        private System.DateTime lastUpdateTimeField;
        
        /// <remarks/>
        public int DictionaryID {
            get {
                return this.dictionaryIDField;
            }
            set {
                this.dictionaryIDField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string ExtendProperties {
            get {
                return this.extendPropertiesField;
            }
            set {
                this.extendPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int Sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string ParentPath {
            get {
                return this.parentPathField;
            }
            set {
                this.parentPathField = value;
            }
        }
        
        /// <remarks/>
        public int Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLeaf {
            get {
                return this.isLeafField;
            }
            set {
                this.isLeafField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDelete {
            get {
                return this.isDeleteField;
            }
            set {
                this.isDeleteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateTime {
            get {
                return this.lastUpdateTimeField;
            }
            set {
                this.lastUpdateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QualityControlApply {
        
        private int idField;
        
        private string cureNoField;
        
        private string admitNoField;
        
        private string bedNoField;
        
        private string patientNameField;
        
        private string wardCodeField;
        
        private string wardNameField;
        
        private string userCodeField;
        
        private string userNameField;
        
        private System.Nullable<System.DateTime> applyTimeField;
        
        private System.Guid templateIDField;
        
        private string templateTypeField;
        
        private string templateTypeIDField;
        
        private string qcCodeField;
        
        private int errorCodeField;
        
        private int applyStatusField;
        
        private string approveUserCodeField;
        
        private string approveUserNameField;
        
        private System.Nullable<System.DateTime> approveTimeField;
        
        private string qcNameField;
        
        private string errorMsgField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApplyTime {
            get {
                return this.applyTimeField;
            }
            set {
                this.applyTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateType {
            get {
                return this.templateTypeField;
            }
            set {
                this.templateTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateTypeID {
            get {
                return this.templateTypeIDField;
            }
            set {
                this.templateTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string QcCode {
            get {
                return this.qcCodeField;
            }
            set {
                this.qcCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ApplyStatus {
            get {
                return this.applyStatusField;
            }
            set {
                this.applyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ApproveUserCode {
            get {
                return this.approveUserCodeField;
            }
            set {
                this.approveUserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ApproveUserName {
            get {
                return this.approveUserNameField;
            }
            set {
                this.approveUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApproveTime {
            get {
                return this.approveTimeField;
            }
            set {
                this.approveTimeField = value;
            }
        }
        
        /// <remarks/>
        public string QcName {
            get {
                return this.qcNameField;
            }
            set {
                this.qcNameField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrQualityControlReminder {
        
        private System.Guid idField;
        
        private string patientNameField;
        
        private string admitNoField;
        
        private string cureNoField;
        
        private string patientBedField;
        
        private string wardCodeField;
        
        private string wardNameField;
        
        private string diagnosisField;
        
        private string errorSectionNameField;
        
        private string errorSectionEmrIdField;
        
        private string errorSectionNoField;
        
        private string errorReasonField;
        
        private System.DateTime createTimeField;
        
        private string createCodeField;
        
        private System.DateTime updateTimeField;
        
        private string updateCodeField;
        
        private int statusField;
        
        private System.Nullable<System.DateTime> docCreateDateField;
        
        private System.Nullable<System.DateTime> docCheckDateField;
        
        private string docCreatorField;
        
        private string docCreatorCodeField;
        
        private string docCheckerField;
        
        private string docCheckerCodeField;
        
        private string docStatusField;
        
        private System.Nullable<System.DateTime> docViewDateField;
        
        private System.Nullable<System.DateTime> admitDateField;
        
        private System.Nullable<System.DateTime> leaveHospitalDateField;
        
        private System.Nullable<System.DateTime> leaveAreaDateField;
        
        private string itemCodeField;
        
        private int errorCodeField;
        
        private int processAdviceField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string PatientBed {
            get {
                return this.patientBedField;
            }
            set {
                this.patientBedField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorSectionName {
            get {
                return this.errorSectionNameField;
            }
            set {
                this.errorSectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorSectionEmrId {
            get {
                return this.errorSectionEmrIdField;
            }
            set {
                this.errorSectionEmrIdField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorSectionNo {
            get {
                return this.errorSectionNoField;
            }
            set {
                this.errorSectionNoField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorReason {
            get {
                return this.errorReasonField;
            }
            set {
                this.errorReasonField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CreateCode {
            get {
                return this.createCodeField;
            }
            set {
                this.createCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateCode {
            get {
                return this.updateCodeField;
            }
            set {
                this.updateCodeField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DocCreateDate {
            get {
                return this.docCreateDateField;
            }
            set {
                this.docCreateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DocCheckDate {
            get {
                return this.docCheckDateField;
            }
            set {
                this.docCheckDateField = value;
            }
        }
        
        /// <remarks/>
        public string DocCreator {
            get {
                return this.docCreatorField;
            }
            set {
                this.docCreatorField = value;
            }
        }
        
        /// <remarks/>
        public string DocCreatorCode {
            get {
                return this.docCreatorCodeField;
            }
            set {
                this.docCreatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DocChecker {
            get {
                return this.docCheckerField;
            }
            set {
                this.docCheckerField = value;
            }
        }
        
        /// <remarks/>
        public string DocCheckerCode {
            get {
                return this.docCheckerCodeField;
            }
            set {
                this.docCheckerCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DocStatus {
            get {
                return this.docStatusField;
            }
            set {
                this.docStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DocViewDate {
            get {
                return this.docViewDateField;
            }
            set {
                this.docViewDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.admitDateField;
            }
            set {
                this.admitDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveHospitalDate {
            get {
                return this.leaveHospitalDateField;
            }
            set {
                this.leaveHospitalDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveAreaDate {
            get {
                return this.leaveAreaDateField;
            }
            set {
                this.leaveAreaDateField = value;
            }
        }
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessAdvice {
            get {
                return this.processAdviceField;
            }
            set {
                this.processAdviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrAffiliatedAccount {
        
        private string doctorNameField;
        
        private string doctorCodeField;
        
        private string affiliatedNameField;
        
        private string affiliatedCodeField;
        
        private string affiliatedPasswordField;
        
        private bool isDeletedField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private System.Nullable<System.DateTime> updateDateField;
        
        private System.Nullable<System.DateTime> beginDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private int affiliatedTypeField;
        
        private string affiliatedTypeDisplayField;
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorCode {
            get {
                return this.doctorCodeField;
            }
            set {
                this.doctorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AffiliatedName {
            get {
                return this.affiliatedNameField;
            }
            set {
                this.affiliatedNameField = value;
            }
        }
        
        /// <remarks/>
        public string AffiliatedCode {
            get {
                return this.affiliatedCodeField;
            }
            set {
                this.affiliatedCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AffiliatedPassword {
            get {
                return this.affiliatedPasswordField;
            }
            set {
                this.affiliatedPasswordField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BeginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int AffiliatedType {
            get {
                return this.affiliatedTypeField;
            }
            set {
                this.affiliatedTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AffiliatedTypeDisplay {
            get {
                return this.affiliatedTypeDisplayField;
            }
            set {
                this.affiliatedTypeDisplayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatResponseDoctorGroup {
        
        private string doctorGroupIdField;
        
        private string doctorGroupNameField;
        
        private string chiefPhysicianCode1Field;
        
        private string chiefPhysicianName1Field;
        
        private string chiefPhysicianCode2Field;
        
        private string chiefPhysicianName2Field;
        
        private string superiorPhysicianCode1Field;
        
        private string superiorPhysicianName1Field;
        
        private string superiorPhysicianCode2Field;
        
        private string superiorPhysicianName2Field;
        
        private string treatingPhysicianCode1Field;
        
        private string treatingPhysicianName1Field;
        
        private string treatingPhysicianCode2Field;
        
        private string treatingPhysicianName2Field;
        
        private bool isDeletedField;
        
        private string deptCodeField;
        
        private string deptNameField;
        
        /// <remarks/>
        public string DoctorGroupId {
            get {
                return this.doctorGroupIdField;
            }
            set {
                this.doctorGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorGroupName {
            get {
                return this.doctorGroupNameField;
            }
            set {
                this.doctorGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string ChiefPhysicianCode1 {
            get {
                return this.chiefPhysicianCode1Field;
            }
            set {
                this.chiefPhysicianCode1Field = value;
            }
        }
        
        /// <remarks/>
        public string ChiefPhysicianName1 {
            get {
                return this.chiefPhysicianName1Field;
            }
            set {
                this.chiefPhysicianName1Field = value;
            }
        }
        
        /// <remarks/>
        public string ChiefPhysicianCode2 {
            get {
                return this.chiefPhysicianCode2Field;
            }
            set {
                this.chiefPhysicianCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string ChiefPhysicianName2 {
            get {
                return this.chiefPhysicianName2Field;
            }
            set {
                this.chiefPhysicianName2Field = value;
            }
        }
        
        /// <remarks/>
        public string SuperiorPhysicianCode1 {
            get {
                return this.superiorPhysicianCode1Field;
            }
            set {
                this.superiorPhysicianCode1Field = value;
            }
        }
        
        /// <remarks/>
        public string SuperiorPhysicianName1 {
            get {
                return this.superiorPhysicianName1Field;
            }
            set {
                this.superiorPhysicianName1Field = value;
            }
        }
        
        /// <remarks/>
        public string SuperiorPhysicianCode2 {
            get {
                return this.superiorPhysicianCode2Field;
            }
            set {
                this.superiorPhysicianCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string SuperiorPhysicianName2 {
            get {
                return this.superiorPhysicianName2Field;
            }
            set {
                this.superiorPhysicianName2Field = value;
            }
        }
        
        /// <remarks/>
        public string TreatingPhysicianCode1 {
            get {
                return this.treatingPhysicianCode1Field;
            }
            set {
                this.treatingPhysicianCode1Field = value;
            }
        }
        
        /// <remarks/>
        public string TreatingPhysicianName1 {
            get {
                return this.treatingPhysicianName1Field;
            }
            set {
                this.treatingPhysicianName1Field = value;
            }
        }
        
        /// <remarks/>
        public string TreatingPhysicianCode2 {
            get {
                return this.treatingPhysicianCode2Field;
            }
            set {
                this.treatingPhysicianCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string TreatingPhysicianName2 {
            get {
                return this.treatingPhysicianName2Field;
            }
            set {
                this.treatingPhysicianName2Field = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QualityControlResult {
        
        private string templateTypeCodeField;
        
        private string templateTypeNameField;
        
        private int deductScoreField;
        
        private string qualityItemCodeField;
        
        private AutoScoreError[] errorSectionsField;
        
        /// <remarks/>
        public string TemplateTypeCode {
            get {
                return this.templateTypeCodeField;
            }
            set {
                this.templateTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateTypeName {
            get {
                return this.templateTypeNameField;
            }
            set {
                this.templateTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int DeductScore {
            get {
                return this.deductScoreField;
            }
            set {
                this.deductScoreField = value;
            }
        }
        
        /// <remarks/>
        public string QualityItemCode {
            get {
                return this.qualityItemCodeField;
            }
            set {
                this.qualityItemCodeField = value;
            }
        }
        
        /// <remarks/>
        public AutoScoreError[] ErrorSections {
            get {
                return this.errorSectionsField;
            }
            set {
                this.errorSectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AutoScoreError {
        
        private int errorCodeField;
        
        private EmrDocSection errorSectionField;
        
        private string errorReasonField;
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public EmrDocSection ErrorSection {
            get {
                return this.errorSectionField;
            }
            set {
                this.errorSectionField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorReason {
            get {
                return this.errorReasonField;
            }
            set {
                this.errorReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocSection : EmrDocSectionBase {
        
        private string m_TypeIDField;
        
        private string typeField;
        
        private int colorTypeField;
        
        private string docLevelField;
        
        private int printOptionField;
        
        private string cureNoField;
        
        private string typeIDField;
        
        private string templateIDField;
        
        private int sectionNoField;
        
        private int isSectionTopViewField;
        
        private int isSectionBottomAppendRemarkField;
        
        private int isSectionNeedPrintField;
        
        private int isSectionExclusiveField;
        
        private int needChiefPhysicianCheckField;
        
        private int needPhysicianCheckField;
        
        private string doctorField;
        
        private string verifyDoctorField;
        
        private System.DateTime viewDateField;
        
        private string bedDoctorField;
        
        private string superDoctorField;
        
        private string directorDoctorField;
        
        private bool isObjectiveField;
        
        private bool isCopiedField;
        
        private string currentEditOpNameField;
        
        private int currentEditOpCodeField;
        
        private int startPosField;
        
        private EmrDocStruct[] structListField;
        
        private EmrDocSectionContent[] emrDocSectionContentListField;
        
        /// <remarks/>
        public string m_TypeID {
            get {
                return this.m_TypeIDField;
            }
            set {
                this.m_TypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int colorType {
            get {
                return this.colorTypeField;
            }
            set {
                this.colorTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DocLevel {
            get {
                return this.docLevelField;
            }
            set {
                this.docLevelField = value;
            }
        }
        
        /// <remarks/>
        public int PrintOption {
            get {
                return this.printOptionField;
            }
            set {
                this.printOptionField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        public int SectionNo {
            get {
                return this.sectionNoField;
            }
            set {
                this.sectionNoField = value;
            }
        }
        
        /// <remarks/>
        public int IsSectionTopView {
            get {
                return this.isSectionTopViewField;
            }
            set {
                this.isSectionTopViewField = value;
            }
        }
        
        /// <remarks/>
        public int IsSectionBottomAppendRemark {
            get {
                return this.isSectionBottomAppendRemarkField;
            }
            set {
                this.isSectionBottomAppendRemarkField = value;
            }
        }
        
        /// <remarks/>
        public int IsSectionNeedPrint {
            get {
                return this.isSectionNeedPrintField;
            }
            set {
                this.isSectionNeedPrintField = value;
            }
        }
        
        /// <remarks/>
        public int IsSectionExclusive {
            get {
                return this.isSectionExclusiveField;
            }
            set {
                this.isSectionExclusiveField = value;
            }
        }
        
        /// <remarks/>
        public int NeedChiefPhysicianCheck {
            get {
                return this.needChiefPhysicianCheckField;
            }
            set {
                this.needChiefPhysicianCheckField = value;
            }
        }
        
        /// <remarks/>
        public int NeedPhysicianCheck {
            get {
                return this.needPhysicianCheckField;
            }
            set {
                this.needPhysicianCheckField = value;
            }
        }
        
        /// <remarks/>
        public string Doctor {
            get {
                return this.doctorField;
            }
            set {
                this.doctorField = value;
            }
        }
        
        /// <remarks/>
        public string VerifyDoctor {
            get {
                return this.verifyDoctorField;
            }
            set {
                this.verifyDoctorField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ViewDate {
            get {
                return this.viewDateField;
            }
            set {
                this.viewDateField = value;
            }
        }
        
        /// <remarks/>
        public string BedDoctor {
            get {
                return this.bedDoctorField;
            }
            set {
                this.bedDoctorField = value;
            }
        }
        
        /// <remarks/>
        public string SuperDoctor {
            get {
                return this.superDoctorField;
            }
            set {
                this.superDoctorField = value;
            }
        }
        
        /// <remarks/>
        public string DirectorDoctor {
            get {
                return this.directorDoctorField;
            }
            set {
                this.directorDoctorField = value;
            }
        }
        
        /// <remarks/>
        public bool IsObjective {
            get {
                return this.isObjectiveField;
            }
            set {
                this.isObjectiveField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCopied {
            get {
                return this.isCopiedField;
            }
            set {
                this.isCopiedField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentEditOpName {
            get {
                return this.currentEditOpNameField;
            }
            set {
                this.currentEditOpNameField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentEditOpCode {
            get {
                return this.currentEditOpCodeField;
            }
            set {
                this.currentEditOpCodeField = value;
            }
        }
        
        /// <remarks/>
        public int StartPos {
            get {
                return this.startPosField;
            }
            set {
                this.startPosField = value;
            }
        }
        
        /// <remarks/>
        public EmrDocStruct[] StructList {
            get {
                return this.structListField;
            }
            set {
                this.structListField = value;
            }
        }
        
        /// <remarks/>
        public EmrDocSectionContent[] EmrDocSectionContentList {
            get {
                return this.emrDocSectionContentListField;
            }
            set {
                this.emrDocSectionContentListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocStruct {
        
        private string emr_idField;
        
        private int sectionNoField;
        
        private string structNameField;
        
        private string propertyNameField;
        
        private string propertyValueField;
        
        private string contentField;
        
        /// <remarks/>
        public string emr_id {
            get {
                return this.emr_idField;
            }
            set {
                this.emr_idField = value;
            }
        }
        
        /// <remarks/>
        public int SectionNo {
            get {
                return this.sectionNoField;
            }
            set {
                this.sectionNoField = value;
            }
        }
        
        /// <remarks/>
        public string StructName {
            get {
                return this.structNameField;
            }
            set {
                this.structNameField = value;
            }
        }
        
        /// <remarks/>
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        public string PropertyValue {
            get {
                return this.propertyValueField;
            }
            set {
                this.propertyValueField = value;
            }
        }
        
        /// <remarks/>
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocSectionContent {
        
        private string emr_idField;
        
        private string cure_noField;
        
        private string content_idField;
        
        private string content_textField;
        
        /// <remarks/>
        public string emr_id {
            get {
                return this.emr_idField;
            }
            set {
                this.emr_idField = value;
            }
        }
        
        /// <remarks/>
        public string cure_no {
            get {
                return this.cure_noField;
            }
            set {
                this.cure_noField = value;
            }
        }
        
        /// <remarks/>
        public string content_id {
            get {
                return this.content_idField;
            }
            set {
                this.content_idField = value;
            }
        }
        
        /// <remarks/>
        public string content_text {
            get {
                return this.content_textField;
            }
            set {
                this.content_textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrTemplateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrTemplate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrTemplateSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrDocSection))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocSectionBase {
        
        private string userCodeField;
        
        private string userNameField;
        
        private string emr_IDField;
        
        private string nameField;
        
        private string formField;
        
        private string xmlIslandField;
        
        private byte[] docByteContentField;
        
        private System.DateTime createDateField;
        
        private System.DateTime updateDateField;
        
        private string creatorField;
        
        private string creatorCodeField;
        
        private System.DateTime checkDateField;
        
        private string checkerField;
        
        private string checkerCodeField;
        
        private string operatorField;
        
        private string opeartorCodeField;
        
        private int saveStatusField;
        
        private int startPageField;
        
        private int endPageField;
        
        private int firstRowField;
        
        private int lastRowField;
        
        private int autoNewPageField;
        
        private EmrDynamicRule[] ruleListField;
        
        private string htmlContentField;
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Emr_ID {
            get {
                return this.emr_IDField;
            }
            set {
                this.emr_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        public string XmlIsland {
            get {
                return this.xmlIslandField;
            }
            set {
                this.xmlIslandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DocByteContent {
            get {
                return this.docByteContentField;
            }
            set {
                this.docByteContentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public string Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        public string CreatorCode {
            get {
                return this.creatorCodeField;
            }
            set {
                this.creatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CheckDate {
            get {
                return this.checkDateField;
            }
            set {
                this.checkDateField = value;
            }
        }
        
        /// <remarks/>
        public string Checker {
            get {
                return this.checkerField;
            }
            set {
                this.checkerField = value;
            }
        }
        
        /// <remarks/>
        public string CheckerCode {
            get {
                return this.checkerCodeField;
            }
            set {
                this.checkerCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        public string OpeartorCode {
            get {
                return this.opeartorCodeField;
            }
            set {
                this.opeartorCodeField = value;
            }
        }
        
        /// <remarks/>
        public int SaveStatus {
            get {
                return this.saveStatusField;
            }
            set {
                this.saveStatusField = value;
            }
        }
        
        /// <remarks/>
        public int StartPage {
            get {
                return this.startPageField;
            }
            set {
                this.startPageField = value;
            }
        }
        
        /// <remarks/>
        public int EndPage {
            get {
                return this.endPageField;
            }
            set {
                this.endPageField = value;
            }
        }
        
        /// <remarks/>
        public int FirstRow {
            get {
                return this.firstRowField;
            }
            set {
                this.firstRowField = value;
            }
        }
        
        /// <remarks/>
        public int LastRow {
            get {
                return this.lastRowField;
            }
            set {
                this.lastRowField = value;
            }
        }
        
        /// <remarks/>
        public int AutoNewPage {
            get {
                return this.autoNewPageField;
            }
            set {
                this.autoNewPageField = value;
            }
        }
        
        /// <remarks/>
        public EmrDynamicRule[] RuleList {
            get {
                return this.ruleListField;
            }
            set {
                this.ruleListField = value;
            }
        }
        
        /// <remarks/>
        public string HtmlContent {
            get {
                return this.htmlContentField;
            }
            set {
                this.htmlContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDynamicRule {
        
        private string triggerIDField;
        
        private string triggerNameField;
        
        private int triggerTypeField;
        
        private string triggerOperatorField;
        
        private string triggerValueField;
        
        private EmrDynamicRuleTarget[] targetListField;
        
        /// <remarks/>
        public string TriggerID {
            get {
                return this.triggerIDField;
            }
            set {
                this.triggerIDField = value;
            }
        }
        
        /// <remarks/>
        public string TriggerName {
            get {
                return this.triggerNameField;
            }
            set {
                this.triggerNameField = value;
            }
        }
        
        /// <remarks/>
        public int TriggerType {
            get {
                return this.triggerTypeField;
            }
            set {
                this.triggerTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TriggerOperator {
            get {
                return this.triggerOperatorField;
            }
            set {
                this.triggerOperatorField = value;
            }
        }
        
        /// <remarks/>
        public string TriggerValue {
            get {
                return this.triggerValueField;
            }
            set {
                this.triggerValueField = value;
            }
        }
        
        /// <remarks/>
        public EmrDynamicRuleTarget[] TargetList {
            get {
                return this.targetListField;
            }
            set {
                this.targetListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDynamicRuleTarget {
        
        private string targetIDField;
        
        private string targetNameField;
        
        private int targetTypeField;
        
        private string actionField;
        
        private string valueField;
        
        /// <remarks/>
        public string TargetID {
            get {
                return this.targetIDField;
            }
            set {
                this.targetIDField = value;
            }
        }
        
        /// <remarks/>
        public string TargetName {
            get {
                return this.targetNameField;
            }
            set {
                this.targetNameField = value;
            }
        }
        
        /// <remarks/>
        public int TargetType {
            get {
                return this.targetTypeField;
            }
            set {
                this.targetTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrTemplate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrTemplateSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmrElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrTemplateBase : EmrDocSectionBase {
        
        private int depthField;
        
        private string idField;
        
        private string parentIDField;
        
        private string ownerTypeField;
        
        private int visitTypeField;
        
        private int isLeafField;
        
        private string ownerNameField;
        
        private string ownerCodeField;
        
        private string remarkField;
        
        private int queueNoField;
        
        private int templateVersionField;
        
        private string codeField;
        
        /// <remarks/>
        public int Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerType {
            get {
                return this.ownerTypeField;
            }
            set {
                this.ownerTypeField = value;
            }
        }
        
        /// <remarks/>
        public int VisitType {
            get {
                return this.visitTypeField;
            }
            set {
                this.visitTypeField = value;
            }
        }
        
        /// <remarks/>
        public int IsLeaf {
            get {
                return this.isLeafField;
            }
            set {
                this.isLeafField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerCode {
            get {
                return this.ownerCodeField;
            }
            set {
                this.ownerCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int QueueNo {
            get {
                return this.queueNoField;
            }
            set {
                this.queueNoField = value;
            }
        }
        
        /// <remarks/>
        public int TemplateVersion {
            get {
                return this.templateVersionField;
            }
            set {
                this.templateVersionField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrTemplate : EmrTemplateBase {
        
        private string typeIDField;
        
        private TemplateAttribute templateAttributeField;
        
        /// <remarks/>
        public string TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        public TemplateAttribute TemplateAttribute {
            get {
                return this.templateAttributeField;
            }
            set {
                this.templateAttributeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TemplateAttribute {
        
        private int idField;
        
        private string templateIDField;
        
        private string templateCodeField;
        
        private string parentCodeField;
        
        private int sortField;
        
        private int printModeField;
        
        private bool isUniqueField;
        
        private bool isAutoNewpageField;
        
        private bool needPhysicianAuditField;
        
        private bool needChiefPhysicianAuditField;
        
        private string keyWordsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateCode {
            get {
                return this.templateCodeField;
            }
            set {
                this.templateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ParentCode {
            get {
                return this.parentCodeField;
            }
            set {
                this.parentCodeField = value;
            }
        }
        
        /// <remarks/>
        public int Sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
        
        /// <remarks/>
        public int PrintMode {
            get {
                return this.printModeField;
            }
            set {
                this.printModeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUnique {
            get {
                return this.isUniqueField;
            }
            set {
                this.isUniqueField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAutoNewpage {
            get {
                return this.isAutoNewpageField;
            }
            set {
                this.isAutoNewpageField = value;
            }
        }
        
        /// <remarks/>
        public bool NeedPhysicianAudit {
            get {
                return this.needPhysicianAuditField;
            }
            set {
                this.needPhysicianAuditField = value;
            }
        }
        
        /// <remarks/>
        public bool NeedChiefPhysicianAudit {
            get {
                return this.needChiefPhysicianAuditField;
            }
            set {
                this.needChiefPhysicianAuditField = value;
            }
        }
        
        /// <remarks/>
        public string KeyWords {
            get {
                return this.keyWordsField;
            }
            set {
                this.keyWordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrTemplateSection : EmrTemplateBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrElement : EmrTemplateBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BizResultOfQualityControlResult {
        
        private bool resultField;
        
        private string messageField;
        
        private QualityControlResult returnValueField;
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public QualityControlResult ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PatientInfoEntity {
        
        private string wardCodeField;
        
        private string wardNameField;
        
        private string patientNameField;
        
        private string patientCodeField;
        
        private string diagnosisField;
        
        private string admitNoField;
        
        private string cureNoField;
        
        private EmrDocSection[] sectionsField;
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientCode {
            get {
                return this.patientCodeField;
            }
            set {
                this.patientCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public EmrDocSection[] Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AutoScoreResult {
        
        private PatientInfoEntity patientInfoField;
        
        private int scoreField;
        
        private AutoScoreError[] errorsField;
        
        private string exceptionMessageField;
        
        /// <remarks/>
        public PatientInfoEntity PatientInfo {
            get {
                return this.patientInfoField;
            }
            set {
                this.patientInfoField = value;
            }
        }
        
        /// <remarks/>
        public int Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public AutoScoreError[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionMessage {
            get {
                return this.exceptionMessageField;
            }
            set {
                this.exceptionMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrAutoScoreItem {
        
        private int idField;
        
        private string item_nameField;
        
        private bool item_enableField;
        
        private string item_pathField;
        
        private int item_gradingField;
        
        private string item_codeField;
        
        private string item_field3Field;
        
        private string item_field4Field;
        
        private System.DateTime item_field5Field;
        
        private System.DateTime item_field6Field;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string item_name {
            get {
                return this.item_nameField;
            }
            set {
                this.item_nameField = value;
            }
        }
        
        /// <remarks/>
        public bool item_enable {
            get {
                return this.item_enableField;
            }
            set {
                this.item_enableField = value;
            }
        }
        
        /// <remarks/>
        public string item_path {
            get {
                return this.item_pathField;
            }
            set {
                this.item_pathField = value;
            }
        }
        
        /// <remarks/>
        public int item_grading {
            get {
                return this.item_gradingField;
            }
            set {
                this.item_gradingField = value;
            }
        }
        
        /// <remarks/>
        public string item_code {
            get {
                return this.item_codeField;
            }
            set {
                this.item_codeField = value;
            }
        }
        
        /// <remarks/>
        public string item_field3 {
            get {
                return this.item_field3Field;
            }
            set {
                this.item_field3Field = value;
            }
        }
        
        /// <remarks/>
        public string item_field4 {
            get {
                return this.item_field4Field;
            }
            set {
                this.item_field4Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime item_field5 {
            get {
                return this.item_field5Field;
            }
            set {
                this.item_field5Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime item_field6 {
            get {
                return this.item_field6Field;
            }
            set {
                this.item_field6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrScoreTemplate {
        
        private int idField;
        
        private string typeField;
        
        private string templateIDField;
        
        private System.Nullable<System.DateTime> updateDateField;
        
        private string templateTypeCodeField;
        
        private string itemCodeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateTypeCode {
            get {
                return this.templateTypeCodeField;
            }
            set {
                this.templateTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DocHistory {
        
        private string cureNoField;
        
        private System.Nullable<System.DateTime> admitDateField;
        
        private string mainDiagnoisField;
        
        private string cardNoField;
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.admitDateField;
            }
            set {
                this.admitDateField = value;
            }
        }
        
        /// <remarks/>
        public string MainDiagnois {
            get {
                return this.mainDiagnoisField;
            }
            set {
                this.mainDiagnoisField = value;
            }
        }
        
        /// <remarks/>
        public string CardNo {
            get {
                return this.cardNoField;
            }
            set {
                this.cardNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DoctorInfo {
        
        private string doctorNameField;
        
        private string doctorCodeField;
        
        private string doctorIPField;
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorCode {
            get {
                return this.doctorCodeField;
            }
            set {
                this.doctorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorIP {
            get {
                return this.doctorIPField;
            }
            set {
                this.doctorIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WSBOUrgentAlarm {
        
        private System.Guid idField;
        
        private string cureNoField;
        
        private string wardField;
        
        private string reportNoField;
        
        private System.Nullable<System.DateTime> checkDateField;
        
        private string reportNameField;
        
        private string alarmContentField;
        
        private System.Nullable<int> processStatusField;
        
        private System.Nullable<int> sMSStatusField;
        
        private System.Guid createUserGuidField;
        
        private System.DateTime createTimeField;
        
        private System.Guid modifyUserGuidField;
        
        private System.Nullable<System.DateTime> modifyTimeField;
        
        private string bedNoField;
        
        private string wardCodeField;
        
        private string patientNameField;
        
        private bool isCheckField;
        
        private string sampleNoField;
        
        /// <remarks/>
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string Ward {
            get {
                return this.wardField;
            }
            set {
                this.wardField = value;
            }
        }
        
        /// <remarks/>
        public string ReportNo {
            get {
                return this.reportNoField;
            }
            set {
                this.reportNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CheckDate {
            get {
                return this.checkDateField;
            }
            set {
                this.checkDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReportName {
            get {
                return this.reportNameField;
            }
            set {
                this.reportNameField = value;
            }
        }
        
        /// <remarks/>
        public string AlarmContent {
            get {
                return this.alarmContentField;
            }
            set {
                this.alarmContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProcessStatus {
            get {
                return this.processStatusField;
            }
            set {
                this.processStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SMSStatus {
            get {
                return this.sMSStatusField;
            }
            set {
                this.sMSStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CreateUserGuid {
            get {
                return this.createUserGuidField;
            }
            set {
                this.createUserGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ModifyUserGuid {
            get {
                return this.modifyUserGuidField;
            }
            set {
                this.modifyUserGuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ModifyTime {
            get {
                return this.modifyTimeField;
            }
            set {
                this.modifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCheck {
            get {
                return this.isCheckField;
            }
            set {
                this.isCheckField = value;
            }
        }
        
        /// <remarks/>
        public string SampleNo {
            get {
                return this.sampleNoField;
            }
            set {
                this.sampleNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDefaultWard {
        
        private string usercodeField;
        
        private string usernameField;
        
        private System.DateTime updatetimeField;
        
        private string wardCodeField;
        
        private string wardnameField;
        
        /// <remarks/>
        public string Usercode {
            get {
                return this.usercodeField;
            }
            set {
                this.usercodeField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime updatetime {
            get {
                return this.updatetimeField;
            }
            set {
                this.updatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Wardname {
            get {
                return this.wardnameField;
            }
            set {
                this.wardnameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocHtml {
        
        private string emr_IDField;
        
        private int sectionNoField;
        
        private string cureNoField;
        
        private int isDeletedField;
        
        private string htmlContentField;
        
        /// <remarks/>
        public string Emr_ID {
            get {
                return this.emr_IDField;
            }
            set {
                this.emr_IDField = value;
            }
        }
        
        /// <remarks/>
        public int SectionNo {
            get {
                return this.sectionNoField;
            }
            set {
                this.sectionNoField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public int IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public string HtmlContent {
            get {
                return this.htmlContentField;
            }
            set {
                this.htmlContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrRisResult {
        
        private int serialNoField;
        
        private string itemCodeField;
        
        private string itemNameField;
        
        private string itemResultField;
        
        /// <remarks/>
        public int SerialNo {
            get {
                return this.serialNoField;
            }
            set {
                this.serialNoField = value;
            }
        }
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public string ItemResult {
            get {
                return this.itemResultField;
            }
            set {
                this.itemResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrRis {
        
        private string hospitalNoField;
        
        private string patientSerialNoField;
        
        private string patientNameField;
        
        private string reportCatalogField;
        
        private string reportTypeField;
        
        private string reportNoField;
        
        private string reportNameField;
        
        private System.Nullable<System.DateTime> submitDateField;
        
        private System.Nullable<System.DateTime> releaseDateField;
        
        private System.Nullable<System.DateTime> reportDateField;
        
        private System.Nullable<System.DateTime> submissionDateField;
        
        private string techNoField;
        
        private string techMothodField;
        
        private string patientClassNameField;
        
        private string patientClassField;
        
        /// <remarks/>
        public string HospitalNo {
            get {
                return this.hospitalNoField;
            }
            set {
                this.hospitalNoField = value;
            }
        }
        
        /// <remarks/>
        public string PatientSerialNo {
            get {
                return this.patientSerialNoField;
            }
            set {
                this.patientSerialNoField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReportCatalog {
            get {
                return this.reportCatalogField;
            }
            set {
                this.reportCatalogField = value;
            }
        }
        
        /// <remarks/>
        public string ReportType {
            get {
                return this.reportTypeField;
            }
            set {
                this.reportTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ReportNo {
            get {
                return this.reportNoField;
            }
            set {
                this.reportNoField = value;
            }
        }
        
        /// <remarks/>
        public string ReportName {
            get {
                return this.reportNameField;
            }
            set {
                this.reportNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SubmitDate {
            get {
                return this.submitDateField;
            }
            set {
                this.submitDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReleaseDate {
            get {
                return this.releaseDateField;
            }
            set {
                this.releaseDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReportDate {
            get {
                return this.reportDateField;
            }
            set {
                this.reportDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SubmissionDate {
            get {
                return this.submissionDateField;
            }
            set {
                this.submissionDateField = value;
            }
        }
        
        /// <remarks/>
        public string TechNo {
            get {
                return this.techNoField;
            }
            set {
                this.techNoField = value;
            }
        }
        
        /// <remarks/>
        public string TechMothod {
            get {
                return this.techMothodField;
            }
            set {
                this.techMothodField = value;
            }
        }
        
        /// <remarks/>
        public string PatientClassName {
            get {
                return this.patientClassNameField;
            }
            set {
                this.patientClassNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientClass {
            get {
                return this.patientClassField;
            }
            set {
                this.patientClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrListResultMicro {
        
        private string organisNameField;
        
        private string organisCodeField;
        
        private string itemcodeField;
        
        private string itemnaField;
        
        private string printvalField;
        
        /// <remarks/>
        public string OrganisName {
            get {
                return this.organisNameField;
            }
            set {
                this.organisNameField = value;
            }
        }
        
        /// <remarks/>
        public string OrganisCode {
            get {
                return this.organisCodeField;
            }
            set {
                this.organisCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Itemcode {
            get {
                return this.itemcodeField;
            }
            set {
                this.itemcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Itemna {
            get {
                return this.itemnaField;
            }
            set {
                this.itemnaField = value;
            }
        }
        
        /// <remarks/>
        public string Printval {
            get {
                return this.printvalField;
            }
            set {
                this.printvalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrLisResult {
        
        private string applyNoField;
        
        private string itemcodeField;
        
        private string itemnaField;
        
        private string printvalField;
        
        private string unitField;
        
        private int isnormalField;
        
        private string lmtflagField;
        
        private string referencesRangeField;
        
        private int isCultureField;
        
        private EmrListResultMicro[] resultMicroListField;
        
        /// <remarks/>
        public string ApplyNo {
            get {
                return this.applyNoField;
            }
            set {
                this.applyNoField = value;
            }
        }
        
        /// <remarks/>
        public string itemcode {
            get {
                return this.itemcodeField;
            }
            set {
                this.itemcodeField = value;
            }
        }
        
        /// <remarks/>
        public string itemna {
            get {
                return this.itemnaField;
            }
            set {
                this.itemnaField = value;
            }
        }
        
        /// <remarks/>
        public string printval {
            get {
                return this.printvalField;
            }
            set {
                this.printvalField = value;
            }
        }
        
        /// <remarks/>
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public int isnormal {
            get {
                return this.isnormalField;
            }
            set {
                this.isnormalField = value;
            }
        }
        
        /// <remarks/>
        public string lmtflag {
            get {
                return this.lmtflagField;
            }
            set {
                this.lmtflagField = value;
            }
        }
        
        /// <remarks/>
        public string ReferencesRange {
            get {
                return this.referencesRangeField;
            }
            set {
                this.referencesRangeField = value;
            }
        }
        
        /// <remarks/>
        public int IsCulture {
            get {
                return this.isCultureField;
            }
            set {
                this.isCultureField = value;
            }
        }
        
        /// <remarks/>
        public EmrListResultMicro[] ResultMicroList {
            get {
                return this.resultMicroListField;
            }
            set {
                this.resultMicroListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrLis {
        
        private string applyNoField;
        
        private string instrIDField;
        
        private string sampleNoField;
        
        private System.Nullable<System.DateTime> sampleDateField;
        
        private System.Nullable<System.DateTime> reportDateField;
        
        private System.Nullable<System.DateTime> submissionDateField;
        
        private string rpt_titleField;
        
        private string majorItemNameField;
        
        private string patientClassField;
        
        private string patientClassNameField;
        
        private string abnormalFlagField;
        
        /// <remarks/>
        public string ApplyNo {
            get {
                return this.applyNoField;
            }
            set {
                this.applyNoField = value;
            }
        }
        
        /// <remarks/>
        public string instrID {
            get {
                return this.instrIDField;
            }
            set {
                this.instrIDField = value;
            }
        }
        
        /// <remarks/>
        public string sampleNo {
            get {
                return this.sampleNoField;
            }
            set {
                this.sampleNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sampleDate {
            get {
                return this.sampleDateField;
            }
            set {
                this.sampleDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReportDate {
            get {
                return this.reportDateField;
            }
            set {
                this.reportDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SubmissionDate {
            get {
                return this.submissionDateField;
            }
            set {
                this.submissionDateField = value;
            }
        }
        
        /// <remarks/>
        public string rpt_title {
            get {
                return this.rpt_titleField;
            }
            set {
                this.rpt_titleField = value;
            }
        }
        
        /// <remarks/>
        public string majorItemName {
            get {
                return this.majorItemNameField;
            }
            set {
                this.majorItemNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientClass {
            get {
                return this.patientClassField;
            }
            set {
                this.patientClassField = value;
            }
        }
        
        /// <remarks/>
        public string PatientClassName {
            get {
                return this.patientClassNameField;
            }
            set {
                this.patientClassNameField = value;
            }
        }
        
        /// <remarks/>
        public string AbnormalFlag {
            get {
                return this.abnormalFlagField;
            }
            set {
                this.abnormalFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrClinicePathEntity {
        
        private bool isExitField;
        
        private string userCodeField;
        
        private string usernameField;
        
        private string disenseNameField;
        
        private string cPtemplateField;
        
        private string cPICDField;
        
        private string curNoField;
        
        private string cPIdField;
        
        private int statusField;
        
        private System.DateTime enterDateField;
        
        private string notEnterRemarkField;
        
        private System.DateTime exitDateField;
        
        private string exitRemarkField;
        
        private System.DateTime createTimeField;
        
        private string zDMCField;
        
        /// <remarks/>
        public bool IsExit {
            get {
                return this.isExitField;
            }
            set {
                this.isExitField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string DisenseName {
            get {
                return this.disenseNameField;
            }
            set {
                this.disenseNameField = value;
            }
        }
        
        /// <remarks/>
        public string CPtemplate {
            get {
                return this.cPtemplateField;
            }
            set {
                this.cPtemplateField = value;
            }
        }
        
        /// <remarks/>
        public string CPICD {
            get {
                return this.cPICDField;
            }
            set {
                this.cPICDField = value;
            }
        }
        
        /// <remarks/>
        public string CurNo {
            get {
                return this.curNoField;
            }
            set {
                this.curNoField = value;
            }
        }
        
        /// <remarks/>
        public string CPId {
            get {
                return this.cPIdField;
            }
            set {
                this.cPIdField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EnterDate {
            get {
                return this.enterDateField;
            }
            set {
                this.enterDateField = value;
            }
        }
        
        /// <remarks/>
        public string NotEnterRemark {
            get {
                return this.notEnterRemarkField;
            }
            set {
                this.notEnterRemarkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExitDate {
            get {
                return this.exitDateField;
            }
            set {
                this.exitDateField = value;
            }
        }
        
        /// <remarks/>
        public string ExitRemark {
            get {
                return this.exitRemarkField;
            }
            set {
                this.exitRemarkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ZDMC {
            get {
                return this.zDMCField;
            }
            set {
                this.zDMCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageEntity {
        
        private string mSGGuidField;
        
        private string patientNameField;
        
        private string mSGTypeField;
        
        private string mSGDescriptionField;
        
        private string reportTypeField;
        
        private string reportNoField;
        
        private string sampleNoField;
        
        private int docCreateFlagField;
        
        /// <remarks/>
        public string MSGGuid {
            get {
                return this.mSGGuidField;
            }
            set {
                this.mSGGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string MSGType {
            get {
                return this.mSGTypeField;
            }
            set {
                this.mSGTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MSGDescription {
            get {
                return this.mSGDescriptionField;
            }
            set {
                this.mSGDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ReportType {
            get {
                return this.reportTypeField;
            }
            set {
                this.reportTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ReportNo {
            get {
                return this.reportNoField;
            }
            set {
                this.reportNoField = value;
            }
        }
        
        /// <remarks/>
        public string SampleNo {
            get {
                return this.sampleNoField;
            }
            set {
                this.sampleNoField = value;
            }
        }
        
        /// <remarks/>
        public int DocCreateFlag {
            get {
                return this.docCreateFlagField;
            }
            set {
                this.docCreateFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrMyPatients {
        
        private string brztField;
        
        private string eMRStatusField;
        
        private string mainDiagnosisField;
        
        private string admitNoField;
        
        private string cureNoField;
        
        private string doctorNoField;
        
        private string doctorNameField;
        
        private string patientNameField;
        
        private int sexField;
        
        private string ageField;
        
        private string bedNoField;
        
        private string deptCodeField;
        
        private string deptNameField;
        
        private string wardCodeField;
        
        private string wardNameField;
        
        private System.Nullable<System.DateTime> admitDateField;
        
        private System.Nullable<System.DateTime> leaveDateField;
        
        private int statusField;
        
        private string userNameField;
        
        private string userCodeField;
        
        private string sexNameField;
        
        private string chiefPhysicianField;
        
        private string deputyChiefPhysicianField;
        
        private string residentsField;
        
        private string physicianField;
        
        private string internField;
        
        private string currentAddressField;
        
        private string currentAddressPhoneNoField;
        
        private string diagnosisField;
        
        private System.Nullable<System.DateTime> surgeryDateField;
        
        private string surgeryNameField;
        
        private string surgeonNameField;
        
        private string firstAssistantNameField;
        
        /// <remarks/>
        public string Brzt {
            get {
                return this.brztField;
            }
            set {
                this.brztField = value;
            }
        }
        
        /// <remarks/>
        public string EMRStatus {
            get {
                return this.eMRStatusField;
            }
            set {
                this.eMRStatusField = value;
            }
        }
        
        /// <remarks/>
        public string MainDiagnosis {
            get {
                return this.mainDiagnosisField;
            }
            set {
                this.mainDiagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorNo {
            get {
                return this.doctorNoField;
            }
            set {
                this.doctorNoField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public int Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.admitDateField;
            }
            set {
                this.admitDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDate {
            get {
                return this.leaveDateField;
            }
            set {
                this.leaveDateField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public string SexName {
            get {
                return this.sexNameField;
            }
            set {
                this.sexNameField = value;
            }
        }
        
        /// <remarks/>
        public string ChiefPhysician {
            get {
                return this.chiefPhysicianField;
            }
            set {
                this.chiefPhysicianField = value;
            }
        }
        
        /// <remarks/>
        public string DeputyChiefPhysician {
            get {
                return this.deputyChiefPhysicianField;
            }
            set {
                this.deputyChiefPhysicianField = value;
            }
        }
        
        /// <remarks/>
        public string Residents {
            get {
                return this.residentsField;
            }
            set {
                this.residentsField = value;
            }
        }
        
        /// <remarks/>
        public string Physician {
            get {
                return this.physicianField;
            }
            set {
                this.physicianField = value;
            }
        }
        
        /// <remarks/>
        public string Intern {
            get {
                return this.internField;
            }
            set {
                this.internField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentAddress {
            get {
                return this.currentAddressField;
            }
            set {
                this.currentAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentAddressPhoneNo {
            get {
                return this.currentAddressPhoneNoField;
            }
            set {
                this.currentAddressPhoneNoField = value;
            }
        }
        
        /// <remarks/>
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SurgeryDate {
            get {
                return this.surgeryDateField;
            }
            set {
                this.surgeryDateField = value;
            }
        }
        
        /// <remarks/>
        public string SurgeryName {
            get {
                return this.surgeryNameField;
            }
            set {
                this.surgeryNameField = value;
            }
        }
        
        /// <remarks/>
        public string SurgeonName {
            get {
                return this.surgeonNameField;
            }
            set {
                this.surgeonNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstAssistantName {
            get {
                return this.firstAssistantNameField;
            }
            set {
                this.firstAssistantNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResultCollectionOfListOfEmrMyPatients {
        
        private EmrMyPatients[] resultField;
        
        private int totalCountField;
        
        /// <remarks/>
        public EmrMyPatients[] Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDataReference {
        
        private string namespaceField;
        
        private string dataNameField;
        
        private string classNameField;
        
        private int inputTypeField;
        
        private string formatField;
        
        private int isReadonlyField;
        
        private string dataField;
        
        private object dataEntityField;
        
        private object paraField;
        
        /// <remarks/>
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        public string DataName {
            get {
                return this.dataNameField;
            }
            set {
                this.dataNameField = value;
            }
        }
        
        /// <remarks/>
        public string ClassName {
            get {
                return this.classNameField;
            }
            set {
                this.classNameField = value;
            }
        }
        
        /// <remarks/>
        public int InputType {
            get {
                return this.inputTypeField;
            }
            set {
                this.inputTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public int IsReadonly {
            get {
                return this.isReadonlyField;
            }
            set {
                this.isReadonlyField = value;
            }
        }
        
        /// <remarks/>
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public object DataEntity {
            get {
                return this.dataEntityField;
            }
            set {
                this.dataEntityField = value;
            }
        }
        
        /// <remarks/>
        public object Para {
            get {
                return this.paraField;
            }
            set {
                this.paraField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrServiceResult {
        
        private int errorCodeField;
        
        private string errorMessageField;
        
        private object resultField;
        
        private object result2Field;
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public object Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public object Result2 {
            get {
                return this.result2Field;
            }
            set {
                this.result2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrPatientsBasicInfo {
        
        private string admitNoField;
        
        private string cureNoField;
        
        private string patientNameField;
        
        private string ageField;
        
        private string bedNoField;
        
        private string deptCodeField;
        
        private string deptNameField;
        
        private string wardCodeField;
        
        private string wardNameField;
        
        private System.Nullable<System.DateTime> admitDateField;
        
        private System.Nullable<System.DateTime> leaveDateField;
        
        private string brztField;
        
        private string sexNameField;
        
        private string currentAddressField;
        
        private string currentAddressPhoneNoField;
        
        private int coverPageStatusField;
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string CureNo {
            get {
                return this.cureNoField;
            }
            set {
                this.cureNoField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string BedNo {
            get {
                return this.bedNoField;
            }
            set {
                this.bedNoField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WardName {
            get {
                return this.wardNameField;
            }
            set {
                this.wardNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.admitDateField;
            }
            set {
                this.admitDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDate {
            get {
                return this.leaveDateField;
            }
            set {
                this.leaveDateField = value;
            }
        }
        
        /// <remarks/>
        public string Brzt {
            get {
                return this.brztField;
            }
            set {
                this.brztField = value;
            }
        }
        
        /// <remarks/>
        public string SexName {
            get {
                return this.sexNameField;
            }
            set {
                this.sexNameField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentAddress {
            get {
                return this.currentAddressField;
            }
            set {
                this.currentAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentAddressPhoneNo {
            get {
                return this.currentAddressPhoneNoField;
            }
            set {
                this.currentAddressPhoneNoField = value;
            }
        }
        
        /// <remarks/>
        public int CoverPageStatus {
            get {
                return this.coverPageStatusField;
            }
            set {
                this.coverPageStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResultCollectionOfListOfEmrPatientsBasicInfo {
        
        private EmrPatientsBasicInfo[] resultField;
        
        private int totalCountField;
        
        /// <remarks/>
        public EmrPatientsBasicInfo[] Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrPatientsBasicInfoCondition {
        
        private string wardCodeField;
        
        private System.Nullable<System.DateTime> admitDateFrField;
        
        private System.Nullable<System.DateTime> admitDateToField;
        
        private System.Nullable<System.DateTime> leaveDateFrField;
        
        private System.Nullable<System.DateTime> leaveDateToField;
        
        private string admitNoField;
        
        private string userCodeField;
        
        private int coverPageStatusField;
        
        private string mainDiagnosisField;
        
        private string surgeryNameField;
        
        private CommonPageInfo pageInfoField;
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDateFr {
            get {
                return this.admitDateFrField;
            }
            set {
                this.admitDateFrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AdmitDateTo {
            get {
                return this.admitDateToField;
            }
            set {
                this.admitDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDateFr {
            get {
                return this.leaveDateFrField;
            }
            set {
                this.leaveDateFrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveDateTo {
            get {
                return this.leaveDateToField;
            }
            set {
                this.leaveDateToField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        public int CoverPageStatus {
            get {
                return this.coverPageStatusField;
            }
            set {
                this.coverPageStatusField = value;
            }
        }
        
        /// <remarks/>
        public string MainDiagnosis {
            get {
                return this.mainDiagnosisField;
            }
            set {
                this.mainDiagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string SurgeryName {
            get {
                return this.surgeryNameField;
            }
            set {
                this.surgeryNameField = value;
            }
        }
        
        /// <remarks/>
        public CommonPageInfo PageInfo {
            get {
                return this.pageInfoField;
            }
            set {
                this.pageInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResultCollectionOfListOfEmrDocBorrow {
        
        private EmrDocBorrow[] resultField;
        
        private int totalCountField;
        
        /// <remarks/>
        public EmrDocBorrow[] Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmrDocBorrowCondition {
        
        private string wardCodeField;
        
        private string admitNoField;
        
        private string userCodeField;
        
        private System.Nullable<System.DateTime> applyTimeStartField;
        
        private System.Nullable<System.DateTime> applyTimeEndField;
        
        private int applyStatusField;
        
        private CommonPageInfo pageInfoField;
        
        /// <remarks/>
        public string WardCode {
            get {
                return this.wardCodeField;
            }
            set {
                this.wardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AdmitNo {
            get {
                return this.admitNoField;
            }
            set {
                this.admitNoField = value;
            }
        }
        
        /// <remarks/>
        public string UserCode {
            get {
                return this.userCodeField;
            }
            set {
                this.userCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApplyTimeStart {
            get {
                return this.applyTimeStartField;
            }
            set {
                this.applyTimeStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ApplyTimeEnd {
            get {
                return this.applyTimeEndField;
            }
            set {
                this.applyTimeEndField = value;
            }
        }
        
        /// <remarks/>
        public int ApplyStatus {
            get {
                return this.applyStatusField;
            }
            set {
                this.applyStatusField = value;
            }
        }
        
        /// <remarks/>
        public CommonPageInfo PageInfo {
            get {
                return this.pageInfoField;
            }
            set {
                this.pageInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnumPatientCPInfo {
        
        /// <remarks/>
        clinicePathNotWay,
        
        /// <remarks/>
        clinicePathOnWay,
        
        /// <remarks/>
        QuitclinicePath,
        
        /// <remarks/>
        clinicePathFinish,
        
        /// <remarks/>
        VariationFinish,
        
        /// <remarks/>
        InOtherclinicePath,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EMRStatus {
        
        /// <remarks/>
        UnComplete,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        QulityControled,
        
        /// <remarks/>
        Coded,
        
        /// <remarks/>
        Filed,
        
        /// <remarks/>
        NewPatient,
        
        /// <remarks/>
        BeginWriting,
        
        /// <remarks/>
        Wrong,
        
        /// <remarks/>
        Invalid,
        
        /// <remarks/>
        Sealed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EMRStatusAction {
        
        /// <remarks/>
        CompleteEMR,
        
        /// <remarks/>
        CancelCompleteEMR,
        
        /// <remarks/>
        QulityControl,
        
        /// <remarks/>
        CancelQulityControl,
        
        /// <remarks/>
        CodeEMR,
        
        /// <remarks/>
        CancelCoded,
        
        /// <remarks/>
        FileEMR,
        
        /// <remarks/>
        RecallEMR,
        
        /// <remarks/>
        SetInvalid,
        
        /// <remarks/>
        SealEMR,
        
        /// <remarks/>
        UnSealEMR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddEmrDocBorrowCompletedEventHandler(object sender, AddEmrDocBorrowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmrDocBorrowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmrDocBorrowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateEmrDocBorrowCompletedEventHandler(object sender, UpdateEmrDocBorrowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrDocBorrowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrDocBorrowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocBorrowListCompletedEventHandler(object sender, GetEmrDocBorrowListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocBorrowListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocBorrowListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultCollectionOfListOfEmrDocBorrow Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultCollectionOfListOfEmrDocBorrow)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrPatientsBasicInfoByConditionCompletedEventHandler(object sender, GetEmrPatientsBasicInfoByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrPatientsBasicInfoByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrPatientsBasicInfoByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultCollectionOfListOfEmrPatientsBasicInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultCollectionOfListOfEmrPatientsBasicInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchApproveEmrDocBorrowCompletedEventHandler(object sender, BatchApproveEmrDocBorrowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchApproveEmrDocBorrowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchApproveEmrDocBorrowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchRevokedEmrDocBorrowCompletedEventHandler(object sender, BatchRevokedEmrDocBorrowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchRevokedEmrDocBorrowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchRevokedEmrDocBorrowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExistsValidityBorrowCompletedEventHandler(object sender, ExistsValidityBorrowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsValidityBorrowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsValidityBorrowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMyPatientInfoListForBorrowCompletedEventHandler(object sender, GetMyPatientInfoListForBorrowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyPatientInfoListForBorrowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyPatientInfoListForBorrowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultCollectionOfListOfEmrMyPatients Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultCollectionOfListOfEmrMyPatients)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageListCompletedEventHandler(object sender, GetMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetMessageReadedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetMessageReadedByGuidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MessageSynchronizeCompletedEventHandler(object sender, MessageSynchronizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageSynchronizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MessageSynchronizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInitTimeCompletedEventHandler(object sender, GetInitTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInitTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInitTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageEntityListCompletedEventHandler(object sender, GetMessageEntityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageEntityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageEntityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetUrgentMessageDocCreatedCompletedEventHandler(object sender, SetUrgentMessageDocCreatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUrgentMessageDocCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUrgentMessageDocCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateCalculatonRuleNameCompletedEventHandler(object sender, GetTemplateCalculatonRuleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateCalculatonRuleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateCalculatonRuleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryPatientInhosFeeCompletedEventHandler(object sender, QueryPatientInhosFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientInhosFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientInhosFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConmpareHisEMRDoctorQualifyDifferenceCompletedEventHandler(object sender, ConmpareHisEMRDoctorQualifyDifferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConmpareHisEMRDoctorQualifyDifferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConmpareHisEMRDoctorQualifyDifferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllTemplatexxxCompletedEventHandler(object sender, GetAllTemplatexxxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTemplatexxxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTemplatexxxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplatIdByNameCompletedEventHandler(object sender, GetTemplatIdByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplatIdByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplatIdByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetClinicePathByCurNoTwoCompletedEventHandler(object sender, GetClinicePathByCurNoTwoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicePathByCurNoTwoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicePathByCurNoTwoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateClinicePathInfoCompletedEventHandler(object sender, UpdateClinicePathInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClinicePathInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClinicePathInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetClinicePathInfoCompletedEventHandler(object sender, GetClinicePathInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicePathInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicePathInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetClinicePathStatusByCureNosCompletedEventHandler(object sender, GetClinicePathStatusByCureNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicePathStatusByCureNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicePathStatusByCureNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EnumPatientCPInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EnumPatientCPInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLisListCompletedEventHandler(object sender, GetLisListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLisListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLisListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrLis[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrLis[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLisResultCompletedEventHandler(object sender, GetLisResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLisResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLisResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrLisResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrLisResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLisResultMicroCompletedEventHandler(object sender, GetLisResultMicroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLisResultMicroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLisResultMicroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrListResultMicro[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrListResultMicro[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRisListCompletedEventHandler(object sender, GetRisListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRisListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRisListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrRis[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrRis[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRisResultCompletedEventHandler(object sender, GetRisResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRisResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRisResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrRisResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrRisResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRisInfoNewestCompletedEventHandler(object sender, GetRisInfoNewestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRisInfoNewestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRisInfoNewestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrRis Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrRis)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAbnormalLisResultCompletedEventHandler(object sender, GetAbnormalLisResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAbnormalLisResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAbnormalLisResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrLisResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrLisResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrQulityControlDeptStatusListCompletedEventHandler(object sender, GetEmrQulityControlDeptStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrQulityControlDeptStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrQulityControlDeptStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EMRStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EMRStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDocHtmlCompletedEventHandler(object sender, SaveEmrDocHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDocHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDocHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrDocHtmlCompletedEventHandler(object sender, DeleteEmrDocHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrDocHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrDocHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocHtmlCompletedEventHandler(object sender, GetEmrDocHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocHtml Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocHtml)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrChiefComplaintByCureNoCompletedEventHandler(object sender, GetEmrChiefComplaintByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrChiefComplaintByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrChiefComplaintByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrSpecialistInfoByCureNoCompletedEventHandler(object sender, GetEmrSpecialistInfoByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrSpecialistInfoByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrSpecialistInfoByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDocSectionContentCompletedEventHandler(object sender, SaveEmrDocSectionContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDocSectionContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDocSectionContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDocSectionContentsCompletedEventHandler(object sender, SaveEmrDocSectionContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDocSectionContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDocSectionContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionContentCompletedEventHandler(object sender, GetEmrDocSectionContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSectionContent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSectionContent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionContentListCompletedEventHandler(object sender, GetEmrDocSectionContentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionContentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionContentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSectionContent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSectionContent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionContentListByCureNoCompletedEventHandler(object sender, GetEmrDocSectionContentListByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionContentListByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionContentListByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSectionContent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSectionContent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionContentListByCureNoWithParamsCompletedEventHandler(object sender, GetEmrDocSectionContentListByCureNoWithParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionContentListByCureNoWithParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionContentListByCureNoWithParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSectionContent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSectionContent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDefaultWardCompletedEventHandler(object sender, GetEmrDefaultWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDefaultWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDefaultWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDefaultWard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDefaultWard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDefaultWardCompletedEventHandler(object sender, SaveEmrDefaultWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDefaultWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDefaultWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWSBOUrgentAlarmByWardCodeCompletedEventHandler(object sender, GetWSBOUrgentAlarmByWardCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWSBOUrgentAlarmByWardCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWSBOUrgentAlarmByWardCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSBOUrgentAlarm[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSBOUrgentAlarm[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUrgentAlarmProcessStatusByIdListCompletedEventHandler(object sender, UpdateUrgentAlarmProcessStatusByIdListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUrgentAlarmProcessStatusByIdListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUrgentAlarmProcessStatusByIdListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompletedEventHandler(object sender, UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUrgentAlarmProcessStatusByIdListWithDoctorInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocHistorysCompletedEventHandler(object sender, GetDocHistorysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocHistorysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocHistorysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocHistory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVisitListCompletedEventHandler(object sender, GetVisitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVisitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVisitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocHistory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrScoreTemplateByTypeCompletedEventHandler(object sender, GetEmrScoreTemplateByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrScoreTemplateByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrScoreTemplateByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrScoreTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrScoreTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrAutoScoreItemCompletedEventHandler(object sender, SaveEmrAutoScoreItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrAutoScoreItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrAutoScoreItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrAutoScoreItemListCompletedEventHandler(object sender, GetEmrAutoScoreItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrAutoScoreItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrAutoScoreItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrAutoScoreItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrAutoScoreItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetScoreCompletedEventHandler(object sender, GetScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetScoreResultCompletedEventHandler(object sender, GetScoreResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScoreResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScoreResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoScoreResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoScoreResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QualityControlCheckForAddDocCompletedEventHandler(object sender, QualityControlCheckForAddDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QualityControlCheckForAddDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QualityControlCheckForAddDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BizResultOfQualityControlResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BizResultOfQualityControlResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QualityControlCheckForAuditDocCompletedEventHandler(object sender, QualityControlCheckForAuditDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QualityControlCheckForAuditDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QualityControlCheckForAuditDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BizResultOfQualityControlResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BizResultOfQualityControlResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlResultCompletedEventHandler(object sender, GetQualityControlResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BizResultOfQualityControlResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BizResultOfQualityControlResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlResultBeforeExpiredCompletedEventHandler(object sender, GetQualityControlResultBeforeExpiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlResultBeforeExpiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlResultBeforeExpiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllQualityControlResultBeforeExpiredCompletedEventHandler(object sender, GetAllQualityControlResultBeforeExpiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllQualityControlResultBeforeExpiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllQualityControlResultBeforeExpiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateQualityControlReportTableCompletedEventHandler(object sender, UpdateQualityControlReportTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQualityControlReportTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQualityControlReportTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReportDataCompletedEventHandler(object sender, GetReportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSummaryReportCompletedEventHandler(object sender, GetSummaryReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSummaryReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSummaryReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReportByDepartNameCompletedEventHandler(object sender, GetReportByDepartNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportByDepartNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportByDepartNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoQualityControlRemindDataGeneratorCompletedEventHandler(object sender, AutoQualityControlRemindDataGeneratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoQualityControlRemindDataGeneratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoQualityControlRemindDataGeneratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetServerTimeCompletedEventHandler(object sender, GetServerTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SavePatResponseDoctorGroupCompletedEventHandler(object sender, SavePatResponseDoctorGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatResponseDoctorGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatResponseDoctorGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeletePatResponseDoctorGroupByDoctorGroupIdCompletedEventHandler(object sender, DeletePatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatResponseDoctorGroupByDoctorGroupIdCompletedEventHandler(object sender, GetPatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatResponseDoctorGroupByDoctorGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatResponseDoctorGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatResponseDoctorGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatResponseDoctorGroupByDeptCodeCompletedEventHandler(object sender, GetPatResponseDoctorGroupByDeptCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatResponseDoctorGroupByDeptCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatResponseDoctorGroupByDeptCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatResponseDoctorGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatResponseDoctorGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatResponseDoctorGroupByGroupNameCompletedEventHandler(object sender, GetPatResponseDoctorGroupByGroupNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatResponseDoctorGroupByGroupNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatResponseDoctorGroupByGroupNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatResponseDoctorGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatResponseDoctorGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompletedEventHandler(object sender, GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatResponseDoctorGroupsByTreatingPhysicianDoctorCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatResponseDoctorGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatResponseDoctorGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExistInPatientsCompletedEventHandler(object sender, ExistInPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistInPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistInPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrAffiliatedAccountCompletedEventHandler(object sender, SaveEmrAffiliatedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrAffiliatedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrAffiliatedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckEmrAffiliatedAccountCompletedEventHandler(object sender, CheckEmrAffiliatedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmrAffiliatedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmrAffiliatedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrAffiliatedAccountCompletedEventHandler(object sender, DeleteEmrAffiliatedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrAffiliatedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrAffiliatedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrAffiliatedAccountCompletedEventHandler(object sender, GetEmrAffiliatedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrAffiliatedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrAffiliatedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrAffiliatedAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrAffiliatedAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrAffiliatedAccountListCompletedEventHandler(object sender, GetEmrAffiliatedAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrAffiliatedAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrAffiliatedAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrAffiliatedAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrAffiliatedAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void EmrAffiliatedUserLoginForMsgCompletedEventHandler(object sender, EmrAffiliatedUserLoginForMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrAffiliatedUserLoginForMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrAffiliatedUserLoginForMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrAffiliatedAccountByAffCodeCompletedEventHandler(object sender, GetEmrAffiliatedAccountByAffCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrAffiliatedAccountByAffCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrAffiliatedAccountByAffCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrAffiliatedAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrAffiliatedAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrAffiliatedAccountListForLoginCompletedEventHandler(object sender, GetEmrAffiliatedAccountListForLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrAffiliatedAccountListForLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrAffiliatedAccountListForLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrAffiliatedAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrAffiliatedAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrQualityControlReminderListCompletedEventHandler(object sender, GetEmrQualityControlReminderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrQualityControlReminderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrQualityControlReminderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQualityControlReminder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQualityControlReminder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrQualityControlReminderCompletedEventHandler(object sender, SaveEmrQualityControlReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrQualityControlReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrQualityControlReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrQualityControlReminderCompletedEventHandler(object sender, DeleteEmrQualityControlReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrQualityControlReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrQualityControlReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExistEmrQualityControlReminderCompletedEventHandler(object sender, ExistEmrQualityControlReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistEmrQualityControlReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistEmrQualityControlReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateEmrQualityControlReminderListCompletedEventHandler(object sender, UpdateEmrQualityControlReminderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrQualityControlReminderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrQualityControlReminderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddQualityControlApplyCompletedEventHandler(object sender, AddQualityControlApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQualityControlApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQualityControlApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateQualityControlApplyCompletedEventHandler(object sender, UpdateQualityControlApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQualityControlApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQualityControlApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetQualityControlApplyCompletedEventHandler(object sender, SetQualityControlApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetQualityControlApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetQualityControlApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlApplyCompletedEventHandler(object sender, GetQualityControlApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QualityControlApply Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QualityControlApply)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlApplyByQcInfoCompletedEventHandler(object sender, GetQualityControlApplyByQcInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlApplyByQcInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlApplyByQcInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QualityControlApply Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QualityControlApply)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlApplyListCompletedEventHandler(object sender, GetQualityControlApplyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlApplyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlApplyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QualityControlApply[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QualityControlApply[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BatchApproveQualityControlApplyCompletedEventHandler(object sender, BatchApproveQualityControlApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchApproveQualityControlApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchApproveQualityControlApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMaxSortCompletedEventHandler(object sender, GetMaxSortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxSortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxSortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMaxCodeCompletedEventHandler(object sender, GetMaxCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateListWithAttributesCompletedEventHandler(object sender, GetTemplateListWithAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateListWithAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateListWithAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateAttributeListCompletedEventHandler(object sender, GetTemplateAttributeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateAttributeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateAttributeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateAttribute[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateAttribute[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTemplateAttributeCompletedEventHandler(object sender, SaveTemplateAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteTemplateAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateAttributeByTemplateIDCompletedEventHandler(object sender, GetTemplateAttributeByTemplateIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateAttributeByTemplateIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateAttributeByTemplateIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateAttribute Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateAttribute)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCommonDictionryListFirstDepthCompletedEventHandler(object sender, GetCommonDictionryListFirstDepthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonDictionryListFirstDepthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonDictionryListFirstDepthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonDictionry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonDictionry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCommonDictionryListCompletedEventHandler(object sender, GetCommonDictionryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonDictionryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonDictionryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonDictionry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonDictionry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveCommonDictionryCompletedEventHandler(object sender, SaveCommonDictionryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCommonDictionryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCommonDictionryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDepartmentCompletedEventHandler(object sender, GetDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDepartment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDepartment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchDoctorCompletedEventHandler(object sender, SearchDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDoctorQualify[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDoctorQualify[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDoctorQualifyCompletedEventHandler(object sender, SaveEmrDoctorQualifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDoctorQualifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDoctorQualifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddEmrDoctorQualifyCompletedEventHandler(object sender, AddEmrDoctorQualifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmrDoctorQualifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmrDoctorQualifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrDoctorQualifyCompletedEventHandler(object sender, DeleteEmrDoctorQualifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrDoctorQualifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrDoctorQualifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateEmrDoctorQualifyCompletedEventHandler(object sender, UpdateEmrDoctorQualifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrDoctorQualifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrDoctorQualifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchDoctorByDeptCompletedEventHandler(object sender, SearchDoctorByDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDoctorByDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDoctorByDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDoctorQualify[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDoctorQualify[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchQualifiedDoctorByWardCompletedEventHandler(object sender, SearchQualifiedDoctorByWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchQualifiedDoctorByWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchQualifiedDoctorByWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDoctorQualify[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDoctorQualify[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchByDoctorCompletedEventHandler(object sender, SearchByDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchByDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchByDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDoctorQualify[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDoctorQualify[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchDoctorByNameCompletedEventHandler(object sender, SearchDoctorByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDoctorByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDoctorByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDoctorQualify[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDoctorQualify[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLogByConditionCompletedEventHandler(object sender, GetLogByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Common_OperateLogInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Common_OperateLogInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOperateLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrQulityControlDeptByConditionCompletedEventHandler(object sender, GetEmrQulityControlDeptByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrQulityControlDeptByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrQulityControlDeptByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQulityControlDept[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQulityControlDept[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEMRStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateEMRStatusCompletedEventHandler(object sender, UpdateEMRStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEMRStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEMRStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveQulityControlDeptCompletedEventHandler(object sender, SaveQulityControlDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQulityControlDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQulityControlDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteQulityControlDeptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetDischaredPatientEmrDocStatusCompletedEventHandler(object sender, SetDischaredPatientEmrDocStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDischaredPatientEmrDocStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDischaredPatientEmrDocStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrQulityControlDeptCompletedEventHandler(object sender, GetEmrQulityControlDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrQulityControlDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrQulityControlDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQulityControlDept Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQulityControlDept)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrQulityControlDeptListCompletedEventHandler(object sender, GetEmrQulityControlDeptListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrQulityControlDeptListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrQulityControlDeptListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQulityControlDept[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQulityControlDept[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlDelaylistByWardNoCompletedEventHandler(object sender, GetQualityControlDelaylistByWardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlDelaylistByWardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlDelaylistByWardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQualityControlDelaylist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQualityControlDelaylist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrReviewListCompletedEventHandler(object sender, GetEmrReviewListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrReviewListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrReviewListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQulityControlDept[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQulityControlDept[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocReviewListCompletedEventHandler(object sender, GetDocReviewListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocReviewListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocReviewListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrQulityControlDocActivationListCompletedEventHandler(object sender, GetEmrQulityControlDocActivationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrQulityControlDocActivationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrQulityControlDocActivationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQulityControlDocActivation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQulityControlDocActivation[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ActivateDocCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrMyPatientsCompletedEventHandler(object sender, SaveEmrMyPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrMyPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrMyPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrMyPatientsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrMyPatientsCompletedEventHandler(object sender, GetEmrMyPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrMyPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrMyPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrMyPatients Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrMyPatients)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrMyPatientsListCompletedEventHandler(object sender, GetEmrMyPatientsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrMyPatientsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrMyPatientsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrMyPatients[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrMyPatients[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompletedEventHandler(object sender, GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPatientsByWardWhichIsLatestCureForMyPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocStatusListCompletedEventHandler(object sender, GetDocStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDict[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDict[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTreatDoctorsCompletedEventHandler(object sender, GetTreatDoctorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatDoctorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatDoctorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTreatDoctor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTreatDoctor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCPCureNosByStatusCompletedEventHandler(object sender, GetCPCureNosByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCPCureNosByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCPCureNosByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCPCureNoStatusListCompletedEventHandler(object sender, GetCPCureNoStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCPCureNoStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCPCureNoStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDict[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDict[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMyPatientInfoListCompletedEventHandler(object sender, GetMyPatientInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyPatientInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyPatientInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrMyPatients[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrMyPatients[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMyPatientInfoListByProcCompletedEventHandler(object sender, GetMyPatientInfoListByProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyPatientInfoListByProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyPatientInfoListByProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultCollectionOfListOfEmrMyPatients Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultCollectionOfListOfEmrMyPatients)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMyPatientCureNoListCompletedEventHandler(object sender, GetMyPatientCureNoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyPatientCureNoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyPatientCureNoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientInfoIntegratedListByProcCompletedEventHandler(object sender, GetPatientInfoIntegratedListByProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoIntegratedListByProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoIntegratedListByProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrMyPatients[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrMyPatients[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientInfoIntegratedListCompletedEventHandler(object sender, GetPatientInfoIntegratedListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoIntegratedListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoIntegratedListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrMyPatients[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrMyPatients[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMyInputAssistantTreeViewCompletedEventHandler(object sender, GetMyInputAssistantTreeViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyInputAssistantTreeViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyInputAssistantTreeViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGeneralSymbolCompletedEventHandler(object sender, GetGeneralSymbolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralSymbolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralSymbolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchEmrScoreTypeCompletedEventHandler(object sender, SearchEmrScoreTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchEmrScoreTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchEmrScoreTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrScoreType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrScoreType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrScoreTypeCompletedEventHandler(object sender, SaveEmrScoreTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrScoreTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrScoreTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrScoreTypeCompletedEventHandler(object sender, DeleteEmrScoreTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrScoreTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrScoreTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchEmrScoreByContitionCompletedEventHandler(object sender, SearchEmrScoreByContitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchEmrScoreByContitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchEmrScoreByContitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrScore[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrScore[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrScoreCompletedEventHandler(object sender, SaveEmrScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrScoreCompletedEventHandler(object sender, DeleteEmrScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrScoreListCompletedEventHandler(object sender, SaveEmrScoreListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrScoreListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrScoreListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrScoreRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrScoreRecordCompletedEventHandler(object sender, GetEmrScoreRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrScoreRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrScoreRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrScoreRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrScoreRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrScoreRecordCompletedEventHandler(object sender, SaveEmrScoreRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrScoreRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrScoreRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchScoreDocCompletedEventHandler(object sender, SearchScoreDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchScoreDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchScoreDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrScoreDoc[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrScoreDoc[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveScoreDocCompletedEventHandler(object sender, SaveScoreDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveScoreDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveScoreDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteScoreDocCompletedEventHandler(object sender, DeleteScoreDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScoreDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScoreDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrScoreRecordByCureNoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrScoreRecordByCureNoCompletedEventHandler(object sender, GetEmrScoreRecordByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrScoreRecordByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrScoreRecordByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrScoreRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrScoreRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetControlTimeConfigCompletedEventHandler(object sender, GetControlTimeConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetControlTimeConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetControlTimeConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQualityControlTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQualityControlTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlDelaylistByCureSectionCompletedEventHandler(object sender, GetQualityControlDelaylistByCureSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlDelaylistByCureSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlDelaylistByCureSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQualityControlDelaylist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQualityControlDelaylist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQualityControlDelaylistCompletedEventHandler(object sender, GetQualityControlDelaylistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityControlDelaylistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityControlDelaylistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQualityControlDelaylist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQualityControlDelaylist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddDelayItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateDelayItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddControlTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOperationDateFromHISCompletedEventHandler(object sender, GetOperationDateFromHISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationDateFromHISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationDateFromHISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddControlCompleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchControlCompleteCompletedEventHandler(object sender, SearchControlCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchControlCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchControlCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQualityControlComplete[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQualityControlComplete[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCompleteMaxIdCompletedEventHandler(object sender, GetCompleteMaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompleteMaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompleteMaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateCompleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteControlCompleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddContinueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchControlContinueCompletedEventHandler(object sender, SearchControlContinueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchControlContinueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchControlContinueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrQualityControlContinue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrQualityControlContinue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetContinueMaxIdCompletedEventHandler(object sender, GetContinueMaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContinueMaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContinueMaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateContinueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteControlContinueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveMedicalImageLibCompletedEventHandler(object sender, SaveMedicalImageLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMedicalImageLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMedicalImageLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteMedicalImageLibCompletedEventHandler(object sender, DeleteMedicalImageLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMedicalImageLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMedicalImageLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMedicalImageLibCompletedEventHandler(object sender, GetMedicalImageLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicalImageLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicalImageLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrAllergicHistoryByCureNoCompletedEventHandler(object sender, GetEmrAllergicHistoryByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrAllergicHistoryByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrAllergicHistoryByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrAllergicHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrAllergicHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrAllergicHistoryCompletedEventHandler(object sender, SaveEmrAllergicHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrAllergicHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrAllergicHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrAllergicHistoryCompletedEventHandler(object sender, DeleteEmrAllergicHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrAllergicHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrAllergicHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWebConifgValueCompletedEventHandler(object sender, GetWebConifgValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebConifgValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebConifgValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWebConnectionStringsValueCompletedEventHandler(object sender, GetWebConnectionStringsValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebConnectionStringsValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebConnectionStringsValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientInfoDateTimeCompletedEventHandler(object sender, GetPatientInfoDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEncryptDocCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetClinicePathByCurNoCompletedEventHandler(object sender, GetClinicePathByCurNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicePathByCurNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicePathByCurNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckUserIsInCPCompletedEventHandler(object sender, CheckUserIsInCPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserIsInCPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserIsInCPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMyPatientListCompletedEventHandler(object sender, GetMyPatientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyPatientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyPatientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMyHZPatientListCompletedEventHandler(object sender, GetMyHZPatientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyHZPatientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyHZPatientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWardCaseStatusCompletedEventHandler(object sender, GetWardCaseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWardCaseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWardCaseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTransferPatientViewWhichIsLatestCureCompletedEventHandler(object sender, GetTransferPatientViewWhichIsLatestCureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferPatientViewWhichIsLatestCureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferPatientViewWhichIsLatestCureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReadPhotoCompletedEventHandler(object sender, ReadPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAdmitNoByCureNoCompletedEventHandler(object sender, GetAdmitNoByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdmitNoByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdmitNoByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllPatientViewWhichIsLatestCureCompletedEventHandler(object sender, GetAllPatientViewWhichIsLatestCureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPatientViewWhichIsLatestCureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPatientViewWhichIsLatestCureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBedsWithPatientByWardCompletedEventHandler(object sender, GetBedsWithPatientByWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBedsWithPatientByWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBedsWithPatientByWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAddBedsByWardCompletedEventHandler(object sender, GetAddBedsByWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddBedsByWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddBedsByWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteAddBedsCompletedEventHandler(object sender, DeleteAddBedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAddBedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAddBedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertAddBedsCompletedEventHandler(object sender, InsertAddBedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAddBedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAddBedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTodayDischargedPatientCountByWardCompletedEventHandler(object sender, GetTodayDischargedPatientCountByWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTodayDischargedPatientCountByWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTodayDischargedPatientCountByWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientInfoByCureNoCompletedEventHandler(object sender, GetPatientInfoByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientInfoByCureNoListCompletedEventHandler(object sender, GetPatientInfoByCureNoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoByCureNoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoByCureNoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientBasicInfoByCureNoCompletedEventHandler(object sender, GetPatientBasicInfoByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientBasicInfoByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientBasicInfoByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllPatientInfoListCompletedEventHandler(object sender, GetAllPatientInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPatientInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPatientInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListAllWardCompletedEventHandler(object sender, ListAllWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCardNoCompletedEventHandler(object sender, GetCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PatientIsDischargeByCureNoCompletedEventHandler(object sender, PatientIsDischargeByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientIsDischargeByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientIsDischargeByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientExtendBaseDataSetCompletedEventHandler(object sender, GetPatientExtendBaseDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientExtendBaseDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientExtendBaseDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteCachedPatientsListByWardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientInfosByCureNosCompletedEventHandler(object sender, GetPatientInfosByCureNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfosByCureNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfosByCureNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCureNosByStatusCompletedEventHandler(object sender, GetCureNosByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCureNosByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCureNosByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPatientDiagnosisCompletedEventHandler(object sender, GetPatientDiagnosisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientDiagnosisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientDiagnosisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionsCompletedEventHandler(object sender, GetEmrDocSectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConnectDataForEmrWithParamCompletedEventHandler(object sender, ConnectDataForEmrWithParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectDataForEmrWithParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectDataForEmrWithParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrIdByCureNoCompletedEventHandler(object sender, GetEmrIdByCureNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrIdByCureNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrIdByCureNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionCompletedEventHandler(object sender, GetEmrDocSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionTitleListCompletedEventHandler(object sender, GetEmrDocSectionTitleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionTitleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionTitleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDocCompletedEventHandler(object sender, SaveEmrDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReviewEmrDocCompletedEventHandler(object sender, ReviewEmrDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReviewEmrDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReviewEmrDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrDocSectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocStructCompletedEventHandler(object sender, GetEmrDocStructCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocStructCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocStructCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocsByConditionCompletedEventHandler(object sender, GetDocsByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocsByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocsByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocsByCreateDateCompletedEventHandler(object sender, GetDocsByCreateDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocsByCreateDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocsByCreateDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDocSectionByTemplateCompletedEventHandler(object sender, GetEmrDocSectionByTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocSectionByTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocSectionByTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDocSection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDocSection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckDocExistedCompletedEventHandler(object sender, CheckDocExistedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDocExistedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDocExistedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDocPrintedCompletedEventHandler(object sender, SaveEmrDocPrintedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDocPrintedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDocPrintedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrDocPrintedListCompletedEventHandler(object sender, SaveEmrDocPrintedListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrDocPrintedListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrDocPrintedListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DocIsPrintedCompletedEventHandler(object sender, DocIsPrintedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocIsPrintedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocIsPrintedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCureNoByCheckerCodeCompletedEventHandler(object sender, GetCureNoByCheckerCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCureNoByCheckerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCureNoByCheckerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddEmrDocCheckCompletedEventHandler(object sender, AddEmrDocCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmrDocCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmrDocCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDepartmentListCompletedEventHandler(object sender, GetDepartmentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDepartment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDepartment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTypeStructureListCompletedEventHandler(object sender, GetTypeStructureListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeStructureListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeStructureListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTypeStructure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTypeStructure[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrTypeStructureCompletedEventHandler(object sender, SaveEmrTypeStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrTypeStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrTypeStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrTypeStructureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SerializeEmrDataReferenceCompletedEventHandler(object sender, SerializeEmrDataReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SerializeEmrDataReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SerializeEmrDataReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeserializeEmrDataReferenceCompletedEventHandler(object sender, DeserializeEmrDataReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeserializeEmrDataReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeserializeEmrDataReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDataReference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDataReference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTemplateCategoryCompletedEventHandler(object sender, SaveTemplateCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTemplateCompletedEventHandler(object sender, SaveTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrTemplateListCompletedEventHandler(object sender, GetEmrTemplateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllTemplateListWithContentCompletedEventHandler(object sender, GetAllTemplateListWithContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTemplateListWithContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTemplateListWithContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllTemplatesCompletedEventHandler(object sender, GetAllTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllTemplateSectionsCompletedEventHandler(object sender, GetAllTemplateSectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTemplateSectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTemplateSectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplateSection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplateSection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllElementsCompletedEventHandler(object sender, GetAllElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrTemplateCompletedEventHandler(object sender, GetEmrTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrTemplateSectionCompletedEventHandler(object sender, GetEmrTemplateSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrTemplateSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrTemplateSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplateSection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplateSection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTemplateBaseCategoryCompletedEventHandler(object sender, SaveTemplateBaseCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateBaseCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateBaseCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTemplateCategoryListCompletedEventHandler(object sender, SaveTemplateCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMaxTemplateBaseQueueNoCompletedEventHandler(object sender, GetMaxTemplateBaseQueueNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxTemplateBaseQueueNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxTemplateBaseQueueNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNearestQueueNoCompletedEventHandler(object sender, GetNearestQueueNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNearestQueueNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNearestQueueNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteTemplateBaseCompletedEventHandler(object sender, DeleteTemplateBaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTemplateBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTemplateBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrTemplateSectionListCompletedEventHandler(object sender, GetEmrTemplateSectionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrTemplateSectionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrTemplateSectionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplateSection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplateSection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTemplateSectionCategoryCompletedEventHandler(object sender, SaveTemplateSectionCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateSectionCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateSectionCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTemplateSectionCompletedEventHandler(object sender, SaveTemplateSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrTemplateSectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMaxQueueNoCompletedEventHandler(object sender, GetMaxQueueNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxQueueNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxQueueNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrElementListCompletedEventHandler(object sender, GetEmrElementListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrElementListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrElementListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrElementCompletedEventHandler(object sender, GetEmrElementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveElementCategoryCompletedEventHandler(object sender, SaveElementCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveElementCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveElementCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveElementCompletedEventHandler(object sender, SaveElementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteElementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDataReferenceListCompletedEventHandler(object sender, GetEmrDataReferenceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDataReferenceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDataReferenceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDataReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDataReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateRightListCompletedEventHandler(object sender, GetTemplateRightListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateRightListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateRightListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrTemplateRight[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrTemplateRight[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveEmrTTemplateRightCompletedEventHandler(object sender, SaveEmrTTemplateRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEmrTTemplateRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEmrTTemplateRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteEmrTemplateRightCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetEmrDictListCompletedEventHandler(object sender, GetEmrDictListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDictListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDictListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrDict[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrDict[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUsersDataRightListCompletedEventHandler(object sender, GetUsersDataRightListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersDataRightListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersDataRightListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UsersDataRight[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UsersDataRight[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUsersDataRightCompletedEventHandler(object sender, GetUsersDataRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersDataRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersDataRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UsersDataRight Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UsersDataRight)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveUsersDataRightCompletedEventHandler(object sender, SaveUsersDataRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUsersDataRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUsersDataRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddUsersDataRightCompletedEventHandler(object sender, AddUsersDataRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUsersDataRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUsersDataRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmrServiceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmrServiceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteUsersDataRightCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocRightCompletedEventHandler(object sender, GetDocRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591